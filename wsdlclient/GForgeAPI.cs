//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace GForgeDocWindow.GForgeAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GForgeAPIBinding", Namespace="http://gforgegroup.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CruisecontrolPublisher))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CruisecontrolBuildChangeUser))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CruisecontrolAssignee))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerQueryField))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerItemShort))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerItemRelation))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerItemDuplicate))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerMyQueue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerItemScmCommit))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerItemAssignee))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FrsReleaseStatus))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MemberWithRole))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProjectWithRole))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Role))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProjectTemplate))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DiskUsage))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Association))]
    public partial class GForgeAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAssociationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimezonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSOAPVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getThemesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getThemeArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getThemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLanguageArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountryCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountryCodeArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountryCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDiskUsagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserArrayByUnixNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserByUnixNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGroupUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGroupUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback activateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectArrayByUnixNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectByUnixNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProjectByUnixNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserProjectRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserProjectsWithRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProjectStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectMembersWithRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuditTrailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuditTrailArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuditTrailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilesystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilesystemArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilesystemDataArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilesystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilesystemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFilesystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFilesystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTagEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTagEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTagEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsPackageArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFrsPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFrsPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFrsPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsReleasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsReleaseArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFrsReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFrsReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFrsReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsReleaseStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFrsProjectSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsProjectSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFileArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocmanFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocmanFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDocmanFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFileVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFileVersionArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFileVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocmanFileVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDocmanFileVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFolderArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocmanFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocmanFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDocmanFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDocmanProjectSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocmanProjectSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerExtraFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerExtraFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerExtraFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldElementArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerExtraFieldElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerExtraFieldElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerExtraFieldElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldDatasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerExtraFieldDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerExtraFieldDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerExtraFieldDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemByExtraFieldDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemsNewerThanExtraFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemAssigneesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerItemAssigneeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerItemAssigneeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemAssigneeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemMessageArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerItemMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemScmCommitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemTimeArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerItemTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerItemTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerMyQueuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerMyQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemDuplicatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemDuplicateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerItemDuplicateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemRelationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerItemRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemsFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerItemFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerItemFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemsShortOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerQuerysOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerQueryArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemsByQueryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerItemsFullByQueryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerQueryFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerQueryFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerQueryFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerTechniciansOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerTimeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerTimeCodeArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerTimeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrackerTimeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTrackerTimeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrackerTimeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolAssigneesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCruisecontrolAssigneeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCruisecontrolAssigneeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolBuildChangeUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCruisecontrolBuildChangeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCruisecontrolBuildChangeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolBuildsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolBuildArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCruisecontrolBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCruisecontrolBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCruisecontrolBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolDefectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolDefectArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCruisecontrolDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCruisecontrolDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCruisecontrolDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolPublishersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCruisecontrolPublisherOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCruisecontrolPublisherOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCruisecontrolOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCruisecontrolOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCruisecontrolOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCruisecontrolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectScmArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectScmOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProjectScmOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProjectScmOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback addForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumThreadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumThreadArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateForumThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback addForumThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteForumThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumMessageArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateForumMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback addForumMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteForumMessageOperationCompleted;
        
        /// <remarks/>
        public GForgeAPI() {
            this.Url = "http://forge.iowa.gov/gf/xmlcompatibility/soap5/";
        }
        
        /// <remarks/>
        public event getAssociationsCompletedEventHandler getAssociationsCompleted;
        
        /// <remarks/>
        public event addAssociationCompletedEventHandler addAssociationCompleted;
        
        /// <remarks/>
        public event deleteAssociationCompletedEventHandler deleteAssociationCompleted;
        
        /// <remarks/>
        public event getTimezonesCompletedEventHandler getTimezonesCompleted;
        
        /// <remarks/>
        public event getSOAPVersionCompletedEventHandler getSOAPVersionCompleted;
        
        /// <remarks/>
        public event getServerTimeCompletedEventHandler getServerTimeCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event getThemesCompletedEventHandler getThemesCompleted;
        
        /// <remarks/>
        public event getThemeArrayCompletedEventHandler getThemeArrayCompleted;
        
        /// <remarks/>
        public event getThemeCompletedEventHandler getThemeCompleted;
        
        /// <remarks/>
        public event getLanguagesCompletedEventHandler getLanguagesCompleted;
        
        /// <remarks/>
        public event getLanguageArrayCompletedEventHandler getLanguageArrayCompleted;
        
        /// <remarks/>
        public event getLanguageCompletedEventHandler getLanguageCompleted;
        
        /// <remarks/>
        public event getCountryCodesCompletedEventHandler getCountryCodesCompleted;
        
        /// <remarks/>
        public event getCountryCodeArrayCompletedEventHandler getCountryCodeArrayCompleted;
        
        /// <remarks/>
        public event getCountryCodeCompletedEventHandler getCountryCodeCompleted;
        
        /// <remarks/>
        public event getDiskUsagesCompletedEventHandler getDiskUsagesCompleted;
        
        /// <remarks/>
        public event getUserArrayCompletedEventHandler getUserArrayCompleted;
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event getUserArrayByUnixNameCompletedEventHandler getUserArrayByUnixNameCompleted;
        
        /// <remarks/>
        public event getUserByUnixNameCompletedEventHandler getUserByUnixNameCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event getUserProjectsCompletedEventHandler getUserProjectsCompleted;
        
        /// <remarks/>
        public event addUserGroupCompletedEventHandler addUserGroupCompleted;
        
        /// <remarks/>
        public event getGroupUsersCompletedEventHandler getGroupUsersCompleted;
        
        /// <remarks/>
        public event addGroupUserCompletedEventHandler addGroupUserCompleted;
        
        /// <remarks/>
        public event deleteGroupUserCompletedEventHandler deleteGroupUserCompleted;
        
        /// <remarks/>
        public event activateUserCompletedEventHandler activateUserCompleted;
        
        /// <remarks/>
        public event getProjectTemplatesCompletedEventHandler getProjectTemplatesCompleted;
        
        /// <remarks/>
        public event getProjectsCompletedEventHandler getProjectsCompleted;
        
        /// <remarks/>
        public event getProjectArrayCompletedEventHandler getProjectArrayCompleted;
        
        /// <remarks/>
        public event getProjectArrayByUnixNameCompletedEventHandler getProjectArrayByUnixNameCompleted;
        
        /// <remarks/>
        public event getProjectCompletedEventHandler getProjectCompleted;
        
        /// <remarks/>
        public event getProjectByUnixNameCompletedEventHandler getProjectByUnixNameCompleted;
        
        /// <remarks/>
        public event deleteProjectCompletedEventHandler deleteProjectCompleted;
        
        /// <remarks/>
        public event deleteProjectByUnixNameCompletedEventHandler deleteProjectByUnixNameCompleted;
        
        /// <remarks/>
        public event updateProjectCompletedEventHandler updateProjectCompleted;
        
        /// <remarks/>
        public event addProjectCompletedEventHandler addProjectCompleted;
        
        /// <remarks/>
        public event approveProjectCompletedEventHandler approveProjectCompleted;
        
        /// <remarks/>
        public event getProjectMembersCompletedEventHandler getProjectMembersCompleted;
        
        /// <remarks/>
        public event addUserProjectCompletedEventHandler addUserProjectCompleted;
        
        /// <remarks/>
        public event deleteUserProjectCompletedEventHandler deleteUserProjectCompleted;
        
        /// <remarks/>
        public event getUserProjectRolesCompletedEventHandler getUserProjectRolesCompleted;
        
        /// <remarks/>
        public event getUserProjectsWithRolesCompletedEventHandler getUserProjectsWithRolesCompleted;
        
        /// <remarks/>
        public event getProjectRolesCompletedEventHandler getProjectRolesCompleted;
        
        /// <remarks/>
        public event updateProjectStatusCompletedEventHandler updateProjectStatusCompleted;
        
        /// <remarks/>
        public event getProjectMembersWithRolesCompletedEventHandler getProjectMembersWithRolesCompleted;
        
        /// <remarks/>
        public event getAuditTrailsCompletedEventHandler getAuditTrailsCompleted;
        
        /// <remarks/>
        public event getAuditTrailArrayCompletedEventHandler getAuditTrailArrayCompleted;
        
        /// <remarks/>
        public event getAuditTrailCompletedEventHandler getAuditTrailCompleted;
        
        /// <remarks/>
        public event getFilesystemsCompletedEventHandler getFilesystemsCompleted;
        
        /// <remarks/>
        public event getFilesystemArrayCompletedEventHandler getFilesystemArrayCompleted;
        
        /// <remarks/>
        public event getFilesystemDataArrayCompletedEventHandler getFilesystemDataArrayCompleted;
        
        /// <remarks/>
        public event getFilesystemCompletedEventHandler getFilesystemCompleted;
        
        /// <remarks/>
        public event getFilesystemDataCompletedEventHandler getFilesystemDataCompleted;
        
        /// <remarks/>
        public event deleteFilesystemCompletedEventHandler deleteFilesystemCompleted;
        
        /// <remarks/>
        public event addFilesystemCompletedEventHandler addFilesystemCompleted;
        
        /// <remarks/>
        public event getTagEntriesCompletedEventHandler getTagEntriesCompleted;
        
        /// <remarks/>
        public event deleteTagEntriesCompletedEventHandler deleteTagEntriesCompleted;
        
        /// <remarks/>
        public event addTagEntriesCompletedEventHandler addTagEntriesCompleted;
        
        /// <remarks/>
        public event getFrsPackagesCompletedEventHandler getFrsPackagesCompleted;
        
        /// <remarks/>
        public event getFrsPackageArrayCompletedEventHandler getFrsPackageArrayCompleted;
        
        /// <remarks/>
        public event getFrsPackageCompletedEventHandler getFrsPackageCompleted;
        
        /// <remarks/>
        public event deleteFrsPackageCompletedEventHandler deleteFrsPackageCompleted;
        
        /// <remarks/>
        public event updateFrsPackageCompletedEventHandler updateFrsPackageCompleted;
        
        /// <remarks/>
        public event addFrsPackageCompletedEventHandler addFrsPackageCompleted;
        
        /// <remarks/>
        public event getFrsReleasesCompletedEventHandler getFrsReleasesCompleted;
        
        /// <remarks/>
        public event getFrsReleaseArrayCompletedEventHandler getFrsReleaseArrayCompleted;
        
        /// <remarks/>
        public event getFrsReleaseCompletedEventHandler getFrsReleaseCompleted;
        
        /// <remarks/>
        public event deleteFrsReleaseCompletedEventHandler deleteFrsReleaseCompleted;
        
        /// <remarks/>
        public event updateFrsReleaseCompletedEventHandler updateFrsReleaseCompleted;
        
        /// <remarks/>
        public event addFrsReleaseCompletedEventHandler addFrsReleaseCompleted;
        
        /// <remarks/>
        public event getFrsReleaseStatusesCompletedEventHandler getFrsReleaseStatusesCompleted;
        
        /// <remarks/>
        public event setFrsProjectSettingsCompletedEventHandler setFrsProjectSettingsCompleted;
        
        /// <remarks/>
        public event getFrsProjectSettingsCompletedEventHandler getFrsProjectSettingsCompleted;
        
        /// <remarks/>
        public event getDocmanFilesCompletedEventHandler getDocmanFilesCompleted;
        
        /// <remarks/>
        public event getDocmanFileArrayCompletedEventHandler getDocmanFileArrayCompleted;
        
        /// <remarks/>
        public event getDocmanFileCompletedEventHandler getDocmanFileCompleted;
        
        /// <remarks/>
        public event deleteDocmanFileCompletedEventHandler deleteDocmanFileCompleted;
        
        /// <remarks/>
        public event updateDocmanFileCompletedEventHandler updateDocmanFileCompleted;
        
        /// <remarks/>
        public event addDocmanFileCompletedEventHandler addDocmanFileCompleted;
        
        /// <remarks/>
        public event getDocmanFileVersionsCompletedEventHandler getDocmanFileVersionsCompleted;
        
        /// <remarks/>
        public event getDocmanFileVersionArrayCompletedEventHandler getDocmanFileVersionArrayCompleted;
        
        /// <remarks/>
        public event getDocmanFileVersionCompletedEventHandler getDocmanFileVersionCompleted;
        
        /// <remarks/>
        public event deleteDocmanFileVersionCompletedEventHandler deleteDocmanFileVersionCompleted;
        
        /// <remarks/>
        public event addDocmanFileVersionCompletedEventHandler addDocmanFileVersionCompleted;
        
        /// <remarks/>
        public event getDocmanFoldersCompletedEventHandler getDocmanFoldersCompleted;
        
        /// <remarks/>
        public event getDocmanFolderArrayCompletedEventHandler getDocmanFolderArrayCompleted;
        
        /// <remarks/>
        public event getDocmanFolderCompletedEventHandler getDocmanFolderCompleted;
        
        /// <remarks/>
        public event deleteDocmanFolderCompletedEventHandler deleteDocmanFolderCompleted;
        
        /// <remarks/>
        public event updateDocmanFolderCompletedEventHandler updateDocmanFolderCompleted;
        
        /// <remarks/>
        public event addDocmanFolderCompletedEventHandler addDocmanFolderCompleted;
        
        /// <remarks/>
        public event setDocmanProjectSettingsCompletedEventHandler setDocmanProjectSettingsCompleted;
        
        /// <remarks/>
        public event getDocmanProjectSettingsCompletedEventHandler getDocmanProjectSettingsCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldsCompletedEventHandler getTrackerExtraFieldsCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldArrayCompletedEventHandler getTrackerExtraFieldArrayCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldCompletedEventHandler getTrackerExtraFieldCompleted;
        
        /// <remarks/>
        public event deleteTrackerExtraFieldCompletedEventHandler deleteTrackerExtraFieldCompleted;
        
        /// <remarks/>
        public event updateTrackerExtraFieldCompletedEventHandler updateTrackerExtraFieldCompleted;
        
        /// <remarks/>
        public event addTrackerExtraFieldCompletedEventHandler addTrackerExtraFieldCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldElementsCompletedEventHandler getTrackerExtraFieldElementsCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldElementArrayCompletedEventHandler getTrackerExtraFieldElementArrayCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldElementCompletedEventHandler getTrackerExtraFieldElementCompleted;
        
        /// <remarks/>
        public event deleteTrackerExtraFieldElementCompletedEventHandler deleteTrackerExtraFieldElementCompleted;
        
        /// <remarks/>
        public event updateTrackerExtraFieldElementCompletedEventHandler updateTrackerExtraFieldElementCompleted;
        
        /// <remarks/>
        public event addTrackerExtraFieldElementCompletedEventHandler addTrackerExtraFieldElementCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldDatasCompletedEventHandler getTrackerExtraFieldDatasCompleted;
        
        /// <remarks/>
        public event getTrackerExtraFieldDataCompletedEventHandler getTrackerExtraFieldDataCompleted;
        
        /// <remarks/>
        public event updateTrackerExtraFieldDataCompletedEventHandler updateTrackerExtraFieldDataCompleted;
        
        /// <remarks/>
        public event addTrackerExtraFieldDataCompletedEventHandler addTrackerExtraFieldDataCompleted;
        
        /// <remarks/>
        public event getTrackerItemByExtraFieldDataCompletedEventHandler getTrackerItemByExtraFieldDataCompleted;
        
        /// <remarks/>
        public event getTrackerItemsNewerThanExtraFieldCompletedEventHandler getTrackerItemsNewerThanExtraFieldCompleted;
        
        /// <remarks/>
        public event getTrackerItemAssigneesCompletedEventHandler getTrackerItemAssigneesCompleted;
        
        /// <remarks/>
        public event deleteTrackerItemAssigneeCompletedEventHandler deleteTrackerItemAssigneeCompleted;
        
        /// <remarks/>
        public event updateTrackerItemAssigneeCompletedEventHandler updateTrackerItemAssigneeCompleted;
        
        /// <remarks/>
        public event addTrackerItemAssigneeCompletedEventHandler addTrackerItemAssigneeCompleted;
        
        /// <remarks/>
        public event getTrackerItemMessagesCompletedEventHandler getTrackerItemMessagesCompleted;
        
        /// <remarks/>
        public event getTrackerItemMessageArrayCompletedEventHandler getTrackerItemMessageArrayCompleted;
        
        /// <remarks/>
        public event getTrackerItemMessageCompletedEventHandler getTrackerItemMessageCompleted;
        
        /// <remarks/>
        public event deleteTrackerItemMessageCompletedEventHandler deleteTrackerItemMessageCompleted;
        
        /// <remarks/>
        public event addTrackerItemMessageCompletedEventHandler addTrackerItemMessageCompleted;
        
        /// <remarks/>
        public event getTrackerItemScmCommitsCompletedEventHandler getTrackerItemScmCommitsCompleted;
        
        /// <remarks/>
        public event getTrackerItemTimesCompletedEventHandler getTrackerItemTimesCompleted;
        
        /// <remarks/>
        public event getTrackerItemTimeArrayCompletedEventHandler getTrackerItemTimeArrayCompleted;
        
        /// <remarks/>
        public event getTrackerItemTimeCompletedEventHandler getTrackerItemTimeCompleted;
        
        /// <remarks/>
        public event deleteTrackerItemTimeCompletedEventHandler deleteTrackerItemTimeCompleted;
        
        /// <remarks/>
        public event updateTrackerItemTimeCompletedEventHandler updateTrackerItemTimeCompleted;
        
        /// <remarks/>
        public event addTrackerItemTimeCompletedEventHandler addTrackerItemTimeCompleted;
        
        /// <remarks/>
        public event getTrackerMyQueuesCompletedEventHandler getTrackerMyQueuesCompleted;
        
        /// <remarks/>
        public event addTrackerMyQueueCompletedEventHandler addTrackerMyQueueCompleted;
        
        /// <remarks/>
        public event getTrackerItemDuplicatesCompletedEventHandler getTrackerItemDuplicatesCompleted;
        
        /// <remarks/>
        public event addTrackerItemDuplicateCompletedEventHandler addTrackerItemDuplicateCompleted;
        
        /// <remarks/>
        public event deleteTrackerItemDuplicateCompletedEventHandler deleteTrackerItemDuplicateCompleted;
        
        /// <remarks/>
        public event getTrackerItemRelationsCompletedEventHandler getTrackerItemRelationsCompleted;
        
        /// <remarks/>
        public event deleteTrackerItemRelationCompletedEventHandler deleteTrackerItemRelationCompleted;
        
        /// <remarks/>
        public event addTrackerItemRelationCompletedEventHandler addTrackerItemRelationCompleted;
        
        /// <remarks/>
        public event getTrackerItemsCompletedEventHandler getTrackerItemsCompleted;
        
        /// <remarks/>
        public event getTrackerItemsFullCompletedEventHandler getTrackerItemsFullCompleted;
        
        /// <remarks/>
        public event getTrackerItemArrayCompletedEventHandler getTrackerItemArrayCompleted;
        
        /// <remarks/>
        public event getTrackerItemCompletedEventHandler getTrackerItemCompleted;
        
        /// <remarks/>
        public event getTrackerItemFullCompletedEventHandler getTrackerItemFullCompleted;
        
        /// <remarks/>
        public event deleteTrackerItemCompletedEventHandler deleteTrackerItemCompleted;
        
        /// <remarks/>
        public event updateTrackerItemFullCompletedEventHandler updateTrackerItemFullCompleted;
        
        /// <remarks/>
        public event addTrackerItemCompletedEventHandler addTrackerItemCompleted;
        
        /// <remarks/>
        public event addTrackerItemFullCompletedEventHandler addTrackerItemFullCompleted;
        
        /// <remarks/>
        public event getTrackerItemsShortCompletedEventHandler getTrackerItemsShortCompleted;
        
        /// <remarks/>
        public event getTrackerQuerysCompletedEventHandler getTrackerQuerysCompleted;
        
        /// <remarks/>
        public event getTrackerQueryArrayCompletedEventHandler getTrackerQueryArrayCompleted;
        
        /// <remarks/>
        public event getTrackerQueryCompletedEventHandler getTrackerQueryCompleted;
        
        /// <remarks/>
        public event getTrackerItemsByQueryIdCompletedEventHandler getTrackerItemsByQueryIdCompleted;
        
        /// <remarks/>
        public event getTrackerItemsFullByQueryIdCompletedEventHandler getTrackerItemsFullByQueryIdCompleted;
        
        /// <remarks/>
        public event deleteTrackerQueryCompletedEventHandler deleteTrackerQueryCompleted;
        
        /// <remarks/>
        public event updateTrackerQueryCompletedEventHandler updateTrackerQueryCompleted;
        
        /// <remarks/>
        public event addTrackerQueryCompletedEventHandler addTrackerQueryCompleted;
        
        /// <remarks/>
        public event getTrackerQueryFieldsCompletedEventHandler getTrackerQueryFieldsCompleted;
        
        /// <remarks/>
        public event deleteTrackerQueryFieldCompletedEventHandler deleteTrackerQueryFieldCompleted;
        
        /// <remarks/>
        public event addTrackerQueryFieldCompletedEventHandler addTrackerQueryFieldCompleted;
        
        /// <remarks/>
        public event getTrackersCompletedEventHandler getTrackersCompleted;
        
        /// <remarks/>
        public event getTrackerArrayCompletedEventHandler getTrackerArrayCompleted;
        
        /// <remarks/>
        public event getTrackerCompletedEventHandler getTrackerCompleted;
        
        /// <remarks/>
        public event getTrackerFullCompletedEventHandler getTrackerFullCompleted;
        
        /// <remarks/>
        public event deleteTrackerCompletedEventHandler deleteTrackerCompleted;
        
        /// <remarks/>
        public event updateTrackerCompletedEventHandler updateTrackerCompleted;
        
        /// <remarks/>
        public event addTrackerCompletedEventHandler addTrackerCompleted;
        
        /// <remarks/>
        public event getTrackerTechniciansCompletedEventHandler getTrackerTechniciansCompleted;
        
        /// <remarks/>
        public event getTrackerTimeCodesCompletedEventHandler getTrackerTimeCodesCompleted;
        
        /// <remarks/>
        public event getTrackerTimeCodeArrayCompletedEventHandler getTrackerTimeCodeArrayCompleted;
        
        /// <remarks/>
        public event getTrackerTimeCodeCompletedEventHandler getTrackerTimeCodeCompleted;
        
        /// <remarks/>
        public event deleteTrackerTimeCodeCompletedEventHandler deleteTrackerTimeCodeCompleted;
        
        /// <remarks/>
        public event updateTrackerTimeCodeCompletedEventHandler updateTrackerTimeCodeCompleted;
        
        /// <remarks/>
        public event addTrackerTimeCodeCompletedEventHandler addTrackerTimeCodeCompleted;
        
        /// <remarks/>
        public event getCruisecontrolAssigneesCompletedEventHandler getCruisecontrolAssigneesCompleted;
        
        /// <remarks/>
        public event addCruisecontrolAssigneeCompletedEventHandler addCruisecontrolAssigneeCompleted;
        
        /// <remarks/>
        public event deleteCruisecontrolAssigneeCompletedEventHandler deleteCruisecontrolAssigneeCompleted;
        
        /// <remarks/>
        public event getCruisecontrolBuildChangeUsersCompletedEventHandler getCruisecontrolBuildChangeUsersCompleted;
        
        /// <remarks/>
        public event addCruisecontrolBuildChangeUserCompletedEventHandler addCruisecontrolBuildChangeUserCompleted;
        
        /// <remarks/>
        public event deleteCruisecontrolBuildChangeUserCompletedEventHandler deleteCruisecontrolBuildChangeUserCompleted;
        
        /// <remarks/>
        public event getCruisecontrolBuildsCompletedEventHandler getCruisecontrolBuildsCompleted;
        
        /// <remarks/>
        public event getCruisecontrolBuildArrayCompletedEventHandler getCruisecontrolBuildArrayCompleted;
        
        /// <remarks/>
        public event getCruisecontrolBuildCompletedEventHandler getCruisecontrolBuildCompleted;
        
        /// <remarks/>
        public event deleteCruisecontrolBuildCompletedEventHandler deleteCruisecontrolBuildCompleted;
        
        /// <remarks/>
        public event updateCruisecontrolBuildCompletedEventHandler updateCruisecontrolBuildCompleted;
        
        /// <remarks/>
        public event addCruisecontrolBuildCompletedEventHandler addCruisecontrolBuildCompleted;
        
        /// <remarks/>
        public event getCruisecontrolDefectsCompletedEventHandler getCruisecontrolDefectsCompleted;
        
        /// <remarks/>
        public event getCruisecontrolDefectArrayCompletedEventHandler getCruisecontrolDefectArrayCompleted;
        
        /// <remarks/>
        public event getCruisecontrolDefectCompletedEventHandler getCruisecontrolDefectCompleted;
        
        /// <remarks/>
        public event deleteCruisecontrolDefectCompletedEventHandler deleteCruisecontrolDefectCompleted;
        
        /// <remarks/>
        public event updateCruisecontrolDefectCompletedEventHandler updateCruisecontrolDefectCompleted;
        
        /// <remarks/>
        public event addCruisecontrolDefectCompletedEventHandler addCruisecontrolDefectCompleted;
        
        /// <remarks/>
        public event getCruisecontrolPublishersCompletedEventHandler getCruisecontrolPublishersCompleted;
        
        /// <remarks/>
        public event addCruisecontrolPublisherCompletedEventHandler addCruisecontrolPublisherCompleted;
        
        /// <remarks/>
        public event deleteCruisecontrolPublisherCompletedEventHandler deleteCruisecontrolPublisherCompleted;
        
        /// <remarks/>
        public event getCruisecontrolsCompletedEventHandler getCruisecontrolsCompleted;
        
        /// <remarks/>
        public event getCruisecontrolArrayCompletedEventHandler getCruisecontrolArrayCompleted;
        
        /// <remarks/>
        public event getCruisecontrolCompletedEventHandler getCruisecontrolCompleted;
        
        /// <remarks/>
        public event deleteCruisecontrolCompletedEventHandler deleteCruisecontrolCompleted;
        
        /// <remarks/>
        public event updateCruisecontrolCompletedEventHandler updateCruisecontrolCompleted;
        
        /// <remarks/>
        public event addCruisecontrolCompletedEventHandler addCruisecontrolCompleted;
        
        /// <remarks/>
        public event getProjectScmArrayCompletedEventHandler getProjectScmArrayCompleted;
        
        /// <remarks/>
        public event getProjectScmCompletedEventHandler getProjectScmCompleted;
        
        /// <remarks/>
        public event updateProjectScmCompletedEventHandler updateProjectScmCompleted;
        
        /// <remarks/>
        public event addProjectScmCompletedEventHandler addProjectScmCompleted;
        
        /// <remarks/>
        public event getForumsCompletedEventHandler getForumsCompleted;
        
        /// <remarks/>
        public event getForumArrayCompletedEventHandler getForumArrayCompleted;
        
        /// <remarks/>
        public event getForumCompletedEventHandler getForumCompleted;
        
        /// <remarks/>
        public event updateForumCompletedEventHandler updateForumCompleted;
        
        /// <remarks/>
        public event addForumCompletedEventHandler addForumCompleted;
        
        /// <remarks/>
        public event deleteForumCompletedEventHandler deleteForumCompleted;
        
        /// <remarks/>
        public event getForumThreadsCompletedEventHandler getForumThreadsCompleted;
        
        /// <remarks/>
        public event getForumThreadArrayCompletedEventHandler getForumThreadArrayCompleted;
        
        /// <remarks/>
        public event getForumThreadCompletedEventHandler getForumThreadCompleted;
        
        /// <remarks/>
        public event updateForumThreadCompletedEventHandler updateForumThreadCompleted;
        
        /// <remarks/>
        public event addForumThreadCompletedEventHandler addForumThreadCompleted;
        
        /// <remarks/>
        public event deleteForumThreadCompletedEventHandler deleteForumThreadCompleted;
        
        /// <remarks/>
        public event getForumMessagesCompletedEventHandler getForumMessagesCompleted;
        
        /// <remarks/>
        public event getForumMessageArrayCompletedEventHandler getForumMessageArrayCompleted;
        
        /// <remarks/>
        public event getForumMessageCompletedEventHandler getForumMessageCompleted;
        
        /// <remarks/>
        public event updateForumMessageCompletedEventHandler updateForumMessageCompleted;
        
        /// <remarks/>
        public event addForumMessageCompletedEventHandler addForumMessageCompleted;
        
        /// <remarks/>
        public event deleteForumMessageCompletedEventHandler deleteForumMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getAssociations", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAssociations")]
        public Association[] getAssociations(string sessionHash, string section, int ref_id) {
            object[] results = this.Invoke("getAssociations", new object[] {
                        sessionHash,
                        section,
                        ref_id});
            return ((Association[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAssociations(string sessionHash, string section, int ref_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAssociations", new object[] {
                        sessionHash,
                        section,
                        ref_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Association[] EndgetAssociations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Association[])(results[0]));
        }
        
        /// <remarks/>
        public void getAssociationsAsync(string sessionHash, string section, int ref_id) {
            this.getAssociationsAsync(sessionHash, section, ref_id, null);
        }
        
        /// <remarks/>
        public void getAssociationsAsync(string sessionHash, string section, int ref_id, object userState) {
            if ((this.getAssociationsOperationCompleted == null)) {
                this.getAssociationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssociationsOperationCompleted);
            }
            this.InvokeAsync("getAssociations", new object[] {
                        sessionHash,
                        section,
                        ref_id}, this.getAssociationsOperationCompleted, userState);
        }
        
        private void OngetAssociationsOperationCompleted(object arg) {
            if ((this.getAssociationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssociationsCompleted(this, new getAssociationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addAssociation", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addAssociation")]
        public int addAssociation(string sessionHash, string section, int ref_id, string to_section, int to_ref_id, string comment) {
            object[] results = this.Invoke("addAssociation", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        to_section,
                        to_ref_id,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddAssociation(string sessionHash, string section, int ref_id, string to_section, int to_ref_id, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addAssociation", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        to_section,
                        to_ref_id,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddAssociation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addAssociationAsync(string sessionHash, string section, int ref_id, string to_section, int to_ref_id, string comment) {
            this.addAssociationAsync(sessionHash, section, ref_id, to_section, to_ref_id, comment, null);
        }
        
        /// <remarks/>
        public void addAssociationAsync(string sessionHash, string section, int ref_id, string to_section, int to_ref_id, string comment, object userState) {
            if ((this.addAssociationOperationCompleted == null)) {
                this.addAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAssociationOperationCompleted);
            }
            this.InvokeAsync("addAssociation", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        to_section,
                        to_ref_id,
                        comment}, this.addAssociationOperationCompleted, userState);
        }
        
        private void OnaddAssociationOperationCompleted(object arg) {
            if ((this.addAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAssociationCompleted(this, new addAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteAssociation", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteAssociation")]
        public int deleteAssociation(string sessionHash, string section, int ref_id, string to_section, int to_ref_id) {
            object[] results = this.Invoke("deleteAssociation", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        to_section,
                        to_ref_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteAssociation(string sessionHash, string section, int ref_id, string to_section, int to_ref_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteAssociation", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        to_section,
                        to_ref_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteAssociation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAssociationAsync(string sessionHash, string section, int ref_id, string to_section, int to_ref_id) {
            this.deleteAssociationAsync(sessionHash, section, ref_id, to_section, to_ref_id, null);
        }
        
        /// <remarks/>
        public void deleteAssociationAsync(string sessionHash, string section, int ref_id, string to_section, int to_ref_id, object userState) {
            if ((this.deleteAssociationOperationCompleted == null)) {
                this.deleteAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAssociationOperationCompleted);
            }
            this.InvokeAsync("deleteAssociation", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        to_section,
                        to_ref_id}, this.deleteAssociationOperationCompleted, userState);
        }
        
        private void OndeleteAssociationOperationCompleted(object arg) {
            if ((this.deleteAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAssociationCompleted(this, new deleteAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTimezones", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTimezones")]
        public string[] getTimezones(string sessionHash) {
            object[] results = this.Invoke("getTimezones", new object[] {
                        sessionHash});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTimezones(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTimezones", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndgetTimezones(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTimezonesAsync(string sessionHash) {
            this.getTimezonesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getTimezonesAsync(string sessionHash, object userState) {
            if ((this.getTimezonesOperationCompleted == null)) {
                this.getTimezonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimezonesOperationCompleted);
            }
            this.InvokeAsync("getTimezones", new object[] {
                        sessionHash}, this.getTimezonesOperationCompleted, userState);
        }
        
        private void OngetTimezonesOperationCompleted(object arg) {
            if ((this.getTimezonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimezonesCompleted(this, new getTimezonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getSOAPVersion", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSOAPVersion")]
        public int getSOAPVersion(string sessionHash) {
            object[] results = this.Invoke("getSOAPVersion", new object[] {
                        sessionHash});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSOAPVersion(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSOAPVersion", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndgetSOAPVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getSOAPVersionAsync(string sessionHash) {
            this.getSOAPVersionAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getSOAPVersionAsync(string sessionHash, object userState) {
            if ((this.getSOAPVersionOperationCompleted == null)) {
                this.getSOAPVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSOAPVersionOperationCompleted);
            }
            this.InvokeAsync("getSOAPVersion", new object[] {
                        sessionHash}, this.getSOAPVersionOperationCompleted, userState);
        }
        
        private void OngetSOAPVersionOperationCompleted(object arg) {
            if ((this.getSOAPVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSOAPVersionCompleted(this, new getSOAPVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getServerTime", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getServerTime")]
        public string getServerTime(string sessionHash) {
            object[] results = this.Invoke("getServerTime", new object[] {
                        sessionHash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetServerTime(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getServerTime", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetServerTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServerTimeAsync(string sessionHash) {
            this.getServerTimeAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getServerTimeAsync(string sessionHash, object userState) {
            if ((this.getServerTimeOperationCompleted == null)) {
                this.getServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerTimeOperationCompleted);
            }
            this.InvokeAsync("getServerTime", new object[] {
                        sessionHash}, this.getServerTimeOperationCompleted, userState);
        }
        
        private void OngetServerTimeOperationCompleted(object arg) {
            if ((this.getServerTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerTimeCompleted(this, new getServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#login", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("login")]
        public string login(string userid, string passwd) {
            object[] results = this.Invoke("login", new object[] {
                        userid,
                        passwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(string userid, string passwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        userid,
                        passwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string userid, string passwd) {
            this.loginAsync(userid, passwd, null);
        }
        
        /// <remarks/>
        public void loginAsync(string userid, string passwd, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        userid,
                        passwd}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#logout", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("logout")]
        public string logout(string sessionHash) {
            object[] results = this.Invoke("logout", new object[] {
                        sessionHash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogout(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logout", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endlogout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string sessionHash) {
            this.logoutAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string sessionHash, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        sessionHash}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getThemes", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getThemes")]
        public Theme[] getThemes(string sessionHash) {
            object[] results = this.Invoke("getThemes", new object[] {
                        sessionHash});
            return ((Theme[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetThemes(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getThemes", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public Theme[] EndgetThemes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Theme[])(results[0]));
        }
        
        /// <remarks/>
        public void getThemesAsync(string sessionHash) {
            this.getThemesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getThemesAsync(string sessionHash, object userState) {
            if ((this.getThemesOperationCompleted == null)) {
                this.getThemesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThemesOperationCompleted);
            }
            this.InvokeAsync("getThemes", new object[] {
                        sessionHash}, this.getThemesOperationCompleted, userState);
        }
        
        private void OngetThemesOperationCompleted(object arg) {
            if ((this.getThemesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThemesCompleted(this, new getThemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTheme", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTheme")]
        public Theme[] getThemeArray(string sessionHash, int[] theme_id) {
            object[] results = this.Invoke("getThemeArray", new object[] {
                        sessionHash,
                        theme_id});
            return ((Theme[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetThemeArray(string sessionHash, int[] theme_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getThemeArray", new object[] {
                        sessionHash,
                        theme_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Theme[] EndgetThemeArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Theme[])(results[0]));
        }
        
        /// <remarks/>
        public void getThemeArrayAsync(string sessionHash, int[] theme_id) {
            this.getThemeArrayAsync(sessionHash, theme_id, null);
        }
        
        /// <remarks/>
        public void getThemeArrayAsync(string sessionHash, int[] theme_id, object userState) {
            if ((this.getThemeArrayOperationCompleted == null)) {
                this.getThemeArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThemeArrayOperationCompleted);
            }
            this.InvokeAsync("getThemeArray", new object[] {
                        sessionHash,
                        theme_id}, this.getThemeArrayOperationCompleted, userState);
        }
        
        private void OngetThemeArrayOperationCompleted(object arg) {
            if ((this.getThemeArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThemeArrayCompleted(this, new getThemeArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTheme", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTheme")]
        public Theme getTheme(string sessionHash, int theme_id) {
            object[] results = this.Invoke("getTheme", new object[] {
                        sessionHash,
                        theme_id});
            return ((Theme)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTheme(string sessionHash, int theme_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTheme", new object[] {
                        sessionHash,
                        theme_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Theme EndgetTheme(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Theme)(results[0]));
        }
        
        /// <remarks/>
        public void getThemeAsync(string sessionHash, int theme_id) {
            this.getThemeAsync(sessionHash, theme_id, null);
        }
        
        /// <remarks/>
        public void getThemeAsync(string sessionHash, int theme_id, object userState) {
            if ((this.getThemeOperationCompleted == null)) {
                this.getThemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThemeOperationCompleted);
            }
            this.InvokeAsync("getTheme", new object[] {
                        sessionHash,
                        theme_id}, this.getThemeOperationCompleted, userState);
        }
        
        private void OngetThemeOperationCompleted(object arg) {
            if ((this.getThemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThemeCompleted(this, new getThemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getLanguages", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLanguages")]
        public Language[] getLanguages(string sessionHash) {
            object[] results = this.Invoke("getLanguages", new object[] {
                        sessionHash});
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLanguages(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getLanguages", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public Language[] EndgetLanguages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public void getLanguagesAsync(string sessionHash) {
            this.getLanguagesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getLanguagesAsync(string sessionHash, object userState) {
            if ((this.getLanguagesOperationCompleted == null)) {
                this.getLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLanguagesOperationCompleted);
            }
            this.InvokeAsync("getLanguages", new object[] {
                        sessionHash}, this.getLanguagesOperationCompleted, userState);
        }
        
        private void OngetLanguagesOperationCompleted(object arg) {
            if ((this.getLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLanguagesCompleted(this, new getLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getLanguage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLanguage")]
        public Language[] getLanguageArray(string sessionHash, int[] language_id) {
            object[] results = this.Invoke("getLanguageArray", new object[] {
                        sessionHash,
                        language_id});
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLanguageArray(string sessionHash, int[] language_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getLanguageArray", new object[] {
                        sessionHash,
                        language_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Language[] EndgetLanguageArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public void getLanguageArrayAsync(string sessionHash, int[] language_id) {
            this.getLanguageArrayAsync(sessionHash, language_id, null);
        }
        
        /// <remarks/>
        public void getLanguageArrayAsync(string sessionHash, int[] language_id, object userState) {
            if ((this.getLanguageArrayOperationCompleted == null)) {
                this.getLanguageArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLanguageArrayOperationCompleted);
            }
            this.InvokeAsync("getLanguageArray", new object[] {
                        sessionHash,
                        language_id}, this.getLanguageArrayOperationCompleted, userState);
        }
        
        private void OngetLanguageArrayOperationCompleted(object arg) {
            if ((this.getLanguageArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLanguageArrayCompleted(this, new getLanguageArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getLanguage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLanguage")]
        public Language getLanguage(string sessionHash, int language_id) {
            object[] results = this.Invoke("getLanguage", new object[] {
                        sessionHash,
                        language_id});
            return ((Language)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLanguage(string sessionHash, int language_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getLanguage", new object[] {
                        sessionHash,
                        language_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Language EndgetLanguage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Language)(results[0]));
        }
        
        /// <remarks/>
        public void getLanguageAsync(string sessionHash, int language_id) {
            this.getLanguageAsync(sessionHash, language_id, null);
        }
        
        /// <remarks/>
        public void getLanguageAsync(string sessionHash, int language_id, object userState) {
            if ((this.getLanguageOperationCompleted == null)) {
                this.getLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLanguageOperationCompleted);
            }
            this.InvokeAsync("getLanguage", new object[] {
                        sessionHash,
                        language_id}, this.getLanguageOperationCompleted, userState);
        }
        
        private void OngetLanguageOperationCompleted(object arg) {
            if ((this.getLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLanguageCompleted(this, new getLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCountryCodes", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountryCodes")]
        public CountryCode[] getCountryCodes(string sessionHash) {
            object[] results = this.Invoke("getCountryCodes", new object[] {
                        sessionHash});
            return ((CountryCode[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCountryCodes(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCountryCodes", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public CountryCode[] EndgetCountryCodes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryCode[])(results[0]));
        }
        
        /// <remarks/>
        public void getCountryCodesAsync(string sessionHash) {
            this.getCountryCodesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getCountryCodesAsync(string sessionHash, object userState) {
            if ((this.getCountryCodesOperationCompleted == null)) {
                this.getCountryCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountryCodesOperationCompleted);
            }
            this.InvokeAsync("getCountryCodes", new object[] {
                        sessionHash}, this.getCountryCodesOperationCompleted, userState);
        }
        
        private void OngetCountryCodesOperationCompleted(object arg) {
            if ((this.getCountryCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountryCodesCompleted(this, new getCountryCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCountryCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountryCode")]
        public CountryCode[] getCountryCodeArray(string sessionHash, string[] ccode) {
            object[] results = this.Invoke("getCountryCodeArray", new object[] {
                        sessionHash,
                        ccode});
            return ((CountryCode[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCountryCodeArray(string sessionHash, string[] ccode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCountryCodeArray", new object[] {
                        sessionHash,
                        ccode}, callback, asyncState);
        }
        
        /// <remarks/>
        public CountryCode[] EndgetCountryCodeArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryCode[])(results[0]));
        }
        
        /// <remarks/>
        public void getCountryCodeArrayAsync(string sessionHash, string[] ccode) {
            this.getCountryCodeArrayAsync(sessionHash, ccode, null);
        }
        
        /// <remarks/>
        public void getCountryCodeArrayAsync(string sessionHash, string[] ccode, object userState) {
            if ((this.getCountryCodeArrayOperationCompleted == null)) {
                this.getCountryCodeArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountryCodeArrayOperationCompleted);
            }
            this.InvokeAsync("getCountryCodeArray", new object[] {
                        sessionHash,
                        ccode}, this.getCountryCodeArrayOperationCompleted, userState);
        }
        
        private void OngetCountryCodeArrayOperationCompleted(object arg) {
            if ((this.getCountryCodeArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountryCodeArrayCompleted(this, new getCountryCodeArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCountryCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountryCode")]
        public CountryCode getCountryCode(string sessionHash, string ccode) {
            object[] results = this.Invoke("getCountryCode", new object[] {
                        sessionHash,
                        ccode});
            return ((CountryCode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCountryCode(string sessionHash, string ccode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCountryCode", new object[] {
                        sessionHash,
                        ccode}, callback, asyncState);
        }
        
        /// <remarks/>
        public CountryCode EndgetCountryCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryCode)(results[0]));
        }
        
        /// <remarks/>
        public void getCountryCodeAsync(string sessionHash, string ccode) {
            this.getCountryCodeAsync(sessionHash, ccode, null);
        }
        
        /// <remarks/>
        public void getCountryCodeAsync(string sessionHash, string ccode, object userState) {
            if ((this.getCountryCodeOperationCompleted == null)) {
                this.getCountryCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountryCodeOperationCompleted);
            }
            this.InvokeAsync("getCountryCode", new object[] {
                        sessionHash,
                        ccode}, this.getCountryCodeOperationCompleted, userState);
        }
        
        private void OngetCountryCodeOperationCompleted(object arg) {
            if ((this.getCountryCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountryCodeCompleted(this, new getCountryCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDiskUsages", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDiskUsages")]
        public DiskUsage[] getDiskUsages(string sessionHash, string project_unix_name, string check_date) {
            object[] results = this.Invoke("getDiskUsages", new object[] {
                        sessionHash,
                        project_unix_name,
                        check_date});
            return ((DiskUsage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDiskUsages(string sessionHash, string project_unix_name, string check_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDiskUsages", new object[] {
                        sessionHash,
                        project_unix_name,
                        check_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public DiskUsage[] EndgetDiskUsages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DiskUsage[])(results[0]));
        }
        
        /// <remarks/>
        public void getDiskUsagesAsync(string sessionHash, string project_unix_name, string check_date) {
            this.getDiskUsagesAsync(sessionHash, project_unix_name, check_date, null);
        }
        
        /// <remarks/>
        public void getDiskUsagesAsync(string sessionHash, string project_unix_name, string check_date, object userState) {
            if ((this.getDiskUsagesOperationCompleted == null)) {
                this.getDiskUsagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDiskUsagesOperationCompleted);
            }
            this.InvokeAsync("getDiskUsages", new object[] {
                        sessionHash,
                        project_unix_name,
                        check_date}, this.getDiskUsagesOperationCompleted, userState);
        }
        
        private void OngetDiskUsagesOperationCompleted(object arg) {
            if ((this.getDiskUsagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDiskUsagesCompleted(this, new getDiskUsagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUser")]
        public User[] getUserArray(string sessionHash, int[] user_ids) {
            object[] results = this.Invoke("getUserArray", new object[] {
                        sessionHash,
                        user_ids});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserArray(string sessionHash, int[] user_ids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserArray", new object[] {
                        sessionHash,
                        user_ids}, callback, asyncState);
        }
        
        /// <remarks/>
        public User[] EndgetUserArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserArrayAsync(string sessionHash, int[] user_ids) {
            this.getUserArrayAsync(sessionHash, user_ids, null);
        }
        
        /// <remarks/>
        public void getUserArrayAsync(string sessionHash, int[] user_ids, object userState) {
            if ((this.getUserArrayOperationCompleted == null)) {
                this.getUserArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserArrayOperationCompleted);
            }
            this.InvokeAsync("getUserArray", new object[] {
                        sessionHash,
                        user_ids}, this.getUserArrayOperationCompleted, userState);
        }
        
        private void OngetUserArrayOperationCompleted(object arg) {
            if ((this.getUserArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserArrayCompleted(this, new getUserArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUser")]
        public User getUser(string sessionHash, int user_id) {
            object[] results = this.Invoke("getUser", new object[] {
                        sessionHash,
                        user_id});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUser(string sessionHash, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUser", new object[] {
                        sessionHash,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public User EndgetUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync(string sessionHash, int user_id) {
            this.getUserAsync(sessionHash, user_id, null);
        }
        
        /// <remarks/>
        public void getUserAsync(string sessionHash, int user_id, object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[] {
                        sessionHash,
                        user_id}, this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUserArrayByUnixName", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserArrayByUnixName")]
        public User[] getUserArrayByUnixName(string sessionHash, string[] unix_names) {
            object[] results = this.Invoke("getUserArrayByUnixName", new object[] {
                        sessionHash,
                        unix_names});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserArrayByUnixName(string sessionHash, string[] unix_names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserArrayByUnixName", new object[] {
                        sessionHash,
                        unix_names}, callback, asyncState);
        }
        
        /// <remarks/>
        public User[] EndgetUserArrayByUnixName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserArrayByUnixNameAsync(string sessionHash, string[] unix_names) {
            this.getUserArrayByUnixNameAsync(sessionHash, unix_names, null);
        }
        
        /// <remarks/>
        public void getUserArrayByUnixNameAsync(string sessionHash, string[] unix_names, object userState) {
            if ((this.getUserArrayByUnixNameOperationCompleted == null)) {
                this.getUserArrayByUnixNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserArrayByUnixNameOperationCompleted);
            }
            this.InvokeAsync("getUserArrayByUnixName", new object[] {
                        sessionHash,
                        unix_names}, this.getUserArrayByUnixNameOperationCompleted, userState);
        }
        
        private void OngetUserArrayByUnixNameOperationCompleted(object arg) {
            if ((this.getUserArrayByUnixNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserArrayByUnixNameCompleted(this, new getUserArrayByUnixNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUserByUnixName", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserByUnixName")]
        public User getUserByUnixName(string sessionHash, string unix_name) {
            object[] results = this.Invoke("getUserByUnixName", new object[] {
                        sessionHash,
                        unix_name});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserByUnixName(string sessionHash, string unix_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserByUnixName", new object[] {
                        sessionHash,
                        unix_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public User EndgetUserByUnixName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void getUserByUnixNameAsync(string sessionHash, string unix_name) {
            this.getUserByUnixNameAsync(sessionHash, unix_name, null);
        }
        
        /// <remarks/>
        public void getUserByUnixNameAsync(string sessionHash, string unix_name, object userState) {
            if ((this.getUserByUnixNameOperationCompleted == null)) {
                this.getUserByUnixNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserByUnixNameOperationCompleted);
            }
            this.InvokeAsync("getUserByUnixName", new object[] {
                        sessionHash,
                        unix_name}, this.getUserByUnixNameOperationCompleted, userState);
        }
        
        private void OngetUserByUnixNameOperationCompleted(object arg) {
            if ((this.getUserByUnixNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserByUnixNameCompleted(this, new getUserByUnixNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteUser")]
        public int deleteUser(string sessionHash, int user_id) {
            object[] results = this.Invoke("deleteUser", new object[] {
                        sessionHash,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteUser(string sessionHash, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteUser", new object[] {
                        sessionHash,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAsync(string sessionHash, int user_id) {
            this.deleteUserAsync(sessionHash, user_id, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string sessionHash, int user_id, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        sessionHash,
                        user_id}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUsers", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addUser")]
        public int addUser(
                    string sessionHash, 
                    string unix_name, 
                    string email, 
                    string password, 
                    string timezone, 
                    string date_format, 
                    string address, 
                    string address2, 
                    string phone, 
                    string fax, 
                    string title, 
                    string firstname, 
                    string lastname, 
                    string country_code, 
                    int language_id, 
                    int theme_id, 
                    string user_text1, 
                    string user_text2, 
                    string user_text3, 
                    string user_text4, 
                    string user_text5, 
                    string user_text6, 
                    bool is_group) {
            object[] results = this.Invoke("addUser", new object[] {
                        sessionHash,
                        unix_name,
                        email,
                        password,
                        timezone,
                        date_format,
                        address,
                        address2,
                        phone,
                        fax,
                        title,
                        firstname,
                        lastname,
                        country_code,
                        language_id,
                        theme_id,
                        user_text1,
                        user_text2,
                        user_text3,
                        user_text4,
                        user_text5,
                        user_text6,
                        is_group});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUser(
                    string sessionHash, 
                    string unix_name, 
                    string email, 
                    string password, 
                    string timezone, 
                    string date_format, 
                    string address, 
                    string address2, 
                    string phone, 
                    string fax, 
                    string title, 
                    string firstname, 
                    string lastname, 
                    string country_code, 
                    int language_id, 
                    int theme_id, 
                    string user_text1, 
                    string user_text2, 
                    string user_text3, 
                    string user_text4, 
                    string user_text5, 
                    string user_text6, 
                    bool is_group, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("addUser", new object[] {
                        sessionHash,
                        unix_name,
                        email,
                        password,
                        timezone,
                        date_format,
                        address,
                        address2,
                        phone,
                        fax,
                        title,
                        firstname,
                        lastname,
                        country_code,
                        language_id,
                        theme_id,
                        user_text1,
                        user_text2,
                        user_text3,
                        user_text4,
                        user_text5,
                        user_text6,
                        is_group}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addUserAsync(
                    string sessionHash, 
                    string unix_name, 
                    string email, 
                    string password, 
                    string timezone, 
                    string date_format, 
                    string address, 
                    string address2, 
                    string phone, 
                    string fax, 
                    string title, 
                    string firstname, 
                    string lastname, 
                    string country_code, 
                    int language_id, 
                    int theme_id, 
                    string user_text1, 
                    string user_text2, 
                    string user_text3, 
                    string user_text4, 
                    string user_text5, 
                    string user_text6, 
                    bool is_group) {
            this.addUserAsync(sessionHash, unix_name, email, password, timezone, date_format, address, address2, phone, fax, title, firstname, lastname, country_code, language_id, theme_id, user_text1, user_text2, user_text3, user_text4, user_text5, user_text6, is_group, null);
        }
        
        /// <remarks/>
        public void addUserAsync(
                    string sessionHash, 
                    string unix_name, 
                    string email, 
                    string password, 
                    string timezone, 
                    string date_format, 
                    string address, 
                    string address2, 
                    string phone, 
                    string fax, 
                    string title, 
                    string firstname, 
                    string lastname, 
                    string country_code, 
                    int language_id, 
                    int theme_id, 
                    string user_text1, 
                    string user_text2, 
                    string user_text3, 
                    string user_text4, 
                    string user_text5, 
                    string user_text6, 
                    bool is_group, 
                    object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        sessionHash,
                        unix_name,
                        email,
                        password,
                        timezone,
                        date_format,
                        address,
                        address2,
                        phone,
                        fax,
                        title,
                        firstname,
                        lastname,
                        country_code,
                        language_id,
                        theme_id,
                        user_text1,
                        user_text2,
                        user_text3,
                        user_text4,
                        user_text5,
                        user_text6,
                        is_group}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new addUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUserProjects", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserProjects")]
        public Project[] getUserProjects(string sessionHash, string unix_name) {
            object[] results = this.Invoke("getUserProjects", new object[] {
                        sessionHash,
                        unix_name});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserProjects(string sessionHash, string unix_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserProjects", new object[] {
                        sessionHash,
                        unix_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public Project[] EndgetUserProjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserProjectsAsync(string sessionHash, string unix_name) {
            this.getUserProjectsAsync(sessionHash, unix_name, null);
        }
        
        /// <remarks/>
        public void getUserProjectsAsync(string sessionHash, string unix_name, object userState) {
            if ((this.getUserProjectsOperationCompleted == null)) {
                this.getUserProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserProjectsOperationCompleted);
            }
            this.InvokeAsync("getUserProjects", new object[] {
                        sessionHash,
                        unix_name}, this.getUserProjectsOperationCompleted, userState);
        }
        
        private void OngetUserProjectsOperationCompleted(object arg) {
            if ((this.getUserProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserProjectsCompleted(this, new getUserProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addUserGroup", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addUserGroup")]
        public int addUserGroup(string sessionHash, string group_name, string group_unix_name) {
            object[] results = this.Invoke("addUserGroup", new object[] {
                        sessionHash,
                        group_name,
                        group_unix_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUserGroup(string sessionHash, string group_name, string group_unix_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUserGroup", new object[] {
                        sessionHash,
                        group_name,
                        group_unix_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddUserGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addUserGroupAsync(string sessionHash, string group_name, string group_unix_name) {
            this.addUserGroupAsync(sessionHash, group_name, group_unix_name, null);
        }
        
        /// <remarks/>
        public void addUserGroupAsync(string sessionHash, string group_name, string group_unix_name, object userState) {
            if ((this.addUserGroupOperationCompleted == null)) {
                this.addUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserGroupOperationCompleted);
            }
            this.InvokeAsync("addUserGroup", new object[] {
                        sessionHash,
                        group_name,
                        group_unix_name}, this.addUserGroupOperationCompleted, userState);
        }
        
        private void OnaddUserGroupOperationCompleted(object arg) {
            if ((this.addUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserGroupCompleted(this, new addUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getGroupUsers", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getGroupUsers")]
        public int[] getGroupUsers(string sessionHash, int group_id) {
            object[] results = this.Invoke("getGroupUsers", new object[] {
                        sessionHash,
                        group_id});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetGroupUsers(string sessionHash, int group_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getGroupUsers", new object[] {
                        sessionHash,
                        group_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndgetGroupUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getGroupUsersAsync(string sessionHash, int group_id) {
            this.getGroupUsersAsync(sessionHash, group_id, null);
        }
        
        /// <remarks/>
        public void getGroupUsersAsync(string sessionHash, int group_id, object userState) {
            if ((this.getGroupUsersOperationCompleted == null)) {
                this.getGroupUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupUsersOperationCompleted);
            }
            this.InvokeAsync("getGroupUsers", new object[] {
                        sessionHash,
                        group_id}, this.getGroupUsersOperationCompleted, userState);
        }
        
        private void OngetGroupUsersOperationCompleted(object arg) {
            if ((this.getGroupUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupUsersCompleted(this, new getGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addGroupUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addGroupUser")]
        public int[] addGroupUser(string sessionHash, int group_id, int[] user_ids) {
            object[] results = this.Invoke("addGroupUser", new object[] {
                        sessionHash,
                        group_id,
                        user_ids});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddGroupUser(string sessionHash, int group_id, int[] user_ids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addGroupUser", new object[] {
                        sessionHash,
                        group_id,
                        user_ids}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndaddGroupUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void addGroupUserAsync(string sessionHash, int group_id, int[] user_ids) {
            this.addGroupUserAsync(sessionHash, group_id, user_ids, null);
        }
        
        /// <remarks/>
        public void addGroupUserAsync(string sessionHash, int group_id, int[] user_ids, object userState) {
            if ((this.addGroupUserOperationCompleted == null)) {
                this.addGroupUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupUserOperationCompleted);
            }
            this.InvokeAsync("addGroupUser", new object[] {
                        sessionHash,
                        group_id,
                        user_ids}, this.addGroupUserOperationCompleted, userState);
        }
        
        private void OnaddGroupUserOperationCompleted(object arg) {
            if ((this.addGroupUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupUserCompleted(this, new addGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteGroupUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteGroupUser")]
        public int deleteGroupUser(string sessionHash, int group_id, int[] user_ids) {
            object[] results = this.Invoke("deleteGroupUser", new object[] {
                        sessionHash,
                        group_id,
                        user_ids});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteGroupUser(string sessionHash, int group_id, int[] user_ids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteGroupUser", new object[] {
                        sessionHash,
                        group_id,
                        user_ids}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteGroupUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGroupUserAsync(string sessionHash, int group_id, int[] user_ids) {
            this.deleteGroupUserAsync(sessionHash, group_id, user_ids, null);
        }
        
        /// <remarks/>
        public void deleteGroupUserAsync(string sessionHash, int group_id, int[] user_ids, object userState) {
            if ((this.deleteGroupUserOperationCompleted == null)) {
                this.deleteGroupUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGroupUserOperationCompleted);
            }
            this.InvokeAsync("deleteGroupUser", new object[] {
                        sessionHash,
                        group_id,
                        user_ids}, this.deleteGroupUserOperationCompleted, userState);
        }
        
        private void OndeleteGroupUserOperationCompleted(object arg) {
            if ((this.deleteGroupUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGroupUserCompleted(this, new deleteGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#activateUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("activateUser")]
        public int activateUser(string sessionHash, int user_id) {
            object[] results = this.Invoke("activateUser", new object[] {
                        sessionHash,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginactivateUser(string sessionHash, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("activateUser", new object[] {
                        sessionHash,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndactivateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void activateUserAsync(string sessionHash, int user_id) {
            this.activateUserAsync(sessionHash, user_id, null);
        }
        
        /// <remarks/>
        public void activateUserAsync(string sessionHash, int user_id, object userState) {
            if ((this.activateUserOperationCompleted == null)) {
                this.activateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateUserOperationCompleted);
            }
            this.InvokeAsync("activateUser", new object[] {
                        sessionHash,
                        user_id}, this.activateUserOperationCompleted, userState);
        }
        
        private void OnactivateUserOperationCompleted(object arg) {
            if ((this.activateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activateUserCompleted(this, new activateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectTemplates", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectTemplates")]
        public ProjectTemplate[] getProjectTemplates(string sessionHash) {
            object[] results = this.Invoke("getProjectTemplates", new object[] {
                        sessionHash});
            return ((ProjectTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectTemplates(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectTemplates", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProjectTemplate[] EndgetProjectTemplates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectTemplatesAsync(string sessionHash) {
            this.getProjectTemplatesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getProjectTemplatesAsync(string sessionHash, object userState) {
            if ((this.getProjectTemplatesOperationCompleted == null)) {
                this.getProjectTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectTemplatesOperationCompleted);
            }
            this.InvokeAsync("getProjectTemplates", new object[] {
                        sessionHash}, this.getProjectTemplatesOperationCompleted, userState);
        }
        
        private void OngetProjectTemplatesOperationCompleted(object arg) {
            if ((this.getProjectTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectTemplatesCompleted(this, new getProjectTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjects", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjects")]
        public Project[] getProjects(string sessionHash, bool is_public, int status) {
            object[] results = this.Invoke("getProjects", new object[] {
                        sessionHash,
                        is_public,
                        status});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjects(string sessionHash, bool is_public, int status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjects", new object[] {
                        sessionHash,
                        is_public,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public Project[] EndgetProjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectsAsync(string sessionHash, bool is_public, int status) {
            this.getProjectsAsync(sessionHash, is_public, status, null);
        }
        
        /// <remarks/>
        public void getProjectsAsync(string sessionHash, bool is_public, int status, object userState) {
            if ((this.getProjectsOperationCompleted == null)) {
                this.getProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectsOperationCompleted);
            }
            this.InvokeAsync("getProjects", new object[] {
                        sessionHash,
                        is_public,
                        status}, this.getProjectsOperationCompleted, userState);
        }
        
        private void OngetProjectsOperationCompleted(object arg) {
            if ((this.getProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectsCompleted(this, new getProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectArray", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectArray")]
        public Project[] getProjectArray(string sessionHash, int[] project_id) {
            object[] results = this.Invoke("getProjectArray", new object[] {
                        sessionHash,
                        project_id});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectArray(string sessionHash, int[] project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectArray", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Project[] EndgetProjectArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectArrayAsync(string sessionHash, int[] project_id) {
            this.getProjectArrayAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getProjectArrayAsync(string sessionHash, int[] project_id, object userState) {
            if ((this.getProjectArrayOperationCompleted == null)) {
                this.getProjectArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectArrayOperationCompleted);
            }
            this.InvokeAsync("getProjectArray", new object[] {
                        sessionHash,
                        project_id}, this.getProjectArrayOperationCompleted, userState);
        }
        
        private void OngetProjectArrayOperationCompleted(object arg) {
            if ((this.getProjectArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectArrayCompleted(this, new getProjectArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectArrayByUnixName", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectArrayByUnixName")]
        public Project[] getProjectArrayByUnixName(string sessionHash, string[] unix_name) {
            object[] results = this.Invoke("getProjectArrayByUnixName", new object[] {
                        sessionHash,
                        unix_name});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectArrayByUnixName(string sessionHash, string[] unix_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectArrayByUnixName", new object[] {
                        sessionHash,
                        unix_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public Project[] EndgetProjectArrayByUnixName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectArrayByUnixNameAsync(string sessionHash, string[] unix_name) {
            this.getProjectArrayByUnixNameAsync(sessionHash, unix_name, null);
        }
        
        /// <remarks/>
        public void getProjectArrayByUnixNameAsync(string sessionHash, string[] unix_name, object userState) {
            if ((this.getProjectArrayByUnixNameOperationCompleted == null)) {
                this.getProjectArrayByUnixNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectArrayByUnixNameOperationCompleted);
            }
            this.InvokeAsync("getProjectArrayByUnixName", new object[] {
                        sessionHash,
                        unix_name}, this.getProjectArrayByUnixNameOperationCompleted, userState);
        }
        
        private void OngetProjectArrayByUnixNameOperationCompleted(object arg) {
            if ((this.getProjectArrayByUnixNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectArrayByUnixNameCompleted(this, new getProjectArrayByUnixNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProject", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProject")]
        public Project getProject(string sessionHash, int project_id) {
            object[] results = this.Invoke("getProject", new object[] {
                        sessionHash,
                        project_id});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProject(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProject", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Project EndgetProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectAsync(string sessionHash, int project_id) {
            this.getProjectAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getProjectAsync(string sessionHash, int project_id, object userState) {
            if ((this.getProjectOperationCompleted == null)) {
                this.getProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectOperationCompleted);
            }
            this.InvokeAsync("getProject", new object[] {
                        sessionHash,
                        project_id}, this.getProjectOperationCompleted, userState);
        }
        
        private void OngetProjectOperationCompleted(object arg) {
            if ((this.getProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectCompleted(this, new getProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectByUnixName", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectByUnixName")]
        public Project getProjectByUnixName(string sessionHash, string unix_name) {
            object[] results = this.Invoke("getProjectByUnixName", new object[] {
                        sessionHash,
                        unix_name});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectByUnixName(string sessionHash, string unix_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectByUnixName", new object[] {
                        sessionHash,
                        unix_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public Project EndgetProjectByUnixName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectByUnixNameAsync(string sessionHash, string unix_name) {
            this.getProjectByUnixNameAsync(sessionHash, unix_name, null);
        }
        
        /// <remarks/>
        public void getProjectByUnixNameAsync(string sessionHash, string unix_name, object userState) {
            if ((this.getProjectByUnixNameOperationCompleted == null)) {
                this.getProjectByUnixNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectByUnixNameOperationCompleted);
            }
            this.InvokeAsync("getProjectByUnixName", new object[] {
                        sessionHash,
                        unix_name}, this.getProjectByUnixNameOperationCompleted, userState);
        }
        
        private void OngetProjectByUnixNameOperationCompleted(object arg) {
            if ((this.getProjectByUnixNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectByUnixNameCompleted(this, new getProjectByUnixNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteProject", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteProject")]
        public int deleteProject(string sessionHash, int project_id) {
            object[] results = this.Invoke("deleteProject", new object[] {
                        sessionHash,
                        project_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteProject(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteProject", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProjectAsync(string sessionHash, int project_id) {
            this.deleteProjectAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void deleteProjectAsync(string sessionHash, int project_id, object userState) {
            if ((this.deleteProjectOperationCompleted == null)) {
                this.deleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProjectOperationCompleted);
            }
            this.InvokeAsync("deleteProject", new object[] {
                        sessionHash,
                        project_id}, this.deleteProjectOperationCompleted, userState);
        }
        
        private void OndeleteProjectOperationCompleted(object arg) {
            if ((this.deleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProjectCompleted(this, new deleteProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteProjectByUnixName", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteProjectByUnixName")]
        public int deleteProjectByUnixName(string sessionHash, string unix_name) {
            object[] results = this.Invoke("deleteProjectByUnixName", new object[] {
                        sessionHash,
                        unix_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteProjectByUnixName(string sessionHash, string unix_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteProjectByUnixName", new object[] {
                        sessionHash,
                        unix_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteProjectByUnixName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProjectByUnixNameAsync(string sessionHash, string unix_name) {
            this.deleteProjectByUnixNameAsync(sessionHash, unix_name, null);
        }
        
        /// <remarks/>
        public void deleteProjectByUnixNameAsync(string sessionHash, string unix_name, object userState) {
            if ((this.deleteProjectByUnixNameOperationCompleted == null)) {
                this.deleteProjectByUnixNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProjectByUnixNameOperationCompleted);
            }
            this.InvokeAsync("deleteProjectByUnixName", new object[] {
                        sessionHash,
                        unix_name}, this.deleteProjectByUnixNameOperationCompleted, userState);
        }
        
        private void OndeleteProjectByUnixNameOperationCompleted(object arg) {
            if ((this.deleteProjectByUnixNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProjectByUnixNameCompleted(this, new deleteProjectByUnixNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateProject", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProject")]
        public int updateProject(string sessionHash, string unix_name, string project_name, string homepage_url, bool is_public, string description, string register_purpose, string register_license_other, int parent_project_id, string project_text1, string project_text2, string project_text3, string project_text4, string project_text5, string project_text6) {
            object[] results = this.Invoke("updateProject", new object[] {
                        sessionHash,
                        unix_name,
                        project_name,
                        homepage_url,
                        is_public,
                        description,
                        register_purpose,
                        register_license_other,
                        parent_project_id,
                        project_text1,
                        project_text2,
                        project_text3,
                        project_text4,
                        project_text5,
                        project_text6});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateProject(
                    string sessionHash, 
                    string unix_name, 
                    string project_name, 
                    string homepage_url, 
                    bool is_public, 
                    string description, 
                    string register_purpose, 
                    string register_license_other, 
                    int parent_project_id, 
                    string project_text1, 
                    string project_text2, 
                    string project_text3, 
                    string project_text4, 
                    string project_text5, 
                    string project_text6, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("updateProject", new object[] {
                        sessionHash,
                        unix_name,
                        project_name,
                        homepage_url,
                        is_public,
                        description,
                        register_purpose,
                        register_license_other,
                        parent_project_id,
                        project_text1,
                        project_text2,
                        project_text3,
                        project_text4,
                        project_text5,
                        project_text6}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateProjectAsync(string sessionHash, string unix_name, string project_name, string homepage_url, bool is_public, string description, string register_purpose, string register_license_other, int parent_project_id, string project_text1, string project_text2, string project_text3, string project_text4, string project_text5, string project_text6) {
            this.updateProjectAsync(sessionHash, unix_name, project_name, homepage_url, is_public, description, register_purpose, register_license_other, parent_project_id, project_text1, project_text2, project_text3, project_text4, project_text5, project_text6, null);
        }
        
        /// <remarks/>
        public void updateProjectAsync(
                    string sessionHash, 
                    string unix_name, 
                    string project_name, 
                    string homepage_url, 
                    bool is_public, 
                    string description, 
                    string register_purpose, 
                    string register_license_other, 
                    int parent_project_id, 
                    string project_text1, 
                    string project_text2, 
                    string project_text3, 
                    string project_text4, 
                    string project_text5, 
                    string project_text6, 
                    object userState) {
            if ((this.updateProjectOperationCompleted == null)) {
                this.updateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProjectOperationCompleted);
            }
            this.InvokeAsync("updateProject", new object[] {
                        sessionHash,
                        unix_name,
                        project_name,
                        homepage_url,
                        is_public,
                        description,
                        register_purpose,
                        register_license_other,
                        parent_project_id,
                        project_text1,
                        project_text2,
                        project_text3,
                        project_text4,
                        project_text5,
                        project_text6}, this.updateProjectOperationCompleted, userState);
        }
        
        private void OnupdateProjectOperationCompleted(object arg) {
            if ((this.updateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProjectCompleted(this, new updateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjects", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addProject")]
        public int addProject(
                    string sessionHash, 
                    string project_name, 
                    string unix_name, 
                    string homepage_url, 
                    bool is_public, 
                    string description, 
                    string register_purpose, 
                    string register_license_other, 
                    int template_project_id, 
                    int parent_project_id, 
                    string project_text1, 
                    string project_text2, 
                    string project_text3, 
                    string project_text4, 
                    string project_text5, 
                    string project_text6) {
            object[] results = this.Invoke("addProject", new object[] {
                        sessionHash,
                        project_name,
                        unix_name,
                        homepage_url,
                        is_public,
                        description,
                        register_purpose,
                        register_license_other,
                        template_project_id,
                        parent_project_id,
                        project_text1,
                        project_text2,
                        project_text3,
                        project_text4,
                        project_text5,
                        project_text6});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddProject(
                    string sessionHash, 
                    string project_name, 
                    string unix_name, 
                    string homepage_url, 
                    bool is_public, 
                    string description, 
                    string register_purpose, 
                    string register_license_other, 
                    int template_project_id, 
                    int parent_project_id, 
                    string project_text1, 
                    string project_text2, 
                    string project_text3, 
                    string project_text4, 
                    string project_text5, 
                    string project_text6, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("addProject", new object[] {
                        sessionHash,
                        project_name,
                        unix_name,
                        homepage_url,
                        is_public,
                        description,
                        register_purpose,
                        register_license_other,
                        template_project_id,
                        parent_project_id,
                        project_text1,
                        project_text2,
                        project_text3,
                        project_text4,
                        project_text5,
                        project_text6}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addProjectAsync(
                    string sessionHash, 
                    string project_name, 
                    string unix_name, 
                    string homepage_url, 
                    bool is_public, 
                    string description, 
                    string register_purpose, 
                    string register_license_other, 
                    int template_project_id, 
                    int parent_project_id, 
                    string project_text1, 
                    string project_text2, 
                    string project_text3, 
                    string project_text4, 
                    string project_text5, 
                    string project_text6) {
            this.addProjectAsync(sessionHash, project_name, unix_name, homepage_url, is_public, description, register_purpose, register_license_other, template_project_id, parent_project_id, project_text1, project_text2, project_text3, project_text4, project_text5, project_text6, null);
        }
        
        /// <remarks/>
        public void addProjectAsync(
                    string sessionHash, 
                    string project_name, 
                    string unix_name, 
                    string homepage_url, 
                    bool is_public, 
                    string description, 
                    string register_purpose, 
                    string register_license_other, 
                    int template_project_id, 
                    int parent_project_id, 
                    string project_text1, 
                    string project_text2, 
                    string project_text3, 
                    string project_text4, 
                    string project_text5, 
                    string project_text6, 
                    object userState) {
            if ((this.addProjectOperationCompleted == null)) {
                this.addProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProjectOperationCompleted);
            }
            this.InvokeAsync("addProject", new object[] {
                        sessionHash,
                        project_name,
                        unix_name,
                        homepage_url,
                        is_public,
                        description,
                        register_purpose,
                        register_license_other,
                        template_project_id,
                        parent_project_id,
                        project_text1,
                        project_text2,
                        project_text3,
                        project_text4,
                        project_text5,
                        project_text6}, this.addProjectOperationCompleted, userState);
        }
        
        private void OnaddProjectOperationCompleted(object arg) {
            if ((this.addProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProjectCompleted(this, new addProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#approveProject", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addProject")]
        public int approveProject(string sessionHash, int project_id) {
            object[] results = this.Invoke("approveProject", new object[] {
                        sessionHash,
                        project_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginapproveProject(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("approveProject", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndapproveProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void approveProjectAsync(string sessionHash, int project_id) {
            this.approveProjectAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void approveProjectAsync(string sessionHash, int project_id, object userState) {
            if ((this.approveProjectOperationCompleted == null)) {
                this.approveProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveProjectOperationCompleted);
            }
            this.InvokeAsync("approveProject", new object[] {
                        sessionHash,
                        project_id}, this.approveProjectOperationCompleted, userState);
        }
        
        private void OnapproveProjectOperationCompleted(object arg) {
            if ((this.approveProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveProjectCompleted(this, new approveProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectMembers", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectMembers")]
        public User[] getProjectMembers(string sessionHash, int project_id, int expand_groups) {
            object[] results = this.Invoke("getProjectMembers", new object[] {
                        sessionHash,
                        project_id,
                        expand_groups});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectMembers(string sessionHash, int project_id, int expand_groups, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectMembers", new object[] {
                        sessionHash,
                        project_id,
                        expand_groups}, callback, asyncState);
        }
        
        /// <remarks/>
        public User[] EndgetProjectMembers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectMembersAsync(string sessionHash, int project_id, int expand_groups) {
            this.getProjectMembersAsync(sessionHash, project_id, expand_groups, null);
        }
        
        /// <remarks/>
        public void getProjectMembersAsync(string sessionHash, int project_id, int expand_groups, object userState) {
            if ((this.getProjectMembersOperationCompleted == null)) {
                this.getProjectMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectMembersOperationCompleted);
            }
            this.InvokeAsync("getProjectMembers", new object[] {
                        sessionHash,
                        project_id,
                        expand_groups}, this.getProjectMembersOperationCompleted, userState);
        }
        
        private void OngetProjectMembersOperationCompleted(object arg) {
            if ((this.getProjectMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectMembersCompleted(this, new getProjectMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addUserProject", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addUserProject")]
        public int addUserProject(string sessionHash, int project_id, int user_id, int[] roles) {
            object[] results = this.Invoke("addUserProject", new object[] {
                        sessionHash,
                        project_id,
                        user_id,
                        roles});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUserProject(string sessionHash, int project_id, int user_id, int[] roles, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUserProject", new object[] {
                        sessionHash,
                        project_id,
                        user_id,
                        roles}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddUserProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addUserProjectAsync(string sessionHash, int project_id, int user_id, int[] roles) {
            this.addUserProjectAsync(sessionHash, project_id, user_id, roles, null);
        }
        
        /// <remarks/>
        public void addUserProjectAsync(string sessionHash, int project_id, int user_id, int[] roles, object userState) {
            if ((this.addUserProjectOperationCompleted == null)) {
                this.addUserProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserProjectOperationCompleted);
            }
            this.InvokeAsync("addUserProject", new object[] {
                        sessionHash,
                        project_id,
                        user_id,
                        roles}, this.addUserProjectOperationCompleted, userState);
        }
        
        private void OnaddUserProjectOperationCompleted(object arg) {
            if ((this.addUserProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserProjectCompleted(this, new addUserProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteUserProject", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteUserProject")]
        public int deleteUserProject(string sessionHash, int project_id, int user_id) {
            object[] results = this.Invoke("deleteUserProject", new object[] {
                        sessionHash,
                        project_id,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteUserProject(string sessionHash, int project_id, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteUserProject", new object[] {
                        sessionHash,
                        project_id,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteUserProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserProjectAsync(string sessionHash, int project_id, int user_id) {
            this.deleteUserProjectAsync(sessionHash, project_id, user_id, null);
        }
        
        /// <remarks/>
        public void deleteUserProjectAsync(string sessionHash, int project_id, int user_id, object userState) {
            if ((this.deleteUserProjectOperationCompleted == null)) {
                this.deleteUserProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserProjectOperationCompleted);
            }
            this.InvokeAsync("deleteUserProject", new object[] {
                        sessionHash,
                        project_id,
                        user_id}, this.deleteUserProjectOperationCompleted, userState);
        }
        
        private void OndeleteUserProjectOperationCompleted(object arg) {
            if ((this.deleteUserProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserProjectCompleted(this, new deleteUserProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUserProjectRoles", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserProjectRoles")]
        public Role[] getUserProjectRoles(string sessionHash, int project_id, int user_id) {
            object[] results = this.Invoke("getUserProjectRoles", new object[] {
                        sessionHash,
                        project_id,
                        user_id});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserProjectRoles(string sessionHash, int project_id, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserProjectRoles", new object[] {
                        sessionHash,
                        project_id,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Role[] EndgetUserProjectRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserProjectRolesAsync(string sessionHash, int project_id, int user_id) {
            this.getUserProjectRolesAsync(sessionHash, project_id, user_id, null);
        }
        
        /// <remarks/>
        public void getUserProjectRolesAsync(string sessionHash, int project_id, int user_id, object userState) {
            if ((this.getUserProjectRolesOperationCompleted == null)) {
                this.getUserProjectRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserProjectRolesOperationCompleted);
            }
            this.InvokeAsync("getUserProjectRoles", new object[] {
                        sessionHash,
                        project_id,
                        user_id}, this.getUserProjectRolesOperationCompleted, userState);
        }
        
        private void OngetUserProjectRolesOperationCompleted(object arg) {
            if ((this.getUserProjectRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserProjectRolesCompleted(this, new getUserProjectRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getUserProjectsWithRoles", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserProjectsWithRoles")]
        public ProjectWithRole[] getUserProjectsWithRoles(string sessionHash, int user_id) {
            object[] results = this.Invoke("getUserProjectsWithRoles", new object[] {
                        sessionHash,
                        user_id});
            return ((ProjectWithRole[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserProjectsWithRoles(string sessionHash, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserProjectsWithRoles", new object[] {
                        sessionHash,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProjectWithRole[] EndgetUserProjectsWithRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectWithRole[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserProjectsWithRolesAsync(string sessionHash, int user_id) {
            this.getUserProjectsWithRolesAsync(sessionHash, user_id, null);
        }
        
        /// <remarks/>
        public void getUserProjectsWithRolesAsync(string sessionHash, int user_id, object userState) {
            if ((this.getUserProjectsWithRolesOperationCompleted == null)) {
                this.getUserProjectsWithRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserProjectsWithRolesOperationCompleted);
            }
            this.InvokeAsync("getUserProjectsWithRoles", new object[] {
                        sessionHash,
                        user_id}, this.getUserProjectsWithRolesOperationCompleted, userState);
        }
        
        private void OngetUserProjectsWithRolesOperationCompleted(object arg) {
            if ((this.getUserProjectsWithRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserProjectsWithRolesCompleted(this, new getUserProjectsWithRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectRoles", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectRoles")]
        public Role[] getProjectRoles(string sessionHash, int project_id) {
            object[] results = this.Invoke("getProjectRoles", new object[] {
                        sessionHash,
                        project_id});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectRoles(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectRoles", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Role[] EndgetProjectRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectRolesAsync(string sessionHash, int project_id) {
            this.getProjectRolesAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getProjectRolesAsync(string sessionHash, int project_id, object userState) {
            if ((this.getProjectRolesOperationCompleted == null)) {
                this.getProjectRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectRolesOperationCompleted);
            }
            this.InvokeAsync("getProjectRoles", new object[] {
                        sessionHash,
                        project_id}, this.getProjectRolesOperationCompleted, userState);
        }
        
        private void OngetProjectRolesOperationCompleted(object arg) {
            if ((this.getProjectRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectRolesCompleted(this, new getProjectRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateProjectStatus", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProjectStatus")]
        public int updateProjectStatus(string sessionHash, int project_id, int status) {
            object[] results = this.Invoke("updateProjectStatus", new object[] {
                        sessionHash,
                        project_id,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateProjectStatus(string sessionHash, int project_id, int status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateProjectStatus", new object[] {
                        sessionHash,
                        project_id,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateProjectStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateProjectStatusAsync(string sessionHash, int project_id, int status) {
            this.updateProjectStatusAsync(sessionHash, project_id, status, null);
        }
        
        /// <remarks/>
        public void updateProjectStatusAsync(string sessionHash, int project_id, int status, object userState) {
            if ((this.updateProjectStatusOperationCompleted == null)) {
                this.updateProjectStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProjectStatusOperationCompleted);
            }
            this.InvokeAsync("updateProjectStatus", new object[] {
                        sessionHash,
                        project_id,
                        status}, this.updateProjectStatusOperationCompleted, userState);
        }
        
        private void OnupdateProjectStatusOperationCompleted(object arg) {
            if ((this.updateProjectStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProjectStatusCompleted(this, new updateProjectStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectMembersWithRoles", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectMembersWithRoles")]
        public MemberWithRole[] getProjectMembersWithRoles(string sessionHash, int project_id) {
            object[] results = this.Invoke("getProjectMembersWithRoles", new object[] {
                        sessionHash,
                        project_id});
            return ((MemberWithRole[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectMembersWithRoles(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectMembersWithRoles", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public MemberWithRole[] EndgetProjectMembersWithRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MemberWithRole[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectMembersWithRolesAsync(string sessionHash, int project_id) {
            this.getProjectMembersWithRolesAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getProjectMembersWithRolesAsync(string sessionHash, int project_id, object userState) {
            if ((this.getProjectMembersWithRolesOperationCompleted == null)) {
                this.getProjectMembersWithRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectMembersWithRolesOperationCompleted);
            }
            this.InvokeAsync("getProjectMembersWithRoles", new object[] {
                        sessionHash,
                        project_id}, this.getProjectMembersWithRolesOperationCompleted, userState);
        }
        
        private void OngetProjectMembersWithRolesOperationCompleted(object arg) {
            if ((this.getProjectMembersWithRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectMembersWithRolesCompleted(this, new getProjectMembersWithRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getAuditTrails", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAuditTrails")]
        public AuditTrail[] getAuditTrails(string sessionHash, int tracker_item_id, string field_name) {
            object[] results = this.Invoke("getAuditTrails", new object[] {
                        sessionHash,
                        tracker_item_id,
                        field_name});
            return ((AuditTrail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAuditTrails(string sessionHash, int tracker_item_id, string field_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAuditTrails", new object[] {
                        sessionHash,
                        tracker_item_id,
                        field_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuditTrail[] EndgetAuditTrails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuditTrail[])(results[0]));
        }
        
        /// <remarks/>
        public void getAuditTrailsAsync(string sessionHash, int tracker_item_id, string field_name) {
            this.getAuditTrailsAsync(sessionHash, tracker_item_id, field_name, null);
        }
        
        /// <remarks/>
        public void getAuditTrailsAsync(string sessionHash, int tracker_item_id, string field_name, object userState) {
            if ((this.getAuditTrailsOperationCompleted == null)) {
                this.getAuditTrailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuditTrailsOperationCompleted);
            }
            this.InvokeAsync("getAuditTrails", new object[] {
                        sessionHash,
                        tracker_item_id,
                        field_name}, this.getAuditTrailsOperationCompleted, userState);
        }
        
        private void OngetAuditTrailsOperationCompleted(object arg) {
            if ((this.getAuditTrailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuditTrailsCompleted(this, new getAuditTrailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getAuditTrail", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAuditTrail")]
        public AuditTrail[] getAuditTrailArray(string sessionHash, int[] audit_trail_id) {
            object[] results = this.Invoke("getAuditTrailArray", new object[] {
                        sessionHash,
                        audit_trail_id});
            return ((AuditTrail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAuditTrailArray(string sessionHash, int[] audit_trail_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAuditTrailArray", new object[] {
                        sessionHash,
                        audit_trail_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuditTrail[] EndgetAuditTrailArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuditTrail[])(results[0]));
        }
        
        /// <remarks/>
        public void getAuditTrailArrayAsync(string sessionHash, int[] audit_trail_id) {
            this.getAuditTrailArrayAsync(sessionHash, audit_trail_id, null);
        }
        
        /// <remarks/>
        public void getAuditTrailArrayAsync(string sessionHash, int[] audit_trail_id, object userState) {
            if ((this.getAuditTrailArrayOperationCompleted == null)) {
                this.getAuditTrailArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuditTrailArrayOperationCompleted);
            }
            this.InvokeAsync("getAuditTrailArray", new object[] {
                        sessionHash,
                        audit_trail_id}, this.getAuditTrailArrayOperationCompleted, userState);
        }
        
        private void OngetAuditTrailArrayOperationCompleted(object arg) {
            if ((this.getAuditTrailArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuditTrailArrayCompleted(this, new getAuditTrailArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getAuditTrail", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAuditTrail")]
        public AuditTrail getAuditTrail(string sessionHash, int audit_trail_id) {
            object[] results = this.Invoke("getAuditTrail", new object[] {
                        sessionHash,
                        audit_trail_id});
            return ((AuditTrail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAuditTrail(string sessionHash, int audit_trail_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAuditTrail", new object[] {
                        sessionHash,
                        audit_trail_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuditTrail EndgetAuditTrail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuditTrail)(results[0]));
        }
        
        /// <remarks/>
        public void getAuditTrailAsync(string sessionHash, int audit_trail_id) {
            this.getAuditTrailAsync(sessionHash, audit_trail_id, null);
        }
        
        /// <remarks/>
        public void getAuditTrailAsync(string sessionHash, int audit_trail_id, object userState) {
            if ((this.getAuditTrailOperationCompleted == null)) {
                this.getAuditTrailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuditTrailOperationCompleted);
            }
            this.InvokeAsync("getAuditTrail", new object[] {
                        sessionHash,
                        audit_trail_id}, this.getAuditTrailOperationCompleted, userState);
        }
        
        private void OngetAuditTrailOperationCompleted(object arg) {
            if ((this.getAuditTrailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuditTrailCompleted(this, new getAuditTrailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFilesystems", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFilesystems")]
        public Filesystem[] getFilesystems(string sessionHash, string section, int ref_id) {
            object[] results = this.Invoke("getFilesystems", new object[] {
                        sessionHash,
                        section,
                        ref_id});
            return ((Filesystem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFilesystems(string sessionHash, string section, int ref_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFilesystems", new object[] {
                        sessionHash,
                        section,
                        ref_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Filesystem[] EndgetFilesystems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Filesystem[])(results[0]));
        }
        
        /// <remarks/>
        public void getFilesystemsAsync(string sessionHash, string section, int ref_id) {
            this.getFilesystemsAsync(sessionHash, section, ref_id, null);
        }
        
        /// <remarks/>
        public void getFilesystemsAsync(string sessionHash, string section, int ref_id, object userState) {
            if ((this.getFilesystemsOperationCompleted == null)) {
                this.getFilesystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilesystemsOperationCompleted);
            }
            this.InvokeAsync("getFilesystems", new object[] {
                        sessionHash,
                        section,
                        ref_id}, this.getFilesystemsOperationCompleted, userState);
        }
        
        private void OngetFilesystemsOperationCompleted(object arg) {
            if ((this.getFilesystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilesystemsCompleted(this, new getFilesystemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFilesystemArray", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFilesystemArray")]
        public Filesystem[] getFilesystemArray(string sessionHash, int[] filesystem_id) {
            object[] results = this.Invoke("getFilesystemArray", new object[] {
                        sessionHash,
                        filesystem_id});
            return ((Filesystem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFilesystemArray(string sessionHash, int[] filesystem_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFilesystemArray", new object[] {
                        sessionHash,
                        filesystem_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Filesystem[] EndgetFilesystemArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Filesystem[])(results[0]));
        }
        
        /// <remarks/>
        public void getFilesystemArrayAsync(string sessionHash, int[] filesystem_id) {
            this.getFilesystemArrayAsync(sessionHash, filesystem_id, null);
        }
        
        /// <remarks/>
        public void getFilesystemArrayAsync(string sessionHash, int[] filesystem_id, object userState) {
            if ((this.getFilesystemArrayOperationCompleted == null)) {
                this.getFilesystemArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilesystemArrayOperationCompleted);
            }
            this.InvokeAsync("getFilesystemArray", new object[] {
                        sessionHash,
                        filesystem_id}, this.getFilesystemArrayOperationCompleted, userState);
        }
        
        private void OngetFilesystemArrayOperationCompleted(object arg) {
            if ((this.getFilesystemArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilesystemArrayCompleted(this, new getFilesystemArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFilesystemData", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFilesystemData")]
        public FilesystemData[] getFilesystemDataArray(string sessionHash, int[] filesystem_id) {
            object[] results = this.Invoke("getFilesystemDataArray", new object[] {
                        sessionHash,
                        filesystem_id});
            return ((FilesystemData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFilesystemDataArray(string sessionHash, int[] filesystem_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFilesystemDataArray", new object[] {
                        sessionHash,
                        filesystem_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilesystemData[] EndgetFilesystemDataArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilesystemData[])(results[0]));
        }
        
        /// <remarks/>
        public void getFilesystemDataArrayAsync(string sessionHash, int[] filesystem_id) {
            this.getFilesystemDataArrayAsync(sessionHash, filesystem_id, null);
        }
        
        /// <remarks/>
        public void getFilesystemDataArrayAsync(string sessionHash, int[] filesystem_id, object userState) {
            if ((this.getFilesystemDataArrayOperationCompleted == null)) {
                this.getFilesystemDataArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilesystemDataArrayOperationCompleted);
            }
            this.InvokeAsync("getFilesystemDataArray", new object[] {
                        sessionHash,
                        filesystem_id}, this.getFilesystemDataArrayOperationCompleted, userState);
        }
        
        private void OngetFilesystemDataArrayOperationCompleted(object arg) {
            if ((this.getFilesystemDataArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilesystemDataArrayCompleted(this, new getFilesystemDataArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFilesystem", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFilesystem")]
        public Filesystem getFilesystem(string sessionHash, int filesystem_id) {
            object[] results = this.Invoke("getFilesystem", new object[] {
                        sessionHash,
                        filesystem_id});
            return ((Filesystem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFilesystem(string sessionHash, int filesystem_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFilesystem", new object[] {
                        sessionHash,
                        filesystem_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Filesystem EndgetFilesystem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Filesystem)(results[0]));
        }
        
        /// <remarks/>
        public void getFilesystemAsync(string sessionHash, int filesystem_id) {
            this.getFilesystemAsync(sessionHash, filesystem_id, null);
        }
        
        /// <remarks/>
        public void getFilesystemAsync(string sessionHash, int filesystem_id, object userState) {
            if ((this.getFilesystemOperationCompleted == null)) {
                this.getFilesystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilesystemOperationCompleted);
            }
            this.InvokeAsync("getFilesystem", new object[] {
                        sessionHash,
                        filesystem_id}, this.getFilesystemOperationCompleted, userState);
        }
        
        private void OngetFilesystemOperationCompleted(object arg) {
            if ((this.getFilesystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilesystemCompleted(this, new getFilesystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFilesystemData", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFilesystemData")]
        public FilesystemData getFilesystemData(string sessionHash, int filesystem_id) {
            object[] results = this.Invoke("getFilesystemData", new object[] {
                        sessionHash,
                        filesystem_id});
            return ((FilesystemData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFilesystemData(string sessionHash, int filesystem_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFilesystemData", new object[] {
                        sessionHash,
                        filesystem_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilesystemData EndgetFilesystemData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilesystemData)(results[0]));
        }
        
        /// <remarks/>
        public void getFilesystemDataAsync(string sessionHash, int filesystem_id) {
            this.getFilesystemDataAsync(sessionHash, filesystem_id, null);
        }
        
        /// <remarks/>
        public void getFilesystemDataAsync(string sessionHash, int filesystem_id, object userState) {
            if ((this.getFilesystemDataOperationCompleted == null)) {
                this.getFilesystemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilesystemDataOperationCompleted);
            }
            this.InvokeAsync("getFilesystemData", new object[] {
                        sessionHash,
                        filesystem_id}, this.getFilesystemDataOperationCompleted, userState);
        }
        
        private void OngetFilesystemDataOperationCompleted(object arg) {
            if ((this.getFilesystemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilesystemDataCompleted(this, new getFilesystemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteFilesystem", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteFilesystem")]
        public int deleteFilesystem(string sessionHash, int filesystem_id) {
            object[] results = this.Invoke("deleteFilesystem", new object[] {
                        sessionHash,
                        filesystem_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteFilesystem(string sessionHash, int filesystem_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteFilesystem", new object[] {
                        sessionHash,
                        filesystem_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteFilesystem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFilesystemAsync(string sessionHash, int filesystem_id) {
            this.deleteFilesystemAsync(sessionHash, filesystem_id, null);
        }
        
        /// <remarks/>
        public void deleteFilesystemAsync(string sessionHash, int filesystem_id, object userState) {
            if ((this.deleteFilesystemOperationCompleted == null)) {
                this.deleteFilesystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFilesystemOperationCompleted);
            }
            this.InvokeAsync("deleteFilesystem", new object[] {
                        sessionHash,
                        filesystem_id}, this.deleteFilesystemOperationCompleted, userState);
        }
        
        private void OndeleteFilesystemOperationCompleted(object arg) {
            if ((this.deleteFilesystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFilesystemCompleted(this, new deleteFilesystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFilesystems", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addFilesystem")]
        public int addFilesystem(string sessionHash, string section, int ref_id, string file_name, string file_type, string base64_file_data) {
            object[] results = this.Invoke("addFilesystem", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        file_name,
                        file_type,
                        base64_file_data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddFilesystem(string sessionHash, string section, int ref_id, string file_name, string file_type, string base64_file_data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addFilesystem", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        file_name,
                        file_type,
                        base64_file_data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddFilesystem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addFilesystemAsync(string sessionHash, string section, int ref_id, string file_name, string file_type, string base64_file_data) {
            this.addFilesystemAsync(sessionHash, section, ref_id, file_name, file_type, base64_file_data, null);
        }
        
        /// <remarks/>
        public void addFilesystemAsync(string sessionHash, string section, int ref_id, string file_name, string file_type, string base64_file_data, object userState) {
            if ((this.addFilesystemOperationCompleted == null)) {
                this.addFilesystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFilesystemOperationCompleted);
            }
            this.InvokeAsync("addFilesystem", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        file_name,
                        file_type,
                        base64_file_data}, this.addFilesystemOperationCompleted, userState);
        }
        
        private void OnaddFilesystemOperationCompleted(object arg) {
            if ((this.addFilesystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFilesystemCompleted(this, new addFilesystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTagEntries", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTagEntries")]
        public string[] getTagEntries(string sessionHash, string section, int ref_id) {
            object[] results = this.Invoke("getTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTagEntries(string sessionHash, string section, int ref_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndgetTagEntries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTagEntriesAsync(string sessionHash, string section, int ref_id) {
            this.getTagEntriesAsync(sessionHash, section, ref_id, null);
        }
        
        /// <remarks/>
        public void getTagEntriesAsync(string sessionHash, string section, int ref_id, object userState) {
            if ((this.getTagEntriesOperationCompleted == null)) {
                this.getTagEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTagEntriesOperationCompleted);
            }
            this.InvokeAsync("getTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id}, this.getTagEntriesOperationCompleted, userState);
        }
        
        private void OngetTagEntriesOperationCompleted(object arg) {
            if ((this.getTagEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTagEntriesCompleted(this, new getTagEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTagEntries", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTagEntries")]
        public int deleteTagEntries(string sessionHash, string section, int ref_id, string tags) {
            object[] results = this.Invoke("deleteTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        tags});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTagEntries(string sessionHash, string section, int ref_id, string tags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        tags}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTagEntries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTagEntriesAsync(string sessionHash, string section, int ref_id, string tags) {
            this.deleteTagEntriesAsync(sessionHash, section, ref_id, tags, null);
        }
        
        /// <remarks/>
        public void deleteTagEntriesAsync(string sessionHash, string section, int ref_id, string tags, object userState) {
            if ((this.deleteTagEntriesOperationCompleted == null)) {
                this.deleteTagEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTagEntriesOperationCompleted);
            }
            this.InvokeAsync("deleteTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        tags}, this.deleteTagEntriesOperationCompleted, userState);
        }
        
        private void OndeleteTagEntriesOperationCompleted(object arg) {
            if ((this.deleteTagEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTagEntriesCompleted(this, new deleteTagEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTagEntries", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTagEntries")]
        public int addTagEntries(string sessionHash, string section, int ref_id, string tags) {
            object[] results = this.Invoke("addTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        tags});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTagEntries(string sessionHash, string section, int ref_id, string tags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        tags}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTagEntries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTagEntriesAsync(string sessionHash, string section, int ref_id, string tags) {
            this.addTagEntriesAsync(sessionHash, section, ref_id, tags, null);
        }
        
        /// <remarks/>
        public void addTagEntriesAsync(string sessionHash, string section, int ref_id, string tags, object userState) {
            if ((this.addTagEntriesOperationCompleted == null)) {
                this.addTagEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTagEntriesOperationCompleted);
            }
            this.InvokeAsync("addTagEntries", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        tags}, this.addTagEntriesOperationCompleted, userState);
        }
        
        private void OnaddTagEntriesOperationCompleted(object arg) {
            if ((this.addTagEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTagEntriesCompleted(this, new addTagEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsPackages", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsPackages")]
        public FrsPackage[] getFrsPackages(string sessionHash, int project_id) {
            object[] results = this.Invoke("getFrsPackages", new object[] {
                        sessionHash,
                        project_id});
            return ((FrsPackage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsPackages(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsPackages", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsPackage[] EndgetFrsPackages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsPackage[])(results[0]));
        }
        
        /// <remarks/>
        public void getFrsPackagesAsync(string sessionHash, int project_id) {
            this.getFrsPackagesAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getFrsPackagesAsync(string sessionHash, int project_id, object userState) {
            if ((this.getFrsPackagesOperationCompleted == null)) {
                this.getFrsPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsPackagesOperationCompleted);
            }
            this.InvokeAsync("getFrsPackages", new object[] {
                        sessionHash,
                        project_id}, this.getFrsPackagesOperationCompleted, userState);
        }
        
        private void OngetFrsPackagesOperationCompleted(object arg) {
            if ((this.getFrsPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsPackagesCompleted(this, new getFrsPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsPackage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsPackage")]
        public FrsPackage[] getFrsPackageArray(string sessionHash, int[] frs_package_id) {
            object[] results = this.Invoke("getFrsPackageArray", new object[] {
                        sessionHash,
                        frs_package_id});
            return ((FrsPackage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsPackageArray(string sessionHash, int[] frs_package_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsPackageArray", new object[] {
                        sessionHash,
                        frs_package_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsPackage[] EndgetFrsPackageArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsPackage[])(results[0]));
        }
        
        /// <remarks/>
        public void getFrsPackageArrayAsync(string sessionHash, int[] frs_package_id) {
            this.getFrsPackageArrayAsync(sessionHash, frs_package_id, null);
        }
        
        /// <remarks/>
        public void getFrsPackageArrayAsync(string sessionHash, int[] frs_package_id, object userState) {
            if ((this.getFrsPackageArrayOperationCompleted == null)) {
                this.getFrsPackageArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsPackageArrayOperationCompleted);
            }
            this.InvokeAsync("getFrsPackageArray", new object[] {
                        sessionHash,
                        frs_package_id}, this.getFrsPackageArrayOperationCompleted, userState);
        }
        
        private void OngetFrsPackageArrayOperationCompleted(object arg) {
            if ((this.getFrsPackageArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsPackageArrayCompleted(this, new getFrsPackageArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsPackage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsPackage")]
        public FrsPackage getFrsPackage(string sessionHash, int frs_package_id) {
            object[] results = this.Invoke("getFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id});
            return ((FrsPackage)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsPackage(string sessionHash, int frs_package_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsPackage EndgetFrsPackage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsPackage)(results[0]));
        }
        
        /// <remarks/>
        public void getFrsPackageAsync(string sessionHash, int frs_package_id) {
            this.getFrsPackageAsync(sessionHash, frs_package_id, null);
        }
        
        /// <remarks/>
        public void getFrsPackageAsync(string sessionHash, int frs_package_id, object userState) {
            if ((this.getFrsPackageOperationCompleted == null)) {
                this.getFrsPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsPackageOperationCompleted);
            }
            this.InvokeAsync("getFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id}, this.getFrsPackageOperationCompleted, userState);
        }
        
        private void OngetFrsPackageOperationCompleted(object arg) {
            if ((this.getFrsPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsPackageCompleted(this, new getFrsPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteFrsPackage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteFrsPackage")]
        public int deleteFrsPackage(string sessionHash, int frs_package_id) {
            object[] results = this.Invoke("deleteFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteFrsPackage(string sessionHash, int frs_package_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteFrsPackage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFrsPackageAsync(string sessionHash, int frs_package_id) {
            this.deleteFrsPackageAsync(sessionHash, frs_package_id, null);
        }
        
        /// <remarks/>
        public void deleteFrsPackageAsync(string sessionHash, int frs_package_id, object userState) {
            if ((this.deleteFrsPackageOperationCompleted == null)) {
                this.deleteFrsPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFrsPackageOperationCompleted);
            }
            this.InvokeAsync("deleteFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id}, this.deleteFrsPackageOperationCompleted, userState);
        }
        
        private void OndeleteFrsPackageOperationCompleted(object arg) {
            if ((this.deleteFrsPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFrsPackageCompleted(this, new deleteFrsPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateFrsPackage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateFrsPackage")]
        public int updateFrsPackage(string sessionHash, int frs_package_id, string package_name, int status_id, bool is_public, bool require_login) {
            object[] results = this.Invoke("updateFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id,
                        package_name,
                        status_id,
                        is_public,
                        require_login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateFrsPackage(string sessionHash, int frs_package_id, string package_name, int status_id, bool is_public, bool require_login, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id,
                        package_name,
                        status_id,
                        is_public,
                        require_login}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateFrsPackage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateFrsPackageAsync(string sessionHash, int frs_package_id, string package_name, int status_id, bool is_public, bool require_login) {
            this.updateFrsPackageAsync(sessionHash, frs_package_id, package_name, status_id, is_public, require_login, null);
        }
        
        /// <remarks/>
        public void updateFrsPackageAsync(string sessionHash, int frs_package_id, string package_name, int status_id, bool is_public, bool require_login, object userState) {
            if ((this.updateFrsPackageOperationCompleted == null)) {
                this.updateFrsPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFrsPackageOperationCompleted);
            }
            this.InvokeAsync("updateFrsPackage", new object[] {
                        sessionHash,
                        frs_package_id,
                        package_name,
                        status_id,
                        is_public,
                        require_login}, this.updateFrsPackageOperationCompleted, userState);
        }
        
        private void OnupdateFrsPackageOperationCompleted(object arg) {
            if ((this.updateFrsPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFrsPackageCompleted(this, new updateFrsPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsPackages", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addFrsPackage")]
        public int addFrsPackage(string sessionHash, int project_id, string package_name, int status_id, bool is_public, bool require_login) {
            object[] results = this.Invoke("addFrsPackage", new object[] {
                        sessionHash,
                        project_id,
                        package_name,
                        status_id,
                        is_public,
                        require_login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddFrsPackage(string sessionHash, int project_id, string package_name, int status_id, bool is_public, bool require_login, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addFrsPackage", new object[] {
                        sessionHash,
                        project_id,
                        package_name,
                        status_id,
                        is_public,
                        require_login}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddFrsPackage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addFrsPackageAsync(string sessionHash, int project_id, string package_name, int status_id, bool is_public, bool require_login) {
            this.addFrsPackageAsync(sessionHash, project_id, package_name, status_id, is_public, require_login, null);
        }
        
        /// <remarks/>
        public void addFrsPackageAsync(string sessionHash, int project_id, string package_name, int status_id, bool is_public, bool require_login, object userState) {
            if ((this.addFrsPackageOperationCompleted == null)) {
                this.addFrsPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFrsPackageOperationCompleted);
            }
            this.InvokeAsync("addFrsPackage", new object[] {
                        sessionHash,
                        project_id,
                        package_name,
                        status_id,
                        is_public,
                        require_login}, this.addFrsPackageOperationCompleted, userState);
        }
        
        private void OnaddFrsPackageOperationCompleted(object arg) {
            if ((this.addFrsPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFrsPackageCompleted(this, new addFrsPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsReleases", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsReleases")]
        public FrsRelease[] getFrsReleases(string sessionHash, int frs_package_id, int released_by) {
            object[] results = this.Invoke("getFrsReleases", new object[] {
                        sessionHash,
                        frs_package_id,
                        released_by});
            return ((FrsRelease[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsReleases(string sessionHash, int frs_package_id, int released_by, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsReleases", new object[] {
                        sessionHash,
                        frs_package_id,
                        released_by}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsRelease[] EndgetFrsReleases(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsRelease[])(results[0]));
        }
        
        /// <remarks/>
        public void getFrsReleasesAsync(string sessionHash, int frs_package_id, int released_by) {
            this.getFrsReleasesAsync(sessionHash, frs_package_id, released_by, null);
        }
        
        /// <remarks/>
        public void getFrsReleasesAsync(string sessionHash, int frs_package_id, int released_by, object userState) {
            if ((this.getFrsReleasesOperationCompleted == null)) {
                this.getFrsReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsReleasesOperationCompleted);
            }
            this.InvokeAsync("getFrsReleases", new object[] {
                        sessionHash,
                        frs_package_id,
                        released_by}, this.getFrsReleasesOperationCompleted, userState);
        }
        
        private void OngetFrsReleasesOperationCompleted(object arg) {
            if ((this.getFrsReleasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsReleasesCompleted(this, new getFrsReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsRelease", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsRelease")]
        public FrsRelease[] getFrsReleaseArray(string sessionHash, int[] frs_release_id) {
            object[] results = this.Invoke("getFrsReleaseArray", new object[] {
                        sessionHash,
                        frs_release_id});
            return ((FrsRelease[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsReleaseArray(string sessionHash, int[] frs_release_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsReleaseArray", new object[] {
                        sessionHash,
                        frs_release_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsRelease[] EndgetFrsReleaseArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsRelease[])(results[0]));
        }
        
        /// <remarks/>
        public void getFrsReleaseArrayAsync(string sessionHash, int[] frs_release_id) {
            this.getFrsReleaseArrayAsync(sessionHash, frs_release_id, null);
        }
        
        /// <remarks/>
        public void getFrsReleaseArrayAsync(string sessionHash, int[] frs_release_id, object userState) {
            if ((this.getFrsReleaseArrayOperationCompleted == null)) {
                this.getFrsReleaseArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsReleaseArrayOperationCompleted);
            }
            this.InvokeAsync("getFrsReleaseArray", new object[] {
                        sessionHash,
                        frs_release_id}, this.getFrsReleaseArrayOperationCompleted, userState);
        }
        
        private void OngetFrsReleaseArrayOperationCompleted(object arg) {
            if ((this.getFrsReleaseArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsReleaseArrayCompleted(this, new getFrsReleaseArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsRelease", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsRelease")]
        public FrsRelease getFrsRelease(string sessionHash, int frs_release_id) {
            object[] results = this.Invoke("getFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id});
            return ((FrsRelease)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsRelease(string sessionHash, int frs_release_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsRelease EndgetFrsRelease(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsRelease)(results[0]));
        }
        
        /// <remarks/>
        public void getFrsReleaseAsync(string sessionHash, int frs_release_id) {
            this.getFrsReleaseAsync(sessionHash, frs_release_id, null);
        }
        
        /// <remarks/>
        public void getFrsReleaseAsync(string sessionHash, int frs_release_id, object userState) {
            if ((this.getFrsReleaseOperationCompleted == null)) {
                this.getFrsReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsReleaseOperationCompleted);
            }
            this.InvokeAsync("getFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id}, this.getFrsReleaseOperationCompleted, userState);
        }
        
        private void OngetFrsReleaseOperationCompleted(object arg) {
            if ((this.getFrsReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsReleaseCompleted(this, new getFrsReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteFrsRelease", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteFrsRelease")]
        public int deleteFrsRelease(string sessionHash, int frs_release_id) {
            object[] results = this.Invoke("deleteFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteFrsRelease(string sessionHash, int frs_release_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteFrsRelease(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFrsReleaseAsync(string sessionHash, int frs_release_id) {
            this.deleteFrsReleaseAsync(sessionHash, frs_release_id, null);
        }
        
        /// <remarks/>
        public void deleteFrsReleaseAsync(string sessionHash, int frs_release_id, object userState) {
            if ((this.deleteFrsReleaseOperationCompleted == null)) {
                this.deleteFrsReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFrsReleaseOperationCompleted);
            }
            this.InvokeAsync("deleteFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id}, this.deleteFrsReleaseOperationCompleted, userState);
        }
        
        private void OndeleteFrsReleaseOperationCompleted(object arg) {
            if ((this.deleteFrsReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFrsReleaseCompleted(this, new deleteFrsReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateFrsRelease", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateFrsRelease")]
        public int updateFrsRelease(string sessionHash, int frs_release_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released) {
            object[] results = this.Invoke("updateFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id,
                        release_name,
                        release_notes,
                        changes,
                        status_id,
                        preformatted,
                        release_date,
                        is_released});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateFrsRelease(string sessionHash, int frs_release_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id,
                        release_name,
                        release_notes,
                        changes,
                        status_id,
                        preformatted,
                        release_date,
                        is_released}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateFrsRelease(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateFrsReleaseAsync(string sessionHash, int frs_release_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released) {
            this.updateFrsReleaseAsync(sessionHash, frs_release_id, release_name, release_notes, changes, status_id, preformatted, release_date, is_released, null);
        }
        
        /// <remarks/>
        public void updateFrsReleaseAsync(string sessionHash, int frs_release_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released, object userState) {
            if ((this.updateFrsReleaseOperationCompleted == null)) {
                this.updateFrsReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFrsReleaseOperationCompleted);
            }
            this.InvokeAsync("updateFrsRelease", new object[] {
                        sessionHash,
                        frs_release_id,
                        release_name,
                        release_notes,
                        changes,
                        status_id,
                        preformatted,
                        release_date,
                        is_released}, this.updateFrsReleaseOperationCompleted, userState);
        }
        
        private void OnupdateFrsReleaseOperationCompleted(object arg) {
            if ((this.updateFrsReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFrsReleaseCompleted(this, new updateFrsReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsReleases", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addFrsRelease")]
        public int addFrsRelease(string sessionHash, int frs_package_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released) {
            object[] results = this.Invoke("addFrsRelease", new object[] {
                        sessionHash,
                        frs_package_id,
                        release_name,
                        release_notes,
                        changes,
                        status_id,
                        preformatted,
                        release_date,
                        is_released});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddFrsRelease(string sessionHash, int frs_package_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addFrsRelease", new object[] {
                        sessionHash,
                        frs_package_id,
                        release_name,
                        release_notes,
                        changes,
                        status_id,
                        preformatted,
                        release_date,
                        is_released}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddFrsRelease(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addFrsReleaseAsync(string sessionHash, int frs_package_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released) {
            this.addFrsReleaseAsync(sessionHash, frs_package_id, release_name, release_notes, changes, status_id, preformatted, release_date, is_released, null);
        }
        
        /// <remarks/>
        public void addFrsReleaseAsync(string sessionHash, int frs_package_id, string release_name, string release_notes, string changes, int status_id, bool preformatted, string release_date, bool is_released, object userState) {
            if ((this.addFrsReleaseOperationCompleted == null)) {
                this.addFrsReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFrsReleaseOperationCompleted);
            }
            this.InvokeAsync("addFrsRelease", new object[] {
                        sessionHash,
                        frs_package_id,
                        release_name,
                        release_notes,
                        changes,
                        status_id,
                        preformatted,
                        release_date,
                        is_released}, this.addFrsReleaseOperationCompleted, userState);
        }
        
        private void OnaddFrsReleaseOperationCompleted(object arg) {
            if ((this.addFrsReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFrsReleaseCompleted(this, new addFrsReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsReleaseStatuses", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsReleaseStatuses")]
        public FrsReleaseStatus[] getFrsReleaseStatuses(string sessionHash) {
            object[] results = this.Invoke("getFrsReleaseStatuses", new object[] {
                        sessionHash});
            return ((FrsReleaseStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsReleaseStatuses(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsReleaseStatuses", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsReleaseStatus[] EndgetFrsReleaseStatuses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsReleaseStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void getFrsReleaseStatusesAsync(string sessionHash) {
            this.getFrsReleaseStatusesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getFrsReleaseStatusesAsync(string sessionHash, object userState) {
            if ((this.getFrsReleaseStatusesOperationCompleted == null)) {
                this.getFrsReleaseStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsReleaseStatusesOperationCompleted);
            }
            this.InvokeAsync("getFrsReleaseStatuses", new object[] {
                        sessionHash}, this.getFrsReleaseStatusesOperationCompleted, userState);
        }
        
        private void OngetFrsReleaseStatusesOperationCompleted(object arg) {
            if ((this.getFrsReleaseStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsReleaseStatusesCompleted(this, new getFrsReleaseStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#setFrsProjectSettings", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("setFrsProjectSettings")]
        public int setFrsProjectSettings(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab) {
            object[] results = this.Invoke("setFrsProjectSettings", new object[] {
                        sessionHash,
                        project_id,
                        show_associations_tab,
                        show_tags_tab});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetFrsProjectSettings(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setFrsProjectSettings", new object[] {
                        sessionHash,
                        project_id,
                        show_associations_tab,
                        show_tags_tab}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsetFrsProjectSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void setFrsProjectSettingsAsync(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab) {
            this.setFrsProjectSettingsAsync(sessionHash, project_id, show_associations_tab, show_tags_tab, null);
        }
        
        /// <remarks/>
        public void setFrsProjectSettingsAsync(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab, object userState) {
            if ((this.setFrsProjectSettingsOperationCompleted == null)) {
                this.setFrsProjectSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFrsProjectSettingsOperationCompleted);
            }
            this.InvokeAsync("setFrsProjectSettings", new object[] {
                        sessionHash,
                        project_id,
                        show_associations_tab,
                        show_tags_tab}, this.setFrsProjectSettingsOperationCompleted, userState);
        }
        
        private void OnsetFrsProjectSettingsOperationCompleted(object arg) {
            if ((this.setFrsProjectSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFrsProjectSettingsCompleted(this, new setFrsProjectSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getFrsProjectSettings", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsProjectSettings")]
        public FrsProjectSetting getFrsProjectSettings(string sessionHash, int project_id) {
            object[] results = this.Invoke("getFrsProjectSettings", new object[] {
                        sessionHash,
                        project_id});
            return ((FrsProjectSetting)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFrsProjectSettings(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFrsProjectSettings", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FrsProjectSetting EndgetFrsProjectSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FrsProjectSetting)(results[0]));
        }
        
        /// <remarks/>
        public void getFrsProjectSettingsAsync(string sessionHash, int project_id) {
            this.getFrsProjectSettingsAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getFrsProjectSettingsAsync(string sessionHash, int project_id, object userState) {
            if ((this.getFrsProjectSettingsOperationCompleted == null)) {
                this.getFrsProjectSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsProjectSettingsOperationCompleted);
            }
            this.InvokeAsync("getFrsProjectSettings", new object[] {
                        sessionHash,
                        project_id}, this.getFrsProjectSettingsOperationCompleted, userState);
        }
        
        private void OngetFrsProjectSettingsOperationCompleted(object arg) {
            if ((this.getFrsProjectSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsProjectSettingsCompleted(this, new getFrsProjectSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFiles", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFiles")]
        public DocmanFile[] getDocmanFiles(string sessionHash, int docman_folder_id) {
            object[] results = this.Invoke("getDocmanFiles", new object[] {
                        sessionHash,
                        docman_folder_id});
            return ((DocmanFile[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFiles(string sessionHash, int docman_folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFiles", new object[] {
                        sessionHash,
                        docman_folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFile[] EndgetDocmanFiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFile[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFilesAsync(string sessionHash, int docman_folder_id) {
            this.getDocmanFilesAsync(sessionHash, docman_folder_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFilesAsync(string sessionHash, int docman_folder_id, object userState) {
            if ((this.getDocmanFilesOperationCompleted == null)) {
                this.getDocmanFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFilesOperationCompleted);
            }
            this.InvokeAsync("getDocmanFiles", new object[] {
                        sessionHash,
                        docman_folder_id}, this.getDocmanFilesOperationCompleted, userState);
        }
        
        private void OngetDocmanFilesOperationCompleted(object arg) {
            if ((this.getDocmanFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFilesCompleted(this, new getDocmanFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFile", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFile")]
        public DocmanFile[] getDocmanFileArray(string sessionHash, int[] docman_file_id) {
            object[] results = this.Invoke("getDocmanFileArray", new object[] {
                        sessionHash,
                        docman_file_id});
            return ((DocmanFile[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFileArray(string sessionHash, int[] docman_file_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFileArray", new object[] {
                        sessionHash,
                        docman_file_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFile[] EndgetDocmanFileArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFile[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFileArrayAsync(string sessionHash, int[] docman_file_id) {
            this.getDocmanFileArrayAsync(sessionHash, docman_file_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFileArrayAsync(string sessionHash, int[] docman_file_id, object userState) {
            if ((this.getDocmanFileArrayOperationCompleted == null)) {
                this.getDocmanFileArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFileArrayOperationCompleted);
            }
            this.InvokeAsync("getDocmanFileArray", new object[] {
                        sessionHash,
                        docman_file_id}, this.getDocmanFileArrayOperationCompleted, userState);
        }
        
        private void OngetDocmanFileArrayOperationCompleted(object arg) {
            if ((this.getDocmanFileArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFileArrayCompleted(this, new getDocmanFileArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFile", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFile")]
        public DocmanFile getDocmanFile(string sessionHash, int docman_file_id) {
            object[] results = this.Invoke("getDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id});
            return ((DocmanFile)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFile(string sessionHash, int docman_file_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFile EndgetDocmanFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFile)(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFileAsync(string sessionHash, int docman_file_id) {
            this.getDocmanFileAsync(sessionHash, docman_file_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFileAsync(string sessionHash, int docman_file_id, object userState) {
            if ((this.getDocmanFileOperationCompleted == null)) {
                this.getDocmanFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFileOperationCompleted);
            }
            this.InvokeAsync("getDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id}, this.getDocmanFileOperationCompleted, userState);
        }
        
        private void OngetDocmanFileOperationCompleted(object arg) {
            if ((this.getDocmanFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFileCompleted(this, new getDocmanFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteDocmanFile", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteDocmanFile")]
        public int deleteDocmanFile(string sessionHash, int docman_file_id) {
            object[] results = this.Invoke("deleteDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteDocmanFile(string sessionHash, int docman_file_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteDocmanFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocmanFileAsync(string sessionHash, int docman_file_id) {
            this.deleteDocmanFileAsync(sessionHash, docman_file_id, null);
        }
        
        /// <remarks/>
        public void deleteDocmanFileAsync(string sessionHash, int docman_file_id, object userState) {
            if ((this.deleteDocmanFileOperationCompleted == null)) {
                this.deleteDocmanFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocmanFileOperationCompleted);
            }
            this.InvokeAsync("deleteDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id}, this.deleteDocmanFileOperationCompleted, userState);
        }
        
        private void OndeleteDocmanFileOperationCompleted(object arg) {
            if ((this.deleteDocmanFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocmanFileCompleted(this, new deleteDocmanFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateDocmanFile", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateDocmanFile")]
        public int updateDocmanFile(string sessionHash, int docman_file_id, string description, bool is_locked) {
            object[] results = this.Invoke("updateDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id,
                        description,
                        is_locked});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateDocmanFile(string sessionHash, int docman_file_id, string description, bool is_locked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id,
                        description,
                        is_locked}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateDocmanFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateDocmanFileAsync(string sessionHash, int docman_file_id, string description, bool is_locked) {
            this.updateDocmanFileAsync(sessionHash, docman_file_id, description, is_locked, null);
        }
        
        /// <remarks/>
        public void updateDocmanFileAsync(string sessionHash, int docman_file_id, string description, bool is_locked, object userState) {
            if ((this.updateDocmanFileOperationCompleted == null)) {
                this.updateDocmanFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocmanFileOperationCompleted);
            }
            this.InvokeAsync("updateDocmanFile", new object[] {
                        sessionHash,
                        docman_file_id,
                        description,
                        is_locked}, this.updateDocmanFileOperationCompleted, userState);
        }
        
        private void OnupdateDocmanFileOperationCompleted(object arg) {
            if ((this.updateDocmanFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocmanFileCompleted(this, new updateDocmanFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFiles", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addDocmanFile")]
        public int addDocmanFile(string sessionHash, int docman_folder_id, string description, bool is_locked) {
            object[] results = this.Invoke("addDocmanFile", new object[] {
                        sessionHash,
                        docman_folder_id,
                        description,
                        is_locked});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddDocmanFile(string sessionHash, int docman_folder_id, string description, bool is_locked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addDocmanFile", new object[] {
                        sessionHash,
                        docman_folder_id,
                        description,
                        is_locked}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddDocmanFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addDocmanFileAsync(string sessionHash, int docman_folder_id, string description, bool is_locked) {
            this.addDocmanFileAsync(sessionHash, docman_folder_id, description, is_locked, null);
        }
        
        /// <remarks/>
        public void addDocmanFileAsync(string sessionHash, int docman_folder_id, string description, bool is_locked, object userState) {
            if ((this.addDocmanFileOperationCompleted == null)) {
                this.addDocmanFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDocmanFileOperationCompleted);
            }
            this.InvokeAsync("addDocmanFile", new object[] {
                        sessionHash,
                        docman_folder_id,
                        description,
                        is_locked}, this.addDocmanFileOperationCompleted, userState);
        }
        
        private void OnaddDocmanFileOperationCompleted(object arg) {
            if ((this.addDocmanFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDocmanFileCompleted(this, new addDocmanFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFileVersions", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFileVersions")]
        public DocmanFileVersion[] getDocmanFileVersions(string sessionHash, int docman_file_id) {
            object[] results = this.Invoke("getDocmanFileVersions", new object[] {
                        sessionHash,
                        docman_file_id});
            return ((DocmanFileVersion[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFileVersions(string sessionHash, int docman_file_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFileVersions", new object[] {
                        sessionHash,
                        docman_file_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFileVersion[] EndgetDocmanFileVersions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFileVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFileVersionsAsync(string sessionHash, int docman_file_id) {
            this.getDocmanFileVersionsAsync(sessionHash, docman_file_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFileVersionsAsync(string sessionHash, int docman_file_id, object userState) {
            if ((this.getDocmanFileVersionsOperationCompleted == null)) {
                this.getDocmanFileVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFileVersionsOperationCompleted);
            }
            this.InvokeAsync("getDocmanFileVersions", new object[] {
                        sessionHash,
                        docman_file_id}, this.getDocmanFileVersionsOperationCompleted, userState);
        }
        
        private void OngetDocmanFileVersionsOperationCompleted(object arg) {
            if ((this.getDocmanFileVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFileVersionsCompleted(this, new getDocmanFileVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFileVersion", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFileVersion")]
        public DocmanFileVersion[] getDocmanFileVersionArray(string sessionHash, int[] docman_file_version_id) {
            object[] results = this.Invoke("getDocmanFileVersionArray", new object[] {
                        sessionHash,
                        docman_file_version_id});
            return ((DocmanFileVersion[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFileVersionArray(string sessionHash, int[] docman_file_version_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFileVersionArray", new object[] {
                        sessionHash,
                        docman_file_version_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFileVersion[] EndgetDocmanFileVersionArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFileVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFileVersionArrayAsync(string sessionHash, int[] docman_file_version_id) {
            this.getDocmanFileVersionArrayAsync(sessionHash, docman_file_version_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFileVersionArrayAsync(string sessionHash, int[] docman_file_version_id, object userState) {
            if ((this.getDocmanFileVersionArrayOperationCompleted == null)) {
                this.getDocmanFileVersionArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFileVersionArrayOperationCompleted);
            }
            this.InvokeAsync("getDocmanFileVersionArray", new object[] {
                        sessionHash,
                        docman_file_version_id}, this.getDocmanFileVersionArrayOperationCompleted, userState);
        }
        
        private void OngetDocmanFileVersionArrayOperationCompleted(object arg) {
            if ((this.getDocmanFileVersionArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFileVersionArrayCompleted(this, new getDocmanFileVersionArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFileVersion", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFileVersion")]
        public DocmanFileVersion getDocmanFileVersion(string sessionHash, int docman_file_version_id) {
            object[] results = this.Invoke("getDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_version_id});
            return ((DocmanFileVersion)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFileVersion(string sessionHash, int docman_file_version_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_version_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFileVersion EndgetDocmanFileVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFileVersion)(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFileVersionAsync(string sessionHash, int docman_file_version_id) {
            this.getDocmanFileVersionAsync(sessionHash, docman_file_version_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFileVersionAsync(string sessionHash, int docman_file_version_id, object userState) {
            if ((this.getDocmanFileVersionOperationCompleted == null)) {
                this.getDocmanFileVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFileVersionOperationCompleted);
            }
            this.InvokeAsync("getDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_version_id}, this.getDocmanFileVersionOperationCompleted, userState);
        }
        
        private void OngetDocmanFileVersionOperationCompleted(object arg) {
            if ((this.getDocmanFileVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFileVersionCompleted(this, new getDocmanFileVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteDocmanFileVersion", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteDocmanFileVersion")]
        public int deleteDocmanFileVersion(string sessionHash, int docman_file_version_id) {
            object[] results = this.Invoke("deleteDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_version_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteDocmanFileVersion(string sessionHash, int docman_file_version_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_version_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteDocmanFileVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocmanFileVersionAsync(string sessionHash, int docman_file_version_id) {
            this.deleteDocmanFileVersionAsync(sessionHash, docman_file_version_id, null);
        }
        
        /// <remarks/>
        public void deleteDocmanFileVersionAsync(string sessionHash, int docman_file_version_id, object userState) {
            if ((this.deleteDocmanFileVersionOperationCompleted == null)) {
                this.deleteDocmanFileVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocmanFileVersionOperationCompleted);
            }
            this.InvokeAsync("deleteDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_version_id}, this.deleteDocmanFileVersionOperationCompleted, userState);
        }
        
        private void OndeleteDocmanFileVersionOperationCompleted(object arg) {
            if ((this.deleteDocmanFileVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocmanFileVersionCompleted(this, new deleteDocmanFileVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFileVersions", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addDocmanFileVersion")]
        public int addDocmanFileVersion(string sessionHash, int docman_file_id, string changes) {
            object[] results = this.Invoke("addDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_id,
                        changes});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddDocmanFileVersion(string sessionHash, int docman_file_id, string changes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_id,
                        changes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddDocmanFileVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addDocmanFileVersionAsync(string sessionHash, int docman_file_id, string changes) {
            this.addDocmanFileVersionAsync(sessionHash, docman_file_id, changes, null);
        }
        
        /// <remarks/>
        public void addDocmanFileVersionAsync(string sessionHash, int docman_file_id, string changes, object userState) {
            if ((this.addDocmanFileVersionOperationCompleted == null)) {
                this.addDocmanFileVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDocmanFileVersionOperationCompleted);
            }
            this.InvokeAsync("addDocmanFileVersion", new object[] {
                        sessionHash,
                        docman_file_id,
                        changes}, this.addDocmanFileVersionOperationCompleted, userState);
        }
        
        private void OnaddDocmanFileVersionOperationCompleted(object arg) {
            if ((this.addDocmanFileVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDocmanFileVersionCompleted(this, new addDocmanFileVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFolders", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFolders")]
        public DocmanFolder[] getDocmanFolders(string sessionHash, int project_id) {
            object[] results = this.Invoke("getDocmanFolders", new object[] {
                        sessionHash,
                        project_id});
            return ((DocmanFolder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFolders(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFolders", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFolder[] EndgetDocmanFolders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFolder[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFoldersAsync(string sessionHash, int project_id) {
            this.getDocmanFoldersAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFoldersAsync(string sessionHash, int project_id, object userState) {
            if ((this.getDocmanFoldersOperationCompleted == null)) {
                this.getDocmanFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFoldersOperationCompleted);
            }
            this.InvokeAsync("getDocmanFolders", new object[] {
                        sessionHash,
                        project_id}, this.getDocmanFoldersOperationCompleted, userState);
        }
        
        private void OngetDocmanFoldersOperationCompleted(object arg) {
            if ((this.getDocmanFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFoldersCompleted(this, new getDocmanFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFolder", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFolder")]
        public DocmanFolder[] getDocmanFolderArray(string sessionHash, int[] docman_folder_id) {
            object[] results = this.Invoke("getDocmanFolderArray", new object[] {
                        sessionHash,
                        docman_folder_id});
            return ((DocmanFolder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFolderArray(string sessionHash, int[] docman_folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFolderArray", new object[] {
                        sessionHash,
                        docman_folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFolder[] EndgetDocmanFolderArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFolder[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFolderArrayAsync(string sessionHash, int[] docman_folder_id) {
            this.getDocmanFolderArrayAsync(sessionHash, docman_folder_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFolderArrayAsync(string sessionHash, int[] docman_folder_id, object userState) {
            if ((this.getDocmanFolderArrayOperationCompleted == null)) {
                this.getDocmanFolderArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFolderArrayOperationCompleted);
            }
            this.InvokeAsync("getDocmanFolderArray", new object[] {
                        sessionHash,
                        docman_folder_id}, this.getDocmanFolderArrayOperationCompleted, userState);
        }
        
        private void OngetDocmanFolderArrayOperationCompleted(object arg) {
            if ((this.getDocmanFolderArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFolderArrayCompleted(this, new getDocmanFolderArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanFolder", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanFolder")]
        public DocmanFolder getDocmanFolder(string sessionHash, int docman_folder_id) {
            object[] results = this.Invoke("getDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id});
            return ((DocmanFolder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanFolder(string sessionHash, int docman_folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanFolder EndgetDocmanFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanFolder)(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanFolderAsync(string sessionHash, int docman_folder_id) {
            this.getDocmanFolderAsync(sessionHash, docman_folder_id, null);
        }
        
        /// <remarks/>
        public void getDocmanFolderAsync(string sessionHash, int docman_folder_id, object userState) {
            if ((this.getDocmanFolderOperationCompleted == null)) {
                this.getDocmanFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanFolderOperationCompleted);
            }
            this.InvokeAsync("getDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id}, this.getDocmanFolderOperationCompleted, userState);
        }
        
        private void OngetDocmanFolderOperationCompleted(object arg) {
            if ((this.getDocmanFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanFolderCompleted(this, new getDocmanFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteDocmanFolder", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteDocmanFolder")]
        public int deleteDocmanFolder(string sessionHash, int docman_folder_id) {
            object[] results = this.Invoke("deleteDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteDocmanFolder(string sessionHash, int docman_folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteDocmanFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocmanFolderAsync(string sessionHash, int docman_folder_id) {
            this.deleteDocmanFolderAsync(sessionHash, docman_folder_id, null);
        }
        
        /// <remarks/>
        public void deleteDocmanFolderAsync(string sessionHash, int docman_folder_id, object userState) {
            if ((this.deleteDocmanFolderOperationCompleted == null)) {
                this.deleteDocmanFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocmanFolderOperationCompleted);
            }
            this.InvokeAsync("deleteDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id}, this.deleteDocmanFolderOperationCompleted, userState);
        }
        
        private void OndeleteDocmanFolderOperationCompleted(object arg) {
            if ((this.deleteDocmanFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocmanFolderCompleted(this, new deleteDocmanFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateDocmanFolder", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateDocmanFolder")]
        public int updateDocmanFolder(string sessionHash, int docman_folder_id, string folder_name, bool is_public, int parent_folder_id, int sort_order) {
            object[] results = this.Invoke("updateDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id,
                        folder_name,
                        is_public,
                        parent_folder_id,
                        sort_order});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateDocmanFolder(string sessionHash, int docman_folder_id, string folder_name, bool is_public, int parent_folder_id, int sort_order, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id,
                        folder_name,
                        is_public,
                        parent_folder_id,
                        sort_order}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateDocmanFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateDocmanFolderAsync(string sessionHash, int docman_folder_id, string folder_name, bool is_public, int parent_folder_id, int sort_order) {
            this.updateDocmanFolderAsync(sessionHash, docman_folder_id, folder_name, is_public, parent_folder_id, sort_order, null);
        }
        
        /// <remarks/>
        public void updateDocmanFolderAsync(string sessionHash, int docman_folder_id, string folder_name, bool is_public, int parent_folder_id, int sort_order, object userState) {
            if ((this.updateDocmanFolderOperationCompleted == null)) {
                this.updateDocmanFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocmanFolderOperationCompleted);
            }
            this.InvokeAsync("updateDocmanFolder", new object[] {
                        sessionHash,
                        docman_folder_id,
                        folder_name,
                        is_public,
                        parent_folder_id,
                        sort_order}, this.updateDocmanFolderOperationCompleted, userState);
        }
        
        private void OnupdateDocmanFolderOperationCompleted(object arg) {
            if ((this.updateDocmanFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocmanFolderCompleted(this, new updateDocmanFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addDocmanFolder", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addDocmanFolder")]
        public int addDocmanFolder(string sessionHash, int project_id, string folder_name, bool is_public, int parent_folder_id, int sort_order) {
            object[] results = this.Invoke("addDocmanFolder", new object[] {
                        sessionHash,
                        project_id,
                        folder_name,
                        is_public,
                        parent_folder_id,
                        sort_order});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddDocmanFolder(string sessionHash, int project_id, string folder_name, bool is_public, int parent_folder_id, int sort_order, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addDocmanFolder", new object[] {
                        sessionHash,
                        project_id,
                        folder_name,
                        is_public,
                        parent_folder_id,
                        sort_order}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddDocmanFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addDocmanFolderAsync(string sessionHash, int project_id, string folder_name, bool is_public, int parent_folder_id, int sort_order) {
            this.addDocmanFolderAsync(sessionHash, project_id, folder_name, is_public, parent_folder_id, sort_order, null);
        }
        
        /// <remarks/>
        public void addDocmanFolderAsync(string sessionHash, int project_id, string folder_name, bool is_public, int parent_folder_id, int sort_order, object userState) {
            if ((this.addDocmanFolderOperationCompleted == null)) {
                this.addDocmanFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDocmanFolderOperationCompleted);
            }
            this.InvokeAsync("addDocmanFolder", new object[] {
                        sessionHash,
                        project_id,
                        folder_name,
                        is_public,
                        parent_folder_id,
                        sort_order}, this.addDocmanFolderOperationCompleted, userState);
        }
        
        private void OnaddDocmanFolderOperationCompleted(object arg) {
            if ((this.addDocmanFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDocmanFolderCompleted(this, new addDocmanFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#setDocmanProjectSettings", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("setDocmanProjectSettings")]
        public int setDocmanProjectSettings(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab) {
            object[] results = this.Invoke("setDocmanProjectSettings", new object[] {
                        sessionHash,
                        project_id,
                        show_associations_tab,
                        show_tags_tab});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetDocmanProjectSettings(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setDocmanProjectSettings", new object[] {
                        sessionHash,
                        project_id,
                        show_associations_tab,
                        show_tags_tab}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsetDocmanProjectSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void setDocmanProjectSettingsAsync(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab) {
            this.setDocmanProjectSettingsAsync(sessionHash, project_id, show_associations_tab, show_tags_tab, null);
        }
        
        /// <remarks/>
        public void setDocmanProjectSettingsAsync(string sessionHash, int project_id, bool show_associations_tab, bool show_tags_tab, object userState) {
            if ((this.setDocmanProjectSettingsOperationCompleted == null)) {
                this.setDocmanProjectSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDocmanProjectSettingsOperationCompleted);
            }
            this.InvokeAsync("setDocmanProjectSettings", new object[] {
                        sessionHash,
                        project_id,
                        show_associations_tab,
                        show_tags_tab}, this.setDocmanProjectSettingsOperationCompleted, userState);
        }
        
        private void OnsetDocmanProjectSettingsOperationCompleted(object arg) {
            if ((this.setDocmanProjectSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDocmanProjectSettingsCompleted(this, new setDocmanProjectSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getDocmanProjectSettings", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDocmanProjectSettings")]
        public DocmanProjectSetting getDocmanProjectSettings(string sessionHash, int project_id) {
            object[] results = this.Invoke("getDocmanProjectSettings", new object[] {
                        sessionHash,
                        project_id});
            return ((DocmanProjectSetting)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDocmanProjectSettings(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDocmanProjectSettings", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocmanProjectSetting EndgetDocmanProjectSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocmanProjectSetting)(results[0]));
        }
        
        /// <remarks/>
        public void getDocmanProjectSettingsAsync(string sessionHash, int project_id) {
            this.getDocmanProjectSettingsAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getDocmanProjectSettingsAsync(string sessionHash, int project_id, object userState) {
            if ((this.getDocmanProjectSettingsOperationCompleted == null)) {
                this.getDocmanProjectSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocmanProjectSettingsOperationCompleted);
            }
            this.InvokeAsync("getDocmanProjectSettings", new object[] {
                        sessionHash,
                        project_id}, this.getDocmanProjectSettingsOperationCompleted, userState);
        }
        
        private void OngetDocmanProjectSettingsOperationCompleted(object arg) {
            if ((this.getDocmanProjectSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocmanProjectSettingsCompleted(this, new getDocmanProjectSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraFields", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraFields")]
        public TrackerExtraField[] getTrackerExtraFields(string sessionHash, int tracker_id, int field_type, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule, string alias) {
            object[] results = this.Invoke("getTrackerExtraFields", new object[] {
                        sessionHash,
                        tracker_id,
                        field_type,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule,
                        alias});
            return ((TrackerExtraField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFields(string sessionHash, int tracker_id, int field_type, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule, string alias, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFields", new object[] {
                        sessionHash,
                        tracker_id,
                        field_type,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule,
                        alias}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraField[] EndgetTrackerExtraFields(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraField[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldsAsync(string sessionHash, int tracker_id, int field_type, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule, string alias) {
            this.getTrackerExtraFieldsAsync(sessionHash, tracker_id, field_type, use_in_quick_browse, show_on_submit, use_auto_assign, use_workflow, use_commit_rule, alias, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldsAsync(string sessionHash, int tracker_id, int field_type, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule, string alias, object userState) {
            if ((this.getTrackerExtraFieldsOperationCompleted == null)) {
                this.getTrackerExtraFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldsOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFields", new object[] {
                        sessionHash,
                        tracker_id,
                        field_type,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule,
                        alias}, this.getTrackerExtraFieldsOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldsOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldsCompleted(this, new getTrackerExtraFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraField")]
        public TrackerExtraField[] getTrackerExtraFieldArray(string sessionHash, int tracker_id, int[] tracker_extra_field_id) {
            object[] results = this.Invoke("getTrackerExtraFieldArray", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id});
            return ((TrackerExtraField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFieldArray(string sessionHash, int tracker_id, int[] tracker_extra_field_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFieldArray", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraField[] EndgetTrackerExtraFieldArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraField[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldArrayAsync(string sessionHash, int tracker_id, int[] tracker_extra_field_id) {
            this.getTrackerExtraFieldArrayAsync(sessionHash, tracker_id, tracker_extra_field_id, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldArrayAsync(string sessionHash, int tracker_id, int[] tracker_extra_field_id, object userState) {
            if ((this.getTrackerExtraFieldArrayOperationCompleted == null)) {
                this.getTrackerExtraFieldArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFieldArray", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id}, this.getTrackerExtraFieldArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldArrayOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldArrayCompleted(this, new getTrackerExtraFieldArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraField")]
        public TrackerExtraField getTrackerExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id) {
            object[] results = this.Invoke("getTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id});
            return ((TrackerExtraField)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraField EndgetTrackerExtraField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraField)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id) {
            this.getTrackerExtraFieldAsync(sessionHash, tracker_id, tracker_extra_field_id, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, object userState) {
            if ((this.getTrackerExtraFieldOperationCompleted == null)) {
                this.getTrackerExtraFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id}, this.getTrackerExtraFieldOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldCompleted(this, new getTrackerExtraFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerExtraField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerExtraField")]
        public int deleteTrackerExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id) {
            object[] results = this.Invoke("deleteTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerExtraField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id) {
            this.deleteTrackerExtraFieldAsync(sessionHash, tracker_id, tracker_extra_field_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, object userState) {
            if ((this.deleteTrackerExtraFieldOperationCompleted == null)) {
                this.deleteTrackerExtraFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerExtraFieldOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id}, this.deleteTrackerExtraFieldOperationCompleted, userState);
        }
        
        private void OndeleteTrackerExtraFieldOperationCompleted(object arg) {
            if ((this.deleteTrackerExtraFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerExtraFieldCompleted(this, new deleteTrackerExtraFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerExtraField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerExtraField")]
        public int updateTrackerExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id, string field_name, int attribute1, int attribute2, bool is_required, string alias, int field_order, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule) {
            object[] results = this.Invoke("updateTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        field_name,
                        attribute1,
                        attribute2,
                        is_required,
                        alias,
                        field_order,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerExtraField(
                    string sessionHash, 
                    int tracker_id, 
                    int tracker_extra_field_id, 
                    string field_name, 
                    int attribute1, 
                    int attribute2, 
                    bool is_required, 
                    string alias, 
                    int field_order, 
                    bool use_in_quick_browse, 
                    bool show_on_submit, 
                    bool use_auto_assign, 
                    bool use_workflow, 
                    bool use_commit_rule, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("updateTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        field_name,
                        attribute1,
                        attribute2,
                        is_required,
                        alias,
                        field_order,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerExtraField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, string field_name, int attribute1, int attribute2, bool is_required, string alias, int field_order, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule) {
            this.updateTrackerExtraFieldAsync(sessionHash, tracker_id, tracker_extra_field_id, field_name, attribute1, attribute2, is_required, alias, field_order, use_in_quick_browse, show_on_submit, use_auto_assign, use_workflow, use_commit_rule, null);
        }
        
        /// <remarks/>
        public void updateTrackerExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, string field_name, int attribute1, int attribute2, bool is_required, string alias, int field_order, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule, object userState) {
            if ((this.updateTrackerExtraFieldOperationCompleted == null)) {
                this.updateTrackerExtraFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerExtraFieldOperationCompleted);
            }
            this.InvokeAsync("updateTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        field_name,
                        attribute1,
                        attribute2,
                        is_required,
                        alias,
                        field_order,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule}, this.updateTrackerExtraFieldOperationCompleted, userState);
        }
        
        private void OnupdateTrackerExtraFieldOperationCompleted(object arg) {
            if ((this.updateTrackerExtraFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerExtraFieldCompleted(this, new updateTrackerExtraFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerExtraField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerExtraField")]
        public int addTrackerExtraField(string sessionHash, int tracker_id, string field_name, int field_type, int attribute1, int attribute2, bool is_required, string alias, int field_order, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule) {
            object[] results = this.Invoke("addTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        field_name,
                        field_type,
                        attribute1,
                        attribute2,
                        is_required,
                        alias,
                        field_order,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerExtraField(
                    string sessionHash, 
                    int tracker_id, 
                    string field_name, 
                    int field_type, 
                    int attribute1, 
                    int attribute2, 
                    bool is_required, 
                    string alias, 
                    int field_order, 
                    bool use_in_quick_browse, 
                    bool show_on_submit, 
                    bool use_auto_assign, 
                    bool use_workflow, 
                    bool use_commit_rule, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("addTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        field_name,
                        field_type,
                        attribute1,
                        attribute2,
                        is_required,
                        alias,
                        field_order,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerExtraField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerExtraFieldAsync(string sessionHash, int tracker_id, string field_name, int field_type, int attribute1, int attribute2, bool is_required, string alias, int field_order, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule) {
            this.addTrackerExtraFieldAsync(sessionHash, tracker_id, field_name, field_type, attribute1, attribute2, is_required, alias, field_order, use_in_quick_browse, show_on_submit, use_auto_assign, use_workflow, use_commit_rule, null);
        }
        
        /// <remarks/>
        public void addTrackerExtraFieldAsync(string sessionHash, int tracker_id, string field_name, int field_type, int attribute1, int attribute2, bool is_required, string alias, int field_order, bool use_in_quick_browse, bool show_on_submit, bool use_auto_assign, bool use_workflow, bool use_commit_rule, object userState) {
            if ((this.addTrackerExtraFieldOperationCompleted == null)) {
                this.addTrackerExtraFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerExtraFieldOperationCompleted);
            }
            this.InvokeAsync("addTrackerExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        field_name,
                        field_type,
                        attribute1,
                        attribute2,
                        is_required,
                        alias,
                        field_order,
                        use_in_quick_browse,
                        show_on_submit,
                        use_auto_assign,
                        use_workflow,
                        use_commit_rule}, this.addTrackerExtraFieldOperationCompleted, userState);
        }
        
        private void OnaddTrackerExtraFieldOperationCompleted(object arg) {
            if ((this.addTrackerExtraFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerExtraFieldCompleted(this, new addTrackerExtraFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraFieldElements", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraFieldElements")]
        public TrackerExtraFieldElement[] getTrackerExtraFieldElements(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, int auto_assign_to) {
            object[] results = this.Invoke("getTrackerExtraFieldElements", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_name,
                        status_id,
                        auto_assign_to});
            return ((TrackerExtraFieldElement[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFieldElements(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, int auto_assign_to, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFieldElements", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_name,
                        status_id,
                        auto_assign_to}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement[] EndgetTrackerExtraFieldElements(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraFieldElement[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldElementsAsync(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, int auto_assign_to) {
            this.getTrackerExtraFieldElementsAsync(sessionHash, tracker_extra_field_id, element_name, status_id, auto_assign_to, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldElementsAsync(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, int auto_assign_to, object userState) {
            if ((this.getTrackerExtraFieldElementsOperationCompleted == null)) {
                this.getTrackerExtraFieldElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldElementsOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFieldElements", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_name,
                        status_id,
                        auto_assign_to}, this.getTrackerExtraFieldElementsOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldElementsOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldElementsCompleted(this, new getTrackerExtraFieldElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraFieldElement", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraFieldElement")]
        public TrackerExtraFieldElement[] getTrackerExtraFieldElementArray(string sessionHash, int tracker_extra_field_id, int[] element_id) {
            object[] results = this.Invoke("getTrackerExtraFieldElementArray", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id});
            return ((TrackerExtraFieldElement[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFieldElementArray(string sessionHash, int tracker_extra_field_id, int[] element_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFieldElementArray", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement[] EndgetTrackerExtraFieldElementArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraFieldElement[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldElementArrayAsync(string sessionHash, int tracker_extra_field_id, int[] element_id) {
            this.getTrackerExtraFieldElementArrayAsync(sessionHash, tracker_extra_field_id, element_id, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldElementArrayAsync(string sessionHash, int tracker_extra_field_id, int[] element_id, object userState) {
            if ((this.getTrackerExtraFieldElementArrayOperationCompleted == null)) {
                this.getTrackerExtraFieldElementArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldElementArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFieldElementArray", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id}, this.getTrackerExtraFieldElementArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldElementArrayOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldElementArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldElementArrayCompleted(this, new getTrackerExtraFieldElementArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraFieldElement", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraFieldElement")]
        public TrackerExtraFieldElement getTrackerExtraFieldElement(string sessionHash, int element_id) {
            object[] results = this.Invoke("getTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        element_id});
            return ((TrackerExtraFieldElement)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFieldElement(string sessionHash, int element_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        element_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement EndgetTrackerExtraFieldElement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraFieldElement)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldElementAsync(string sessionHash, int element_id) {
            this.getTrackerExtraFieldElementAsync(sessionHash, element_id, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldElementAsync(string sessionHash, int element_id, object userState) {
            if ((this.getTrackerExtraFieldElementOperationCompleted == null)) {
                this.getTrackerExtraFieldElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldElementOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        element_id}, this.getTrackerExtraFieldElementOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldElementOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldElementCompleted(this, new getTrackerExtraFieldElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerExtraFieldElement", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerExtraFieldElement")]
        public int deleteTrackerExtraFieldElement(string sessionHash, int tracker_extra_field_id, int element_id) {
            object[] results = this.Invoke("deleteTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerExtraFieldElement(string sessionHash, int tracker_extra_field_id, int element_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerExtraFieldElement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerExtraFieldElementAsync(string sessionHash, int tracker_extra_field_id, int element_id) {
            this.deleteTrackerExtraFieldElementAsync(sessionHash, tracker_extra_field_id, element_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerExtraFieldElementAsync(string sessionHash, int tracker_extra_field_id, int element_id, object userState) {
            if ((this.deleteTrackerExtraFieldElementOperationCompleted == null)) {
                this.deleteTrackerExtraFieldElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerExtraFieldElementOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id}, this.deleteTrackerExtraFieldElementOperationCompleted, userState);
        }
        
        private void OndeleteTrackerExtraFieldElementOperationCompleted(object arg) {
            if ((this.deleteTrackerExtraFieldElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerExtraFieldElementCompleted(this, new deleteTrackerExtraFieldElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerExtraFieldElement", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerExtraFieldElement")]
        public int updateTrackerExtraFieldElement(string sessionHash, int tracker_extra_field_id, int element_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit) {
            object[] results = this.Invoke("updateTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id,
                        element_name,
                        status_id,
                        default_selected,
                        sort_order,
                        auto_assign_to,
                        can_commit});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerExtraFieldElement(string sessionHash, int tracker_extra_field_id, int element_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id,
                        element_name,
                        status_id,
                        default_selected,
                        sort_order,
                        auto_assign_to,
                        can_commit}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerExtraFieldElement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerExtraFieldElementAsync(string sessionHash, int tracker_extra_field_id, int element_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit) {
            this.updateTrackerExtraFieldElementAsync(sessionHash, tracker_extra_field_id, element_id, element_name, status_id, default_selected, sort_order, auto_assign_to, can_commit, null);
        }
        
        /// <remarks/>
        public void updateTrackerExtraFieldElementAsync(string sessionHash, int tracker_extra_field_id, int element_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit, object userState) {
            if ((this.updateTrackerExtraFieldElementOperationCompleted == null)) {
                this.updateTrackerExtraFieldElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerExtraFieldElementOperationCompleted);
            }
            this.InvokeAsync("updateTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_id,
                        element_name,
                        status_id,
                        default_selected,
                        sort_order,
                        auto_assign_to,
                        can_commit}, this.updateTrackerExtraFieldElementOperationCompleted, userState);
        }
        
        private void OnupdateTrackerExtraFieldElementOperationCompleted(object arg) {
            if ((this.updateTrackerExtraFieldElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerExtraFieldElementCompleted(this, new updateTrackerExtraFieldElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerExtraFieldElement", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerExtraFieldElement")]
        public int addTrackerExtraFieldElement(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit) {
            object[] results = this.Invoke("addTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_name,
                        status_id,
                        default_selected,
                        sort_order,
                        auto_assign_to,
                        can_commit});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerExtraFieldElement(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_name,
                        status_id,
                        default_selected,
                        sort_order,
                        auto_assign_to,
                        can_commit}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerExtraFieldElement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerExtraFieldElementAsync(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit) {
            this.addTrackerExtraFieldElementAsync(sessionHash, tracker_extra_field_id, element_name, status_id, default_selected, sort_order, auto_assign_to, can_commit, null);
        }
        
        /// <remarks/>
        public void addTrackerExtraFieldElementAsync(string sessionHash, int tracker_extra_field_id, string element_name, int status_id, bool default_selected, int sort_order, int auto_assign_to, bool can_commit, object userState) {
            if ((this.addTrackerExtraFieldElementOperationCompleted == null)) {
                this.addTrackerExtraFieldElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerExtraFieldElementOperationCompleted);
            }
            this.InvokeAsync("addTrackerExtraFieldElement", new object[] {
                        sessionHash,
                        tracker_extra_field_id,
                        element_name,
                        status_id,
                        default_selected,
                        sort_order,
                        auto_assign_to,
                        can_commit}, this.addTrackerExtraFieldElementOperationCompleted, userState);
        }
        
        private void OnaddTrackerExtraFieldElementOperationCompleted(object arg) {
            if ((this.addTrackerExtraFieldElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerExtraFieldElementCompleted(this, new addTrackerExtraFieldElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraFieldDatas", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraFieldDatas")]
        public TrackerExtraFieldData[] getTrackerExtraFieldDatas(string sessionHash, int tracker_item_id, int tracker_extra_field_id) {
            object[] results = this.Invoke("getTrackerExtraFieldDatas", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id});
            return ((TrackerExtraFieldData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFieldDatas(string sessionHash, int tracker_item_id, int tracker_extra_field_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFieldDatas", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraFieldData[] EndgetTrackerExtraFieldDatas(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraFieldData[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldDatasAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_id) {
            this.getTrackerExtraFieldDatasAsync(sessionHash, tracker_item_id, tracker_extra_field_id, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldDatasAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_id, object userState) {
            if ((this.getTrackerExtraFieldDatasOperationCompleted == null)) {
                this.getTrackerExtraFieldDatasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldDatasOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFieldDatas", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id}, this.getTrackerExtraFieldDatasOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldDatasOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldDatasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldDatasCompleted(this, new getTrackerExtraFieldDatasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerExtraFieldData", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerExtraFieldData")]
        public TrackerExtraFieldData getTrackerExtraFieldData(string sessionHash, int tracker_item_id, int tracker_extra_field_data_id) {
            object[] results = this.Invoke("getTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_data_id});
            return ((TrackerExtraFieldData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerExtraFieldData(string sessionHash, int tracker_item_id, int tracker_extra_field_data_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_data_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerExtraFieldData EndgetTrackerExtraFieldData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerExtraFieldData)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldDataAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_data_id) {
            this.getTrackerExtraFieldDataAsync(sessionHash, tracker_item_id, tracker_extra_field_data_id, null);
        }
        
        /// <remarks/>
        public void getTrackerExtraFieldDataAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_data_id, object userState) {
            if ((this.getTrackerExtraFieldDataOperationCompleted == null)) {
                this.getTrackerExtraFieldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerExtraFieldDataOperationCompleted);
            }
            this.InvokeAsync("getTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_data_id}, this.getTrackerExtraFieldDataOperationCompleted, userState);
        }
        
        private void OngetTrackerExtraFieldDataOperationCompleted(object arg) {
            if ((this.getTrackerExtraFieldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerExtraFieldDataCompleted(this, new getTrackerExtraFieldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerExtraFieldData", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerExtraFieldData")]
        public int updateTrackerExtraFieldData(string sessionHash, int tracker_item_id, int tracker_extra_field_id, int tracker_extra_field_data_id, string field_data) {
            object[] results = this.Invoke("updateTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id,
                        tracker_extra_field_data_id,
                        field_data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerExtraFieldData(string sessionHash, int tracker_item_id, int tracker_extra_field_id, int tracker_extra_field_data_id, string field_data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id,
                        tracker_extra_field_data_id,
                        field_data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerExtraFieldData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerExtraFieldDataAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_id, int tracker_extra_field_data_id, string field_data) {
            this.updateTrackerExtraFieldDataAsync(sessionHash, tracker_item_id, tracker_extra_field_id, tracker_extra_field_data_id, field_data, null);
        }
        
        /// <remarks/>
        public void updateTrackerExtraFieldDataAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_id, int tracker_extra_field_data_id, string field_data, object userState) {
            if ((this.updateTrackerExtraFieldDataOperationCompleted == null)) {
                this.updateTrackerExtraFieldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerExtraFieldDataOperationCompleted);
            }
            this.InvokeAsync("updateTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id,
                        tracker_extra_field_data_id,
                        field_data}, this.updateTrackerExtraFieldDataOperationCompleted, userState);
        }
        
        private void OnupdateTrackerExtraFieldDataOperationCompleted(object arg) {
            if ((this.updateTrackerExtraFieldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerExtraFieldDataCompleted(this, new updateTrackerExtraFieldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerExtraFieldData", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerExtraFieldData")]
        public int addTrackerExtraFieldData(string sessionHash, int tracker_item_id, int tracker_extra_field_id, string field_data) {
            object[] results = this.Invoke("addTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id,
                        field_data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerExtraFieldData(string sessionHash, int tracker_item_id, int tracker_extra_field_id, string field_data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id,
                        field_data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerExtraFieldData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerExtraFieldDataAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_id, string field_data) {
            this.addTrackerExtraFieldDataAsync(sessionHash, tracker_item_id, tracker_extra_field_id, field_data, null);
        }
        
        /// <remarks/>
        public void addTrackerExtraFieldDataAsync(string sessionHash, int tracker_item_id, int tracker_extra_field_id, string field_data, object userState) {
            if ((this.addTrackerExtraFieldDataOperationCompleted == null)) {
                this.addTrackerExtraFieldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerExtraFieldDataOperationCompleted);
            }
            this.InvokeAsync("addTrackerExtraFieldData", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_extra_field_id,
                        field_data}, this.addTrackerExtraFieldDataOperationCompleted, userState);
        }
        
        private void OnaddTrackerExtraFieldDataOperationCompleted(object arg) {
            if ((this.addTrackerExtraFieldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerExtraFieldDataCompleted(this, new addTrackerExtraFieldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemByExtraFieldData", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemByExtraFieldData")]
        public TrackerItem[] getTrackerItemByExtraFieldData(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias, string tracker_extra_field_data) {
            object[] results = this.Invoke("getTrackerItemByExtraFieldData", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        tracker_extra_field_alias,
                        tracker_extra_field_data});
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemByExtraFieldData(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias, string tracker_extra_field_data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemByExtraFieldData", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        tracker_extra_field_alias,
                        tracker_extra_field_data}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItem[] EndgetTrackerItemByExtraFieldData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemByExtraFieldDataAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias, string tracker_extra_field_data) {
            this.getTrackerItemByExtraFieldDataAsync(sessionHash, tracker_id, tracker_extra_field_id, tracker_extra_field_alias, tracker_extra_field_data, null);
        }
        
        /// <remarks/>
        public void getTrackerItemByExtraFieldDataAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias, string tracker_extra_field_data, object userState) {
            if ((this.getTrackerItemByExtraFieldDataOperationCompleted == null)) {
                this.getTrackerItemByExtraFieldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemByExtraFieldDataOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemByExtraFieldData", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        tracker_extra_field_alias,
                        tracker_extra_field_data}, this.getTrackerItemByExtraFieldDataOperationCompleted, userState);
        }
        
        private void OngetTrackerItemByExtraFieldDataOperationCompleted(object arg) {
            if ((this.getTrackerItemByExtraFieldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemByExtraFieldDataCompleted(this, new getTrackerItemByExtraFieldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemsNewerThanExtraField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemsNewerThanExtraField")]
        public TrackerItem[] getTrackerItemsNewerThanExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias) {
            object[] results = this.Invoke("getTrackerItemsNewerThanExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        tracker_extra_field_alias});
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemsNewerThanExtraField(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemsNewerThanExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        tracker_extra_field_alias}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItem[] EndgetTrackerItemsNewerThanExtraField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemsNewerThanExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias) {
            this.getTrackerItemsNewerThanExtraFieldAsync(sessionHash, tracker_id, tracker_extra_field_id, tracker_extra_field_alias, null);
        }
        
        /// <remarks/>
        public void getTrackerItemsNewerThanExtraFieldAsync(string sessionHash, int tracker_id, int tracker_extra_field_id, string tracker_extra_field_alias, object userState) {
            if ((this.getTrackerItemsNewerThanExtraFieldOperationCompleted == null)) {
                this.getTrackerItemsNewerThanExtraFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemsNewerThanExtraFieldOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemsNewerThanExtraField", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_extra_field_id,
                        tracker_extra_field_alias}, this.getTrackerItemsNewerThanExtraFieldOperationCompleted, userState);
        }
        
        private void OngetTrackerItemsNewerThanExtraFieldOperationCompleted(object arg) {
            if ((this.getTrackerItemsNewerThanExtraFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemsNewerThanExtraFieldCompleted(this, new getTrackerItemsNewerThanExtraFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemAssignees", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemAssignees")]
        public TrackerItemAssignee[] getTrackerItemAssignees(string sessionHash, int tracker_item_id) {
            object[] results = this.Invoke("getTrackerItemAssignees", new object[] {
                        sessionHash,
                        tracker_item_id});
            return ((TrackerItemAssignee[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemAssignees(string sessionHash, int tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemAssignees", new object[] {
                        sessionHash,
                        tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemAssignee[] EndgetTrackerItemAssignees(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemAssignee[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemAssigneesAsync(string sessionHash, int tracker_item_id) {
            this.getTrackerItemAssigneesAsync(sessionHash, tracker_item_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemAssigneesAsync(string sessionHash, int tracker_item_id, object userState) {
            if ((this.getTrackerItemAssigneesOperationCompleted == null)) {
                this.getTrackerItemAssigneesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemAssigneesOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemAssignees", new object[] {
                        sessionHash,
                        tracker_item_id}, this.getTrackerItemAssigneesOperationCompleted, userState);
        }
        
        private void OngetTrackerItemAssigneesOperationCompleted(object arg) {
            if ((this.getTrackerItemAssigneesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemAssigneesCompleted(this, new getTrackerItemAssigneesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerItemAssignee", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerItemAssignee")]
        public int deleteTrackerItemAssignee(string sessionHash, int tracker_item_id, int assignee) {
            object[] results = this.Invoke("deleteTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerItemAssignee(string sessionHash, int tracker_item_id, int assignee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerItemAssignee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerItemAssigneeAsync(string sessionHash, int tracker_item_id, int assignee) {
            this.deleteTrackerItemAssigneeAsync(sessionHash, tracker_item_id, assignee, null);
        }
        
        /// <remarks/>
        public void deleteTrackerItemAssigneeAsync(string sessionHash, int tracker_item_id, int assignee, object userState) {
            if ((this.deleteTrackerItemAssigneeOperationCompleted == null)) {
                this.deleteTrackerItemAssigneeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerItemAssigneeOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee}, this.deleteTrackerItemAssigneeOperationCompleted, userState);
        }
        
        private void OndeleteTrackerItemAssigneeOperationCompleted(object arg) {
            if ((this.deleteTrackerItemAssigneeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerItemAssigneeCompleted(this, new deleteTrackerItemAssigneeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerItemAssignee", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerItemAssignee")]
        public int updateTrackerItemAssignee(string sessionHash, int tracker_item_id, int assignee, int percent_utilization) {
            object[] results = this.Invoke("updateTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee,
                        percent_utilization});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerItemAssignee(string sessionHash, int tracker_item_id, int assignee, int percent_utilization, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee,
                        percent_utilization}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerItemAssignee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerItemAssigneeAsync(string sessionHash, int tracker_item_id, int assignee, int percent_utilization) {
            this.updateTrackerItemAssigneeAsync(sessionHash, tracker_item_id, assignee, percent_utilization, null);
        }
        
        /// <remarks/>
        public void updateTrackerItemAssigneeAsync(string sessionHash, int tracker_item_id, int assignee, int percent_utilization, object userState) {
            if ((this.updateTrackerItemAssigneeOperationCompleted == null)) {
                this.updateTrackerItemAssigneeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerItemAssigneeOperationCompleted);
            }
            this.InvokeAsync("updateTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee,
                        percent_utilization}, this.updateTrackerItemAssigneeOperationCompleted, userState);
        }
        
        private void OnupdateTrackerItemAssigneeOperationCompleted(object arg) {
            if ((this.updateTrackerItemAssigneeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerItemAssigneeCompleted(this, new updateTrackerItemAssigneeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerItemAssignee", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItemAssignee")]
        public int addTrackerItemAssignee(string sessionHash, int tracker_item_id, int assignee, int percent_utilization) {
            object[] results = this.Invoke("addTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee,
                        percent_utilization});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItemAssignee(string sessionHash, int tracker_item_id, int assignee, int percent_utilization, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee,
                        percent_utilization}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItemAssignee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemAssigneeAsync(string sessionHash, int tracker_item_id, int assignee, int percent_utilization) {
            this.addTrackerItemAssigneeAsync(sessionHash, tracker_item_id, assignee, percent_utilization, null);
        }
        
        /// <remarks/>
        public void addTrackerItemAssigneeAsync(string sessionHash, int tracker_item_id, int assignee, int percent_utilization, object userState) {
            if ((this.addTrackerItemAssigneeOperationCompleted == null)) {
                this.addTrackerItemAssigneeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemAssigneeOperationCompleted);
            }
            this.InvokeAsync("addTrackerItemAssignee", new object[] {
                        sessionHash,
                        tracker_item_id,
                        assignee,
                        percent_utilization}, this.addTrackerItemAssigneeOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemAssigneeOperationCompleted(object arg) {
            if ((this.addTrackerItemAssigneeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemAssigneeCompleted(this, new addTrackerItemAssigneeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemMessages", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemMessages")]
        public TrackerItemMessage[] getTrackerItemMessages(string sessionHash, int tracker_item_id, int submitted_by) {
            object[] results = this.Invoke("getTrackerItemMessages", new object[] {
                        sessionHash,
                        tracker_item_id,
                        submitted_by});
            return ((TrackerItemMessage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemMessages(string sessionHash, int tracker_item_id, int submitted_by, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemMessages", new object[] {
                        sessionHash,
                        tracker_item_id,
                        submitted_by}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemMessage[] EndgetTrackerItemMessages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemMessagesAsync(string sessionHash, int tracker_item_id, int submitted_by) {
            this.getTrackerItemMessagesAsync(sessionHash, tracker_item_id, submitted_by, null);
        }
        
        /// <remarks/>
        public void getTrackerItemMessagesAsync(string sessionHash, int tracker_item_id, int submitted_by, object userState) {
            if ((this.getTrackerItemMessagesOperationCompleted == null)) {
                this.getTrackerItemMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemMessagesOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemMessages", new object[] {
                        sessionHash,
                        tracker_item_id,
                        submitted_by}, this.getTrackerItemMessagesOperationCompleted, userState);
        }
        
        private void OngetTrackerItemMessagesOperationCompleted(object arg) {
            if ((this.getTrackerItemMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemMessagesCompleted(this, new getTrackerItemMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemMessage")]
        public TrackerItemMessage[] getTrackerItemMessageArray(string sessionHash, int[] tracker_item_id, int[] tracker_item_message_id) {
            object[] results = this.Invoke("getTrackerItemMessageArray", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id});
            return ((TrackerItemMessage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemMessageArray(string sessionHash, int[] tracker_item_id, int[] tracker_item_message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemMessageArray", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemMessage[] EndgetTrackerItemMessageArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemMessageArrayAsync(string sessionHash, int[] tracker_item_id, int[] tracker_item_message_id) {
            this.getTrackerItemMessageArrayAsync(sessionHash, tracker_item_id, tracker_item_message_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemMessageArrayAsync(string sessionHash, int[] tracker_item_id, int[] tracker_item_message_id, object userState) {
            if ((this.getTrackerItemMessageArrayOperationCompleted == null)) {
                this.getTrackerItemMessageArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemMessageArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemMessageArray", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id}, this.getTrackerItemMessageArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerItemMessageArrayOperationCompleted(object arg) {
            if ((this.getTrackerItemMessageArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemMessageArrayCompleted(this, new getTrackerItemMessageArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemMessage")]
        public TrackerItemMessage getTrackerItemMessage(string sessionHash, int tracker_item_id, int tracker_item_message_id) {
            object[] results = this.Invoke("getTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id});
            return ((TrackerItemMessage)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemMessage(string sessionHash, int tracker_item_id, int tracker_item_message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemMessage EndgetTrackerItemMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemMessage)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemMessageAsync(string sessionHash, int tracker_item_id, int tracker_item_message_id) {
            this.getTrackerItemMessageAsync(sessionHash, tracker_item_id, tracker_item_message_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemMessageAsync(string sessionHash, int tracker_item_id, int tracker_item_message_id, object userState) {
            if ((this.getTrackerItemMessageOperationCompleted == null)) {
                this.getTrackerItemMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemMessageOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id}, this.getTrackerItemMessageOperationCompleted, userState);
        }
        
        private void OngetTrackerItemMessageOperationCompleted(object arg) {
            if ((this.getTrackerItemMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemMessageCompleted(this, new getTrackerItemMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerItemMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerItemMessage")]
        public int deleteTrackerItemMessage(string sessionHash, int tracker_item_id, int tracker_item_message_id) {
            object[] results = this.Invoke("deleteTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerItemMessage(string sessionHash, int tracker_item_id, int tracker_item_message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerItemMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerItemMessageAsync(string sessionHash, int tracker_item_id, int tracker_item_message_id) {
            this.deleteTrackerItemMessageAsync(sessionHash, tracker_item_id, tracker_item_message_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerItemMessageAsync(string sessionHash, int tracker_item_id, int tracker_item_message_id, object userState) {
            if ((this.deleteTrackerItemMessageOperationCompleted == null)) {
                this.deleteTrackerItemMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerItemMessageOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_message_id}, this.deleteTrackerItemMessageOperationCompleted, userState);
        }
        
        private void OndeleteTrackerItemMessageOperationCompleted(object arg) {
            if ((this.deleteTrackerItemMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerItemMessageCompleted(this, new deleteTrackerItemMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerItemMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItemMessage")]
        public int addTrackerItemMessage(string sessionHash, int tracker_item_id, string body) {
            object[] results = this.Invoke("addTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        body});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItemMessage(string sessionHash, int tracker_item_id, string body, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        body}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItemMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemMessageAsync(string sessionHash, int tracker_item_id, string body) {
            this.addTrackerItemMessageAsync(sessionHash, tracker_item_id, body, null);
        }
        
        /// <remarks/>
        public void addTrackerItemMessageAsync(string sessionHash, int tracker_item_id, string body, object userState) {
            if ((this.addTrackerItemMessageOperationCompleted == null)) {
                this.addTrackerItemMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemMessageOperationCompleted);
            }
            this.InvokeAsync("addTrackerItemMessage", new object[] {
                        sessionHash,
                        tracker_item_id,
                        body}, this.addTrackerItemMessageOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemMessageOperationCompleted(object arg) {
            if ((this.addTrackerItemMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemMessageCompleted(this, new addTrackerItemMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemScmCommits", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemScmCommits")]
        public TrackerItemScmCommit[] getTrackerItemScmCommits(string sessionHash, int tracker_item_id, int scm_commit_id) {
            object[] results = this.Invoke("getTrackerItemScmCommits", new object[] {
                        sessionHash,
                        tracker_item_id,
                        scm_commit_id});
            return ((TrackerItemScmCommit[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemScmCommits(string sessionHash, int tracker_item_id, int scm_commit_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemScmCommits", new object[] {
                        sessionHash,
                        tracker_item_id,
                        scm_commit_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemScmCommit[] EndgetTrackerItemScmCommits(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemScmCommit[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemScmCommitsAsync(string sessionHash, int tracker_item_id, int scm_commit_id) {
            this.getTrackerItemScmCommitsAsync(sessionHash, tracker_item_id, scm_commit_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemScmCommitsAsync(string sessionHash, int tracker_item_id, int scm_commit_id, object userState) {
            if ((this.getTrackerItemScmCommitsOperationCompleted == null)) {
                this.getTrackerItemScmCommitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemScmCommitsOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemScmCommits", new object[] {
                        sessionHash,
                        tracker_item_id,
                        scm_commit_id}, this.getTrackerItemScmCommitsOperationCompleted, userState);
        }
        
        private void OngetTrackerItemScmCommitsOperationCompleted(object arg) {
            if ((this.getTrackerItemScmCommitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemScmCommitsCompleted(this, new getTrackerItemScmCommitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemTimes", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemTimes")]
        public TrackerItemTime[] getTrackerItemTimes(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours) {
            object[] results = this.Invoke("getTrackerItemTimes", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_time_code_id,
                        date_entry,
                        user_id,
                        hours});
            return ((TrackerItemTime[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemTimes(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemTimes", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_time_code_id,
                        date_entry,
                        user_id,
                        hours}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemTime[] EndgetTrackerItemTimes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemTime[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemTimesAsync(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours) {
            this.getTrackerItemTimesAsync(sessionHash, tracker_item_id, tracker_time_code_id, date_entry, user_id, hours, null);
        }
        
        /// <remarks/>
        public void getTrackerItemTimesAsync(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours, object userState) {
            if ((this.getTrackerItemTimesOperationCompleted == null)) {
                this.getTrackerItemTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemTimesOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemTimes", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_time_code_id,
                        date_entry,
                        user_id,
                        hours}, this.getTrackerItemTimesOperationCompleted, userState);
        }
        
        private void OngetTrackerItemTimesOperationCompleted(object arg) {
            if ((this.getTrackerItemTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemTimesCompleted(this, new getTrackerItemTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemTime", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemTime")]
        public TrackerItemTime[] getTrackerItemTimeArray(string sessionHash, int tracker_item_id, int[] tracker_item_time_id) {
            object[] results = this.Invoke("getTrackerItemTimeArray", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id});
            return ((TrackerItemTime[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemTimeArray(string sessionHash, int tracker_item_id, int[] tracker_item_time_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemTimeArray", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemTime[] EndgetTrackerItemTimeArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemTime[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemTimeArrayAsync(string sessionHash, int tracker_item_id, int[] tracker_item_time_id) {
            this.getTrackerItemTimeArrayAsync(sessionHash, tracker_item_id, tracker_item_time_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemTimeArrayAsync(string sessionHash, int tracker_item_id, int[] tracker_item_time_id, object userState) {
            if ((this.getTrackerItemTimeArrayOperationCompleted == null)) {
                this.getTrackerItemTimeArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemTimeArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemTimeArray", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id}, this.getTrackerItemTimeArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerItemTimeArrayOperationCompleted(object arg) {
            if ((this.getTrackerItemTimeArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemTimeArrayCompleted(this, new getTrackerItemTimeArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemTime", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemTime")]
        public TrackerItemTime getTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_item_time_id) {
            object[] results = this.Invoke("getTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id});
            return ((TrackerItemTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_item_time_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemTime EndgetTrackerItemTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemTime)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_item_time_id) {
            this.getTrackerItemTimeAsync(sessionHash, tracker_item_id, tracker_item_time_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_item_time_id, object userState) {
            if ((this.getTrackerItemTimeOperationCompleted == null)) {
                this.getTrackerItemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemTimeOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id}, this.getTrackerItemTimeOperationCompleted, userState);
        }
        
        private void OngetTrackerItemTimeOperationCompleted(object arg) {
            if ((this.getTrackerItemTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemTimeCompleted(this, new getTrackerItemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerItemTime", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerItemTime")]
        public int deleteTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_item_time_id) {
            object[] results = this.Invoke("deleteTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_item_time_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerItemTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_item_time_id) {
            this.deleteTrackerItemTimeAsync(sessionHash, tracker_item_id, tracker_item_time_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_item_time_id, object userState) {
            if ((this.deleteTrackerItemTimeOperationCompleted == null)) {
                this.deleteTrackerItemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerItemTimeOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id}, this.deleteTrackerItemTimeOperationCompleted, userState);
        }
        
        private void OndeleteTrackerItemTimeOperationCompleted(object arg) {
            if ((this.deleteTrackerItemTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerItemTimeCompleted(this, new deleteTrackerItemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerItemTime", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerItemTime")]
        public int updateTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_item_time_id, string date_entry, int user_id, double hours, int tracker_time_code_id) {
            object[] results = this.Invoke("updateTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id,
                        date_entry,
                        user_id,
                        hours,
                        tracker_time_code_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_item_time_id, string date_entry, int user_id, double hours, int tracker_time_code_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id,
                        date_entry,
                        user_id,
                        hours,
                        tracker_time_code_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerItemTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_item_time_id, string date_entry, int user_id, double hours, int tracker_time_code_id) {
            this.updateTrackerItemTimeAsync(sessionHash, tracker_item_id, tracker_item_time_id, date_entry, user_id, hours, tracker_time_code_id, null);
        }
        
        /// <remarks/>
        public void updateTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_item_time_id, string date_entry, int user_id, double hours, int tracker_time_code_id, object userState) {
            if ((this.updateTrackerItemTimeOperationCompleted == null)) {
                this.updateTrackerItemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerItemTimeOperationCompleted);
            }
            this.InvokeAsync("updateTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_item_time_id,
                        date_entry,
                        user_id,
                        hours,
                        tracker_time_code_id}, this.updateTrackerItemTimeOperationCompleted, userState);
        }
        
        private void OnupdateTrackerItemTimeOperationCompleted(object arg) {
            if ((this.updateTrackerItemTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerItemTimeCompleted(this, new updateTrackerItemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerItemTime", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItemTime")]
        public int addTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours) {
            object[] results = this.Invoke("addTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_time_code_id,
                        date_entry,
                        user_id,
                        hours});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItemTime(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_time_code_id,
                        date_entry,
                        user_id,
                        hours}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItemTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours) {
            this.addTrackerItemTimeAsync(sessionHash, tracker_item_id, tracker_time_code_id, date_entry, user_id, hours, null);
        }
        
        /// <remarks/>
        public void addTrackerItemTimeAsync(string sessionHash, int tracker_item_id, int tracker_time_code_id, string date_entry, int user_id, double hours, object userState) {
            if ((this.addTrackerItemTimeOperationCompleted == null)) {
                this.addTrackerItemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemTimeOperationCompleted);
            }
            this.InvokeAsync("addTrackerItemTime", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_time_code_id,
                        date_entry,
                        user_id,
                        hours}, this.addTrackerItemTimeOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemTimeOperationCompleted(object arg) {
            if ((this.addTrackerItemTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemTimeCompleted(this, new addTrackerItemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerMyQueues", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerMyQueues")]
        public TrackerMyQueue[] getTrackerMyQueues(string sessionHash, int user_id) {
            object[] results = this.Invoke("getTrackerMyQueues", new object[] {
                        sessionHash,
                        user_id});
            return ((TrackerMyQueue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerMyQueues(string sessionHash, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerMyQueues", new object[] {
                        sessionHash,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerMyQueue[] EndgetTrackerMyQueues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerMyQueue[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerMyQueuesAsync(string sessionHash, int user_id) {
            this.getTrackerMyQueuesAsync(sessionHash, user_id, null);
        }
        
        /// <remarks/>
        public void getTrackerMyQueuesAsync(string sessionHash, int user_id, object userState) {
            if ((this.getTrackerMyQueuesOperationCompleted == null)) {
                this.getTrackerMyQueuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerMyQueuesOperationCompleted);
            }
            this.InvokeAsync("getTrackerMyQueues", new object[] {
                        sessionHash,
                        user_id}, this.getTrackerMyQueuesOperationCompleted, userState);
        }
        
        private void OngetTrackerMyQueuesOperationCompleted(object arg) {
            if ((this.getTrackerMyQueuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerMyQueuesCompleted(this, new getTrackerMyQueuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerMyQueue", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerMyQueue")]
        public int addTrackerMyQueue(string sessionHash, int user_id, int tracker_item_id, int sort_order) {
            object[] results = this.Invoke("addTrackerMyQueue", new object[] {
                        sessionHash,
                        user_id,
                        tracker_item_id,
                        sort_order});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerMyQueue(string sessionHash, int user_id, int tracker_item_id, int sort_order, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerMyQueue", new object[] {
                        sessionHash,
                        user_id,
                        tracker_item_id,
                        sort_order}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerMyQueue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerMyQueueAsync(string sessionHash, int user_id, int tracker_item_id, int sort_order) {
            this.addTrackerMyQueueAsync(sessionHash, user_id, tracker_item_id, sort_order, null);
        }
        
        /// <remarks/>
        public void addTrackerMyQueueAsync(string sessionHash, int user_id, int tracker_item_id, int sort_order, object userState) {
            if ((this.addTrackerMyQueueOperationCompleted == null)) {
                this.addTrackerMyQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerMyQueueOperationCompleted);
            }
            this.InvokeAsync("addTrackerMyQueue", new object[] {
                        sessionHash,
                        user_id,
                        tracker_item_id,
                        sort_order}, this.addTrackerMyQueueOperationCompleted, userState);
        }
        
        private void OnaddTrackerMyQueueOperationCompleted(object arg) {
            if ((this.addTrackerMyQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerMyQueueCompleted(this, new addTrackerMyQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemDuplicates", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemDuplicates")]
        public TrackerItemDuplicate[] getTrackerItemDuplicates(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id) {
            object[] results = this.Invoke("getTrackerItemDuplicates", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id});
            return ((TrackerItemDuplicate[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemDuplicates(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemDuplicates", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemDuplicate[] EndgetTrackerItemDuplicates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemDuplicate[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemDuplicatesAsync(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id) {
            this.getTrackerItemDuplicatesAsync(sessionHash, tracker_item_id, duplicate_of_tracker_item_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemDuplicatesAsync(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id, object userState) {
            if ((this.getTrackerItemDuplicatesOperationCompleted == null)) {
                this.getTrackerItemDuplicatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemDuplicatesOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemDuplicates", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id}, this.getTrackerItemDuplicatesOperationCompleted, userState);
        }
        
        private void OngetTrackerItemDuplicatesOperationCompleted(object arg) {
            if ((this.getTrackerItemDuplicatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemDuplicatesCompleted(this, new getTrackerItemDuplicatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerItemDuplicate", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItemDuplicate")]
        public int addTrackerItemDuplicate(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id) {
            object[] results = this.Invoke("addTrackerItemDuplicate", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItemDuplicate(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItemDuplicate", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItemDuplicate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemDuplicateAsync(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id) {
            this.addTrackerItemDuplicateAsync(sessionHash, tracker_item_id, duplicate_of_tracker_item_id, null);
        }
        
        /// <remarks/>
        public void addTrackerItemDuplicateAsync(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id, object userState) {
            if ((this.addTrackerItemDuplicateOperationCompleted == null)) {
                this.addTrackerItemDuplicateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemDuplicateOperationCompleted);
            }
            this.InvokeAsync("addTrackerItemDuplicate", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id}, this.addTrackerItemDuplicateOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemDuplicateOperationCompleted(object arg) {
            if ((this.addTrackerItemDuplicateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemDuplicateCompleted(this, new addTrackerItemDuplicateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerItemDuplicate", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerItemDuplicate")]
        public int deleteTrackerItemDuplicate(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id) {
            object[] results = this.Invoke("deleteTrackerItemDuplicate", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerItemDuplicate(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerItemDuplicate", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerItemDuplicate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerItemDuplicateAsync(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id) {
            this.deleteTrackerItemDuplicateAsync(sessionHash, tracker_item_id, duplicate_of_tracker_item_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerItemDuplicateAsync(string sessionHash, int tracker_item_id, int duplicate_of_tracker_item_id, object userState) {
            if ((this.deleteTrackerItemDuplicateOperationCompleted == null)) {
                this.deleteTrackerItemDuplicateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerItemDuplicateOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerItemDuplicate", new object[] {
                        sessionHash,
                        tracker_item_id,
                        duplicate_of_tracker_item_id}, this.deleteTrackerItemDuplicateOperationCompleted, userState);
        }
        
        private void OndeleteTrackerItemDuplicateOperationCompleted(object arg) {
            if ((this.deleteTrackerItemDuplicateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerItemDuplicateCompleted(this, new deleteTrackerItemDuplicateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemRelations", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemRelations")]
        public TrackerItemRelation[] getTrackerItemRelations(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type) {
            object[] results = this.Invoke("getTrackerItemRelations", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id,
                        link_type});
            return ((TrackerItemRelation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemRelations(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemRelations", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id,
                        link_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemRelation[] EndgetTrackerItemRelations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemRelation[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemRelationsAsync(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type) {
            this.getTrackerItemRelationsAsync(sessionHash, tracker_item_id, related_tracker_item_id, link_type, null);
        }
        
        /// <remarks/>
        public void getTrackerItemRelationsAsync(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type, object userState) {
            if ((this.getTrackerItemRelationsOperationCompleted == null)) {
                this.getTrackerItemRelationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemRelationsOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemRelations", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id,
                        link_type}, this.getTrackerItemRelationsOperationCompleted, userState);
        }
        
        private void OngetTrackerItemRelationsOperationCompleted(object arg) {
            if ((this.getTrackerItemRelationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemRelationsCompleted(this, new getTrackerItemRelationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerItemRelation", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerItemRelation")]
        public int deleteTrackerItemRelation(string sessionHash, int tracker_item_id, int related_tracker_item_id) {
            object[] results = this.Invoke("deleteTrackerItemRelation", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerItemRelation(string sessionHash, int tracker_item_id, int related_tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerItemRelation", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerItemRelation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerItemRelationAsync(string sessionHash, int tracker_item_id, int related_tracker_item_id) {
            this.deleteTrackerItemRelationAsync(sessionHash, tracker_item_id, related_tracker_item_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerItemRelationAsync(string sessionHash, int tracker_item_id, int related_tracker_item_id, object userState) {
            if ((this.deleteTrackerItemRelationOperationCompleted == null)) {
                this.deleteTrackerItemRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerItemRelationOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerItemRelation", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id}, this.deleteTrackerItemRelationOperationCompleted, userState);
        }
        
        private void OndeleteTrackerItemRelationOperationCompleted(object arg) {
            if ((this.deleteTrackerItemRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerItemRelationCompleted(this, new deleteTrackerItemRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemRelation", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItemRelation")]
        public int addTrackerItemRelation(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type) {
            object[] results = this.Invoke("addTrackerItemRelation", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id,
                        link_type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItemRelation(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItemRelation", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id,
                        link_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItemRelation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemRelationAsync(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type) {
            this.addTrackerItemRelationAsync(sessionHash, tracker_item_id, related_tracker_item_id, link_type, null);
        }
        
        /// <remarks/>
        public void addTrackerItemRelationAsync(string sessionHash, int tracker_item_id, int related_tracker_item_id, string link_type, object userState) {
            if ((this.addTrackerItemRelationOperationCompleted == null)) {
                this.addTrackerItemRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemRelationOperationCompleted);
            }
            this.InvokeAsync("addTrackerItemRelation", new object[] {
                        sessionHash,
                        tracker_item_id,
                        related_tracker_item_id,
                        link_type}, this.addTrackerItemRelationOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemRelationOperationCompleted(object arg) {
            if ((this.addTrackerItemRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemRelationCompleted(this, new addTrackerItemRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItems", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItems")]
        public TrackerItem[] getTrackerItems(string sessionHash, int tracker_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees) {
            object[] results = this.Invoke("getTrackerItems", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        submitted_by,
                        open_date,
                        close_date,
                        last_modified_date,
                        last_modified_by,
                        sort_order,
                        parent_id,
                        assignees});
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItems(string sessionHash, int tracker_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItems", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        submitted_by,
                        open_date,
                        close_date,
                        last_modified_date,
                        last_modified_by,
                        sort_order,
                        parent_id,
                        assignees}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItem[] EndgetTrackerItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemsAsync(string sessionHash, int tracker_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees) {
            this.getTrackerItemsAsync(sessionHash, tracker_id, status_id, priority, submitted_by, open_date, close_date, last_modified_date, last_modified_by, sort_order, parent_id, assignees, null);
        }
        
        /// <remarks/>
        public void getTrackerItemsAsync(string sessionHash, int tracker_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees, object userState) {
            if ((this.getTrackerItemsOperationCompleted == null)) {
                this.getTrackerItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemsOperationCompleted);
            }
            this.InvokeAsync("getTrackerItems", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        submitted_by,
                        open_date,
                        close_date,
                        last_modified_date,
                        last_modified_by,
                        sort_order,
                        parent_id,
                        assignees}, this.getTrackerItemsOperationCompleted, userState);
        }
        
        private void OngetTrackerItemsOperationCompleted(object arg) {
            if ((this.getTrackerItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemsCompleted(this, new getTrackerItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemsFull", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemsFull")]
        public TrackerItemFull[] getTrackerItemsFull(string sessionHash, int tracker_id, int tracker_item_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees) {
            object[] results = this.Invoke("getTrackerItemsFull", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_item_id,
                        status_id,
                        priority,
                        submitted_by,
                        open_date,
                        close_date,
                        last_modified_date,
                        last_modified_by,
                        sort_order,
                        parent_id,
                        assignees});
            return ((TrackerItemFull[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemsFull(string sessionHash, int tracker_id, int tracker_item_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemsFull", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_item_id,
                        status_id,
                        priority,
                        submitted_by,
                        open_date,
                        close_date,
                        last_modified_date,
                        last_modified_by,
                        sort_order,
                        parent_id,
                        assignees}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemFull[] EndgetTrackerItemsFull(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemFull[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemsFullAsync(string sessionHash, int tracker_id, int tracker_item_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees) {
            this.getTrackerItemsFullAsync(sessionHash, tracker_id, tracker_item_id, status_id, priority, submitted_by, open_date, close_date, last_modified_date, last_modified_by, sort_order, parent_id, assignees, null);
        }
        
        /// <remarks/>
        public void getTrackerItemsFullAsync(string sessionHash, int tracker_id, int tracker_item_id, int status_id, int priority, int submitted_by, string open_date, string close_date, string last_modified_date, int last_modified_by, int sort_order, int parent_id, int[] assignees, object userState) {
            if ((this.getTrackerItemsFullOperationCompleted == null)) {
                this.getTrackerItemsFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemsFullOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemsFull", new object[] {
                        sessionHash,
                        tracker_id,
                        tracker_item_id,
                        status_id,
                        priority,
                        submitted_by,
                        open_date,
                        close_date,
                        last_modified_date,
                        last_modified_by,
                        sort_order,
                        parent_id,
                        assignees}, this.getTrackerItemsFullOperationCompleted, userState);
        }
        
        private void OngetTrackerItemsFullOperationCompleted(object arg) {
            if ((this.getTrackerItemsFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemsFullCompleted(this, new getTrackerItemsFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItem", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItem")]
        public TrackerItem[] getTrackerItemArray(string sessionHash, int[] tracker_item_id) {
            object[] results = this.Invoke("getTrackerItemArray", new object[] {
                        sessionHash,
                        tracker_item_id});
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemArray(string sessionHash, int[] tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemArray", new object[] {
                        sessionHash,
                        tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItem[] EndgetTrackerItemArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemArrayAsync(string sessionHash, int[] tracker_item_id) {
            this.getTrackerItemArrayAsync(sessionHash, tracker_item_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemArrayAsync(string sessionHash, int[] tracker_item_id, object userState) {
            if ((this.getTrackerItemArrayOperationCompleted == null)) {
                this.getTrackerItemArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemArray", new object[] {
                        sessionHash,
                        tracker_item_id}, this.getTrackerItemArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerItemArrayOperationCompleted(object arg) {
            if ((this.getTrackerItemArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemArrayCompleted(this, new getTrackerItemArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItem", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItem")]
        public TrackerItem getTrackerItem(string sessionHash, int tracker_item_id) {
            object[] results = this.Invoke("getTrackerItem", new object[] {
                        sessionHash,
                        tracker_item_id});
            return ((TrackerItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItem(string sessionHash, int tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItem", new object[] {
                        sessionHash,
                        tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItem EndgetTrackerItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItem)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemAsync(string sessionHash, int tracker_item_id) {
            this.getTrackerItemAsync(sessionHash, tracker_item_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemAsync(string sessionHash, int tracker_item_id, object userState) {
            if ((this.getTrackerItemOperationCompleted == null)) {
                this.getTrackerItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemOperationCompleted);
            }
            this.InvokeAsync("getTrackerItem", new object[] {
                        sessionHash,
                        tracker_item_id}, this.getTrackerItemOperationCompleted, userState);
        }
        
        private void OngetTrackerItemOperationCompleted(object arg) {
            if ((this.getTrackerItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemCompleted(this, new getTrackerItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemFull", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemFull")]
        public TrackerItemFull getTrackerItemFull(string sessionHash, int tracker_item_id) {
            object[] results = this.Invoke("getTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_item_id});
            return ((TrackerItemFull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemFull(string sessionHash, int tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemFull EndgetTrackerItemFull(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemFull)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemFullAsync(string sessionHash, int tracker_item_id) {
            this.getTrackerItemFullAsync(sessionHash, tracker_item_id, null);
        }
        
        /// <remarks/>
        public void getTrackerItemFullAsync(string sessionHash, int tracker_item_id, object userState) {
            if ((this.getTrackerItemFullOperationCompleted == null)) {
                this.getTrackerItemFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemFullOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_item_id}, this.getTrackerItemFullOperationCompleted, userState);
        }
        
        private void OngetTrackerItemFullOperationCompleted(object arg) {
            if ((this.getTrackerItemFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemFullCompleted(this, new getTrackerItemFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerItem", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerItem")]
        public int deleteTrackerItem(string sessionHash, int tracker_item_id) {
            object[] results = this.Invoke("deleteTrackerItem", new object[] {
                        sessionHash,
                        tracker_item_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerItem(string sessionHash, int tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerItem", new object[] {
                        sessionHash,
                        tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerItemAsync(string sessionHash, int tracker_item_id) {
            this.deleteTrackerItemAsync(sessionHash, tracker_item_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerItemAsync(string sessionHash, int tracker_item_id, object userState) {
            if ((this.deleteTrackerItemOperationCompleted == null)) {
                this.deleteTrackerItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerItemOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerItem", new object[] {
                        sessionHash,
                        tracker_item_id}, this.deleteTrackerItemOperationCompleted, userState);
        }
        
        private void OndeleteTrackerItemOperationCompleted(object arg) {
            if ((this.deleteTrackerItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerItemCompleted(this, new deleteTrackerItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerItemFull", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerItemFull")]
        public int updateTrackerItemFull(string sessionHash, int tracker_item_id, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerItemAssignee[] assignees, string open_date, string close_date) {
            object[] results = this.Invoke("updateTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        assignees,
                        open_date,
                        close_date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerItemFull(string sessionHash, int tracker_item_id, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerItemAssignee[] assignees, string open_date, string close_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        assignees,
                        open_date,
                        close_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerItemFull(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerItemFullAsync(string sessionHash, int tracker_item_id, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerItemAssignee[] assignees, string open_date, string close_date) {
            this.updateTrackerItemFullAsync(sessionHash, tracker_item_id, tracker_id, status_id, priority, summary, details, sort_order, parent_id, assignees, open_date, close_date, null);
        }
        
        /// <remarks/>
        public void updateTrackerItemFullAsync(string sessionHash, int tracker_item_id, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerItemAssignee[] assignees, string open_date, string close_date, object userState) {
            if ((this.updateTrackerItemFullOperationCompleted == null)) {
                this.updateTrackerItemFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerItemFullOperationCompleted);
            }
            this.InvokeAsync("updateTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_item_id,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        assignees,
                        open_date,
                        close_date}, this.updateTrackerItemFullOperationCompleted, userState);
        }
        
        private void OnupdateTrackerItemFullOperationCompleted(object arg) {
            if ((this.updateTrackerItemFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerItemFullCompleted(this, new updateTrackerItemFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerItem", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItem")]
        public int addTrackerItem(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, string open_date, string close_date) {
            object[] results = this.Invoke("addTrackerItem", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        open_date,
                        close_date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItem(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, string open_date, string close_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItem", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        open_date,
                        close_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemAsync(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, string open_date, string close_date) {
            this.addTrackerItemAsync(sessionHash, tracker_id, status_id, priority, summary, details, sort_order, parent_id, open_date, close_date, null);
        }
        
        /// <remarks/>
        public void addTrackerItemAsync(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, string open_date, string close_date, object userState) {
            if ((this.addTrackerItemOperationCompleted == null)) {
                this.addTrackerItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemOperationCompleted);
            }
            this.InvokeAsync("addTrackerItem", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        open_date,
                        close_date}, this.addTrackerItemOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemOperationCompleted(object arg) {
            if ((this.addTrackerItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemCompleted(this, new addTrackerItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerItemFull", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerItemFull")]
        public int addTrackerItemFull(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerExtraFieldData[] extra_field_data, TrackerItemAssignee[] assignees, string open_date, string close_date) {
            object[] results = this.Invoke("addTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        extra_field_data,
                        assignees,
                        open_date,
                        close_date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerItemFull(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerExtraFieldData[] extra_field_data, TrackerItemAssignee[] assignees, string open_date, string close_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        extra_field_data,
                        assignees,
                        open_date,
                        close_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerItemFull(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerItemFullAsync(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerExtraFieldData[] extra_field_data, TrackerItemAssignee[] assignees, string open_date, string close_date) {
            this.addTrackerItemFullAsync(sessionHash, tracker_id, status_id, priority, summary, details, sort_order, parent_id, extra_field_data, assignees, open_date, close_date, null);
        }
        
        /// <remarks/>
        public void addTrackerItemFullAsync(string sessionHash, int tracker_id, int status_id, int priority, string summary, string details, int sort_order, int parent_id, TrackerExtraFieldData[] extra_field_data, TrackerItemAssignee[] assignees, string open_date, string close_date, object userState) {
            if ((this.addTrackerItemFullOperationCompleted == null)) {
                this.addTrackerItemFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerItemFullOperationCompleted);
            }
            this.InvokeAsync("addTrackerItemFull", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        priority,
                        summary,
                        details,
                        sort_order,
                        parent_id,
                        extra_field_data,
                        assignees,
                        open_date,
                        close_date}, this.addTrackerItemFullOperationCompleted, userState);
        }
        
        private void OnaddTrackerItemFullOperationCompleted(object arg) {
            if ((this.addTrackerItemFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerItemFullCompleted(this, new addTrackerItemFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemsShort", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemsShort")]
        public TrackerItemShort[] getTrackerItemsShort(string sessionHash, int tracker_id, int status_id, int query_id, int limit, int offset) {
            object[] results = this.Invoke("getTrackerItemsShort", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        query_id,
                        limit,
                        offset});
            return ((TrackerItemShort[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemsShort(string sessionHash, int tracker_id, int status_id, int query_id, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemsShort", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        query_id,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemShort[] EndgetTrackerItemsShort(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemShort[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemsShortAsync(string sessionHash, int tracker_id, int status_id, int query_id, int limit, int offset) {
            this.getTrackerItemsShortAsync(sessionHash, tracker_id, status_id, query_id, limit, offset, null);
        }
        
        /// <remarks/>
        public void getTrackerItemsShortAsync(string sessionHash, int tracker_id, int status_id, int query_id, int limit, int offset, object userState) {
            if ((this.getTrackerItemsShortOperationCompleted == null)) {
                this.getTrackerItemsShortOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemsShortOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemsShort", new object[] {
                        sessionHash,
                        tracker_id,
                        status_id,
                        query_id,
                        limit,
                        offset}, this.getTrackerItemsShortOperationCompleted, userState);
        }
        
        private void OngetTrackerItemsShortOperationCompleted(object arg) {
            if ((this.getTrackerItemsShortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemsShortCompleted(this, new getTrackerItemsShortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerQuerys", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerQuerys")]
        public TrackerQuery[] getTrackerQuerys(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared) {
            object[] results = this.Invoke("getTrackerQuerys", new object[] {
                        sessionHash,
                        tracker_id,
                        user_id,
                        query_name,
                        is_shared});
            return ((TrackerQuery[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerQuerys(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerQuerys", new object[] {
                        sessionHash,
                        tracker_id,
                        user_id,
                        query_name,
                        is_shared}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerQuery[] EndgetTrackerQuerys(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerQuery[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerQuerysAsync(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared) {
            this.getTrackerQuerysAsync(sessionHash, tracker_id, user_id, query_name, is_shared, null);
        }
        
        /// <remarks/>
        public void getTrackerQuerysAsync(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared, object userState) {
            if ((this.getTrackerQuerysOperationCompleted == null)) {
                this.getTrackerQuerysOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerQuerysOperationCompleted);
            }
            this.InvokeAsync("getTrackerQuerys", new object[] {
                        sessionHash,
                        tracker_id,
                        user_id,
                        query_name,
                        is_shared}, this.getTrackerQuerysOperationCompleted, userState);
        }
        
        private void OngetTrackerQuerysOperationCompleted(object arg) {
            if ((this.getTrackerQuerysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerQuerysCompleted(this, new getTrackerQuerysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerQuery", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerQuery")]
        public TrackerQuery[] getTrackerQueryArray(string sessionHash, int[] tracker_query_id) {
            object[] results = this.Invoke("getTrackerQueryArray", new object[] {
                        sessionHash,
                        tracker_query_id});
            return ((TrackerQuery[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerQueryArray(string sessionHash, int[] tracker_query_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerQueryArray", new object[] {
                        sessionHash,
                        tracker_query_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerQuery[] EndgetTrackerQueryArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerQuery[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerQueryArrayAsync(string sessionHash, int[] tracker_query_id) {
            this.getTrackerQueryArrayAsync(sessionHash, tracker_query_id, null);
        }
        
        /// <remarks/>
        public void getTrackerQueryArrayAsync(string sessionHash, int[] tracker_query_id, object userState) {
            if ((this.getTrackerQueryArrayOperationCompleted == null)) {
                this.getTrackerQueryArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerQueryArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerQueryArray", new object[] {
                        sessionHash,
                        tracker_query_id}, this.getTrackerQueryArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerQueryArrayOperationCompleted(object arg) {
            if ((this.getTrackerQueryArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerQueryArrayCompleted(this, new getTrackerQueryArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerQuery", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerQuery")]
        public TrackerQuery getTrackerQuery(string sessionHash, int tracker_query_id) {
            object[] results = this.Invoke("getTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id});
            return ((TrackerQuery)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerQuery(string sessionHash, int tracker_query_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerQuery EndgetTrackerQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerQuery)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerQueryAsync(string sessionHash, int tracker_query_id) {
            this.getTrackerQueryAsync(sessionHash, tracker_query_id, null);
        }
        
        /// <remarks/>
        public void getTrackerQueryAsync(string sessionHash, int tracker_query_id, object userState) {
            if ((this.getTrackerQueryOperationCompleted == null)) {
                this.getTrackerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerQueryOperationCompleted);
            }
            this.InvokeAsync("getTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id}, this.getTrackerQueryOperationCompleted, userState);
        }
        
        private void OngetTrackerQueryOperationCompleted(object arg) {
            if ((this.getTrackerQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerQueryCompleted(this, new getTrackerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemsByQueryId", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemsByQueryId")]
        public TrackerItem[] getTrackerItemsByQueryId(string sessionHash, int tracker_query_id, int limit, int offset) {
            object[] results = this.Invoke("getTrackerItemsByQueryId", new object[] {
                        sessionHash,
                        tracker_query_id,
                        limit,
                        offset});
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemsByQueryId(string sessionHash, int tracker_query_id, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemsByQueryId", new object[] {
                        sessionHash,
                        tracker_query_id,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItem[] EndgetTrackerItemsByQueryId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemsByQueryIdAsync(string sessionHash, int tracker_query_id, int limit, int offset) {
            this.getTrackerItemsByQueryIdAsync(sessionHash, tracker_query_id, limit, offset, null);
        }
        
        /// <remarks/>
        public void getTrackerItemsByQueryIdAsync(string sessionHash, int tracker_query_id, int limit, int offset, object userState) {
            if ((this.getTrackerItemsByQueryIdOperationCompleted == null)) {
                this.getTrackerItemsByQueryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemsByQueryIdOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemsByQueryId", new object[] {
                        sessionHash,
                        tracker_query_id,
                        limit,
                        offset}, this.getTrackerItemsByQueryIdOperationCompleted, userState);
        }
        
        private void OngetTrackerItemsByQueryIdOperationCompleted(object arg) {
            if ((this.getTrackerItemsByQueryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemsByQueryIdCompleted(this, new getTrackerItemsByQueryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerItemsFullByQueryId", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerItemsFullByQueryId")]
        public TrackerItemFull[] getTrackerItemsFullByQueryId(string sessionHash, int tracker_query_id, int limit, int offset) {
            object[] results = this.Invoke("getTrackerItemsFullByQueryId", new object[] {
                        sessionHash,
                        tracker_query_id,
                        limit,
                        offset});
            return ((TrackerItemFull[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerItemsFullByQueryId(string sessionHash, int tracker_query_id, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerItemsFullByQueryId", new object[] {
                        sessionHash,
                        tracker_query_id,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerItemFull[] EndgetTrackerItemsFullByQueryId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerItemFull[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerItemsFullByQueryIdAsync(string sessionHash, int tracker_query_id, int limit, int offset) {
            this.getTrackerItemsFullByQueryIdAsync(sessionHash, tracker_query_id, limit, offset, null);
        }
        
        /// <remarks/>
        public void getTrackerItemsFullByQueryIdAsync(string sessionHash, int tracker_query_id, int limit, int offset, object userState) {
            if ((this.getTrackerItemsFullByQueryIdOperationCompleted == null)) {
                this.getTrackerItemsFullByQueryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerItemsFullByQueryIdOperationCompleted);
            }
            this.InvokeAsync("getTrackerItemsFullByQueryId", new object[] {
                        sessionHash,
                        tracker_query_id,
                        limit,
                        offset}, this.getTrackerItemsFullByQueryIdOperationCompleted, userState);
        }
        
        private void OngetTrackerItemsFullByQueryIdOperationCompleted(object arg) {
            if ((this.getTrackerItemsFullByQueryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerItemsFullByQueryIdCompleted(this, new getTrackerItemsFullByQueryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerQuery", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerQuery")]
        public int deleteTrackerQuery(string sessionHash, int tracker_query_id) {
            object[] results = this.Invoke("deleteTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerQuery(string sessionHash, int tracker_query_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerQueryAsync(string sessionHash, int tracker_query_id) {
            this.deleteTrackerQueryAsync(sessionHash, tracker_query_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerQueryAsync(string sessionHash, int tracker_query_id, object userState) {
            if ((this.deleteTrackerQueryOperationCompleted == null)) {
                this.deleteTrackerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerQueryOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id}, this.deleteTrackerQueryOperationCompleted, userState);
        }
        
        private void OndeleteTrackerQueryOperationCompleted(object arg) {
            if ((this.deleteTrackerQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerQueryCompleted(this, new deleteTrackerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerQuery", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerQuery")]
        public int updateTrackerQuery(string sessionHash, int tracker_query_id, string query_name, bool is_shared) {
            object[] results = this.Invoke("updateTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_name,
                        is_shared});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerQuery(string sessionHash, int tracker_query_id, string query_name, bool is_shared, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_name,
                        is_shared}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerQueryAsync(string sessionHash, int tracker_query_id, string query_name, bool is_shared) {
            this.updateTrackerQueryAsync(sessionHash, tracker_query_id, query_name, is_shared, null);
        }
        
        /// <remarks/>
        public void updateTrackerQueryAsync(string sessionHash, int tracker_query_id, string query_name, bool is_shared, object userState) {
            if ((this.updateTrackerQueryOperationCompleted == null)) {
                this.updateTrackerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerQueryOperationCompleted);
            }
            this.InvokeAsync("updateTrackerQuery", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_name,
                        is_shared}, this.updateTrackerQueryOperationCompleted, userState);
        }
        
        private void OnupdateTrackerQueryOperationCompleted(object arg) {
            if ((this.updateTrackerQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerQueryCompleted(this, new updateTrackerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerQuery", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerQuery")]
        public int addTrackerQuery(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared) {
            object[] results = this.Invoke("addTrackerQuery", new object[] {
                        sessionHash,
                        tracker_id,
                        user_id,
                        query_name,
                        is_shared});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerQuery(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerQuery", new object[] {
                        sessionHash,
                        tracker_id,
                        user_id,
                        query_name,
                        is_shared}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerQueryAsync(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared) {
            this.addTrackerQueryAsync(sessionHash, tracker_id, user_id, query_name, is_shared, null);
        }
        
        /// <remarks/>
        public void addTrackerQueryAsync(string sessionHash, int tracker_id, int user_id, string query_name, bool is_shared, object userState) {
            if ((this.addTrackerQueryOperationCompleted == null)) {
                this.addTrackerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerQueryOperationCompleted);
            }
            this.InvokeAsync("addTrackerQuery", new object[] {
                        sessionHash,
                        tracker_id,
                        user_id,
                        query_name,
                        is_shared}, this.addTrackerQueryOperationCompleted, userState);
        }
        
        private void OnaddTrackerQueryOperationCompleted(object arg) {
            if ((this.addTrackerQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerQueryCompleted(this, new addTrackerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerQueryFields", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerQueryFields")]
        public TrackerQueryField[] getTrackerQueryFields(string sessionHash, int tracker_query_id) {
            object[] results = this.Invoke("getTrackerQueryFields", new object[] {
                        sessionHash,
                        tracker_query_id});
            return ((TrackerQueryField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerQueryFields(string sessionHash, int tracker_query_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerQueryFields", new object[] {
                        sessionHash,
                        tracker_query_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerQueryField[] EndgetTrackerQueryFields(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerQueryField[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerQueryFieldsAsync(string sessionHash, int tracker_query_id) {
            this.getTrackerQueryFieldsAsync(sessionHash, tracker_query_id, null);
        }
        
        /// <remarks/>
        public void getTrackerQueryFieldsAsync(string sessionHash, int tracker_query_id, object userState) {
            if ((this.getTrackerQueryFieldsOperationCompleted == null)) {
                this.getTrackerQueryFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerQueryFieldsOperationCompleted);
            }
            this.InvokeAsync("getTrackerQueryFields", new object[] {
                        sessionHash,
                        tracker_query_id}, this.getTrackerQueryFieldsOperationCompleted, userState);
        }
        
        private void OngetTrackerQueryFieldsOperationCompleted(object arg) {
            if ((this.getTrackerQueryFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerQueryFieldsCompleted(this, new getTrackerQueryFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerQueryField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerQueryField")]
        public int deleteTrackerQueryField(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id) {
            object[] results = this.Invoke("deleteTrackerQueryField", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_field_type,
                        query_field_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerQueryField(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerQueryField", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_field_type,
                        query_field_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerQueryField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerQueryFieldAsync(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id) {
            this.deleteTrackerQueryFieldAsync(sessionHash, tracker_query_id, query_field_type, query_field_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerQueryFieldAsync(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id, object userState) {
            if ((this.deleteTrackerQueryFieldOperationCompleted == null)) {
                this.deleteTrackerQueryFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerQueryFieldOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerQueryField", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_field_type,
                        query_field_id}, this.deleteTrackerQueryFieldOperationCompleted, userState);
        }
        
        private void OndeleteTrackerQueryFieldOperationCompleted(object arg) {
            if ((this.deleteTrackerQueryFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerQueryFieldCompleted(this, new deleteTrackerQueryFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerQueryField", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerQueryField")]
        public int addTrackerQueryField(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id, string query_field_values) {
            object[] results = this.Invoke("addTrackerQueryField", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_field_type,
                        query_field_id,
                        query_field_values});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerQueryField(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id, string query_field_values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerQueryField", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_field_type,
                        query_field_id,
                        query_field_values}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerQueryField(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerQueryFieldAsync(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id, string query_field_values) {
            this.addTrackerQueryFieldAsync(sessionHash, tracker_query_id, query_field_type, query_field_id, query_field_values, null);
        }
        
        /// <remarks/>
        public void addTrackerQueryFieldAsync(string sessionHash, int tracker_query_id, string query_field_type, int query_field_id, string query_field_values, object userState) {
            if ((this.addTrackerQueryFieldOperationCompleted == null)) {
                this.addTrackerQueryFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerQueryFieldOperationCompleted);
            }
            this.InvokeAsync("addTrackerQueryField", new object[] {
                        sessionHash,
                        tracker_query_id,
                        query_field_type,
                        query_field_id,
                        query_field_values}, this.addTrackerQueryFieldOperationCompleted, userState);
        }
        
        private void OnaddTrackerQueryFieldOperationCompleted(object arg) {
            if ((this.addTrackerQueryFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerQueryFieldCompleted(this, new addTrackerQueryFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackers", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackers")]
        public Tracker[] getTrackers(string sessionHash, int project_id, bool is_public, int datatype) {
            object[] results = this.Invoke("getTrackers", new object[] {
                        sessionHash,
                        project_id,
                        is_public,
                        datatype});
            return ((Tracker[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackers(string sessionHash, int project_id, bool is_public, int datatype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackers", new object[] {
                        sessionHash,
                        project_id,
                        is_public,
                        datatype}, callback, asyncState);
        }
        
        /// <remarks/>
        public Tracker[] EndgetTrackers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Tracker[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackersAsync(string sessionHash, int project_id, bool is_public, int datatype) {
            this.getTrackersAsync(sessionHash, project_id, is_public, datatype, null);
        }
        
        /// <remarks/>
        public void getTrackersAsync(string sessionHash, int project_id, bool is_public, int datatype, object userState) {
            if ((this.getTrackersOperationCompleted == null)) {
                this.getTrackersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackersOperationCompleted);
            }
            this.InvokeAsync("getTrackers", new object[] {
                        sessionHash,
                        project_id,
                        is_public,
                        datatype}, this.getTrackersOperationCompleted, userState);
        }
        
        private void OngetTrackersOperationCompleted(object arg) {
            if ((this.getTrackersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackersCompleted(this, new getTrackersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTracker", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTracker")]
        public Tracker[] getTrackerArray(string sessionHash, int[] tracker_id) {
            object[] results = this.Invoke("getTrackerArray", new object[] {
                        sessionHash,
                        tracker_id});
            return ((Tracker[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerArray(string sessionHash, int[] tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerArray", new object[] {
                        sessionHash,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Tracker[] EndgetTrackerArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Tracker[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerArrayAsync(string sessionHash, int[] tracker_id) {
            this.getTrackerArrayAsync(sessionHash, tracker_id, null);
        }
        
        /// <remarks/>
        public void getTrackerArrayAsync(string sessionHash, int[] tracker_id, object userState) {
            if ((this.getTrackerArrayOperationCompleted == null)) {
                this.getTrackerArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerArray", new object[] {
                        sessionHash,
                        tracker_id}, this.getTrackerArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerArrayOperationCompleted(object arg) {
            if ((this.getTrackerArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerArrayCompleted(this, new getTrackerArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTracker", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTracker")]
        public Tracker getTracker(string sessionHash, int tracker_id) {
            object[] results = this.Invoke("getTracker", new object[] {
                        sessionHash,
                        tracker_id});
            return ((Tracker)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTracker(string sessionHash, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTracker", new object[] {
                        sessionHash,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Tracker EndgetTracker(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Tracker)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerAsync(string sessionHash, int tracker_id) {
            this.getTrackerAsync(sessionHash, tracker_id, null);
        }
        
        /// <remarks/>
        public void getTrackerAsync(string sessionHash, int tracker_id, object userState) {
            if ((this.getTrackerOperationCompleted == null)) {
                this.getTrackerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerOperationCompleted);
            }
            this.InvokeAsync("getTracker", new object[] {
                        sessionHash,
                        tracker_id}, this.getTrackerOperationCompleted, userState);
        }
        
        private void OngetTrackerOperationCompleted(object arg) {
            if ((this.getTrackerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerCompleted(this, new getTrackerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerFull", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerFull")]
        public TrackerFull getTrackerFull(string sessionHash, int tracker_id) {
            object[] results = this.Invoke("getTrackerFull", new object[] {
                        sessionHash,
                        tracker_id});
            return ((TrackerFull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerFull(string sessionHash, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerFull", new object[] {
                        sessionHash,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerFull EndgetTrackerFull(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerFull)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerFullAsync(string sessionHash, int tracker_id) {
            this.getTrackerFullAsync(sessionHash, tracker_id, null);
        }
        
        /// <remarks/>
        public void getTrackerFullAsync(string sessionHash, int tracker_id, object userState) {
            if ((this.getTrackerFullOperationCompleted == null)) {
                this.getTrackerFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerFullOperationCompleted);
            }
            this.InvokeAsync("getTrackerFull", new object[] {
                        sessionHash,
                        tracker_id}, this.getTrackerFullOperationCompleted, userState);
        }
        
        private void OngetTrackerFullOperationCompleted(object arg) {
            if ((this.getTrackerFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerFullCompleted(this, new getTrackerFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTracker", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTracker")]
        public int deleteTracker(string sessionHash, int tracker_id) {
            object[] results = this.Invoke("deleteTracker", new object[] {
                        sessionHash,
                        tracker_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTracker(string sessionHash, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTracker", new object[] {
                        sessionHash,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTracker(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerAsync(string sessionHash, int tracker_id) {
            this.deleteTrackerAsync(sessionHash, tracker_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerAsync(string sessionHash, int tracker_id, object userState) {
            if ((this.deleteTrackerOperationCompleted == null)) {
                this.deleteTrackerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerOperationCompleted);
            }
            this.InvokeAsync("deleteTracker", new object[] {
                        sessionHash,
                        tracker_id}, this.deleteTrackerOperationCompleted, userState);
        }
        
        private void OndeleteTrackerOperationCompleted(object arg) {
            if ((this.deleteTrackerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerCompleted(this, new deleteTrackerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTracker", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTracker")]
        public int updateTracker(
                    string sessionHash, 
                    int tracker_id, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab) {
            object[] results = this.Invoke("updateTracker", new object[] {
                        sessionHash,
                        tracker_id,
                        project_id,
                        tracker_name,
                        description,
                        is_public,
                        restrict_browse,
                        email_all_updates,
                        email_address,
                        due_period,
                        submit_instructions,
                        browse_instructions,
                        show_dependencies_tab,
                        show_duplicates_tab,
                        show_associations_tab,
                        show_time_tracking_tab,
                        show_tags_tab});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTracker(
                    string sessionHash, 
                    int tracker_id, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("updateTracker", new object[] {
                        sessionHash,
                        tracker_id,
                        project_id,
                        tracker_name,
                        description,
                        is_public,
                        restrict_browse,
                        email_all_updates,
                        email_address,
                        due_period,
                        submit_instructions,
                        browse_instructions,
                        show_dependencies_tab,
                        show_duplicates_tab,
                        show_associations_tab,
                        show_time_tracking_tab,
                        show_tags_tab}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTracker(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerAsync(
                    string sessionHash, 
                    int tracker_id, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab) {
            this.updateTrackerAsync(sessionHash, tracker_id, project_id, tracker_name, description, is_public, restrict_browse, email_all_updates, email_address, due_period, submit_instructions, browse_instructions, show_dependencies_tab, show_duplicates_tab, show_associations_tab, show_time_tracking_tab, show_tags_tab, null);
        }
        
        /// <remarks/>
        public void updateTrackerAsync(
                    string sessionHash, 
                    int tracker_id, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab, 
                    object userState) {
            if ((this.updateTrackerOperationCompleted == null)) {
                this.updateTrackerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerOperationCompleted);
            }
            this.InvokeAsync("updateTracker", new object[] {
                        sessionHash,
                        tracker_id,
                        project_id,
                        tracker_name,
                        description,
                        is_public,
                        restrict_browse,
                        email_all_updates,
                        email_address,
                        due_period,
                        submit_instructions,
                        browse_instructions,
                        show_dependencies_tab,
                        show_duplicates_tab,
                        show_associations_tab,
                        show_time_tracking_tab,
                        show_tags_tab}, this.updateTrackerOperationCompleted, userState);
        }
        
        private void OnupdateTrackerOperationCompleted(object arg) {
            if ((this.updateTrackerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerCompleted(this, new updateTrackerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTracker", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTracker")]
        public int addTracker(
                    string sessionHash, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    int datatype, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab) {
            object[] results = this.Invoke("addTracker", new object[] {
                        sessionHash,
                        project_id,
                        tracker_name,
                        description,
                        is_public,
                        restrict_browse,
                        email_all_updates,
                        email_address,
                        due_period,
                        submit_instructions,
                        browse_instructions,
                        datatype,
                        show_dependencies_tab,
                        show_duplicates_tab,
                        show_associations_tab,
                        show_time_tracking_tab,
                        show_tags_tab});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTracker(
                    string sessionHash, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    int datatype, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("addTracker", new object[] {
                        sessionHash,
                        project_id,
                        tracker_name,
                        description,
                        is_public,
                        restrict_browse,
                        email_all_updates,
                        email_address,
                        due_period,
                        submit_instructions,
                        browse_instructions,
                        datatype,
                        show_dependencies_tab,
                        show_duplicates_tab,
                        show_associations_tab,
                        show_time_tracking_tab,
                        show_tags_tab}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTracker(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerAsync(
                    string sessionHash, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    int datatype, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab) {
            this.addTrackerAsync(sessionHash, project_id, tracker_name, description, is_public, restrict_browse, email_all_updates, email_address, due_period, submit_instructions, browse_instructions, datatype, show_dependencies_tab, show_duplicates_tab, show_associations_tab, show_time_tracking_tab, show_tags_tab, null);
        }
        
        /// <remarks/>
        public void addTrackerAsync(
                    string sessionHash, 
                    int project_id, 
                    string tracker_name, 
                    string description, 
                    bool is_public, 
                    bool restrict_browse, 
                    bool email_all_updates, 
                    string email_address, 
                    int due_period, 
                    string submit_instructions, 
                    string browse_instructions, 
                    int datatype, 
                    bool show_dependencies_tab, 
                    bool show_duplicates_tab, 
                    bool show_associations_tab, 
                    bool show_time_tracking_tab, 
                    bool show_tags_tab, 
                    object userState) {
            if ((this.addTrackerOperationCompleted == null)) {
                this.addTrackerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerOperationCompleted);
            }
            this.InvokeAsync("addTracker", new object[] {
                        sessionHash,
                        project_id,
                        tracker_name,
                        description,
                        is_public,
                        restrict_browse,
                        email_all_updates,
                        email_address,
                        due_period,
                        submit_instructions,
                        browse_instructions,
                        datatype,
                        show_dependencies_tab,
                        show_duplicates_tab,
                        show_associations_tab,
                        show_time_tracking_tab,
                        show_tags_tab}, this.addTrackerOperationCompleted, userState);
        }
        
        private void OnaddTrackerOperationCompleted(object arg) {
            if ((this.addTrackerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerCompleted(this, new addTrackerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerTechnicians", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerTechnicians")]
        public User[] getTrackerTechnicians(string sessionHash, int tracker_id) {
            object[] results = this.Invoke("getTrackerTechnicians", new object[] {
                        sessionHash,
                        tracker_id});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerTechnicians(string sessionHash, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerTechnicians", new object[] {
                        sessionHash,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public User[] EndgetTrackerTechnicians(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerTechniciansAsync(string sessionHash, int tracker_id) {
            this.getTrackerTechniciansAsync(sessionHash, tracker_id, null);
        }
        
        /// <remarks/>
        public void getTrackerTechniciansAsync(string sessionHash, int tracker_id, object userState) {
            if ((this.getTrackerTechniciansOperationCompleted == null)) {
                this.getTrackerTechniciansOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerTechniciansOperationCompleted);
            }
            this.InvokeAsync("getTrackerTechnicians", new object[] {
                        sessionHash,
                        tracker_id}, this.getTrackerTechniciansOperationCompleted, userState);
        }
        
        private void OngetTrackerTechniciansOperationCompleted(object arg) {
            if ((this.getTrackerTechniciansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerTechniciansCompleted(this, new getTrackerTechniciansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerTimeCodes", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerTimeCodes")]
        public TrackerTimeCode[] getTrackerTimeCodes(string sessionHash) {
            object[] results = this.Invoke("getTrackerTimeCodes", new object[] {
                        sessionHash});
            return ((TrackerTimeCode[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerTimeCodes(string sessionHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerTimeCodes", new object[] {
                        sessionHash}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerTimeCode[] EndgetTrackerTimeCodes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerTimeCode[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerTimeCodesAsync(string sessionHash) {
            this.getTrackerTimeCodesAsync(sessionHash, null);
        }
        
        /// <remarks/>
        public void getTrackerTimeCodesAsync(string sessionHash, object userState) {
            if ((this.getTrackerTimeCodesOperationCompleted == null)) {
                this.getTrackerTimeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerTimeCodesOperationCompleted);
            }
            this.InvokeAsync("getTrackerTimeCodes", new object[] {
                        sessionHash}, this.getTrackerTimeCodesOperationCompleted, userState);
        }
        
        private void OngetTrackerTimeCodesOperationCompleted(object arg) {
            if ((this.getTrackerTimeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerTimeCodesCompleted(this, new getTrackerTimeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerTimeCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerTimeCode")]
        public TrackerTimeCode[] getTrackerTimeCodeArray(string sessionHash, int[] tracker_time_code_id) {
            object[] results = this.Invoke("getTrackerTimeCodeArray", new object[] {
                        sessionHash,
                        tracker_time_code_id});
            return ((TrackerTimeCode[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerTimeCodeArray(string sessionHash, int[] tracker_time_code_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerTimeCodeArray", new object[] {
                        sessionHash,
                        tracker_time_code_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerTimeCode[] EndgetTrackerTimeCodeArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerTimeCode[])(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerTimeCodeArrayAsync(string sessionHash, int[] tracker_time_code_id) {
            this.getTrackerTimeCodeArrayAsync(sessionHash, tracker_time_code_id, null);
        }
        
        /// <remarks/>
        public void getTrackerTimeCodeArrayAsync(string sessionHash, int[] tracker_time_code_id, object userState) {
            if ((this.getTrackerTimeCodeArrayOperationCompleted == null)) {
                this.getTrackerTimeCodeArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerTimeCodeArrayOperationCompleted);
            }
            this.InvokeAsync("getTrackerTimeCodeArray", new object[] {
                        sessionHash,
                        tracker_time_code_id}, this.getTrackerTimeCodeArrayOperationCompleted, userState);
        }
        
        private void OngetTrackerTimeCodeArrayOperationCompleted(object arg) {
            if ((this.getTrackerTimeCodeArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerTimeCodeArrayCompleted(this, new getTrackerTimeCodeArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getTrackerTimeCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerTimeCode")]
        public TrackerTimeCode getTrackerTimeCode(string sessionHash, int tracker_time_code_id) {
            object[] results = this.Invoke("getTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id});
            return ((TrackerTimeCode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTrackerTimeCode(string sessionHash, int tracker_time_code_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public TrackerTimeCode EndgetTrackerTimeCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TrackerTimeCode)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerTimeCodeAsync(string sessionHash, int tracker_time_code_id) {
            this.getTrackerTimeCodeAsync(sessionHash, tracker_time_code_id, null);
        }
        
        /// <remarks/>
        public void getTrackerTimeCodeAsync(string sessionHash, int tracker_time_code_id, object userState) {
            if ((this.getTrackerTimeCodeOperationCompleted == null)) {
                this.getTrackerTimeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerTimeCodeOperationCompleted);
            }
            this.InvokeAsync("getTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id}, this.getTrackerTimeCodeOperationCompleted, userState);
        }
        
        private void OngetTrackerTimeCodeOperationCompleted(object arg) {
            if ((this.getTrackerTimeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerTimeCodeCompleted(this, new getTrackerTimeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteTrackerTimeCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteTrackerTimeCode")]
        public int deleteTrackerTimeCode(string sessionHash, int tracker_time_code_id) {
            object[] results = this.Invoke("deleteTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTrackerTimeCode(string sessionHash, int tracker_time_code_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteTrackerTimeCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrackerTimeCodeAsync(string sessionHash, int tracker_time_code_id) {
            this.deleteTrackerTimeCodeAsync(sessionHash, tracker_time_code_id, null);
        }
        
        /// <remarks/>
        public void deleteTrackerTimeCodeAsync(string sessionHash, int tracker_time_code_id, object userState) {
            if ((this.deleteTrackerTimeCodeOperationCompleted == null)) {
                this.deleteTrackerTimeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrackerTimeCodeOperationCompleted);
            }
            this.InvokeAsync("deleteTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id}, this.deleteTrackerTimeCodeOperationCompleted, userState);
        }
        
        private void OndeleteTrackerTimeCodeOperationCompleted(object arg) {
            if ((this.deleteTrackerTimeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrackerTimeCodeCompleted(this, new deleteTrackerTimeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateTrackerTimeCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateTrackerTimeCode")]
        public int updateTrackerTimeCode(string sessionHash, int tracker_time_code_id, string time_name) {
            object[] results = this.Invoke("updateTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id,
                        time_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateTrackerTimeCode(string sessionHash, int tracker_time_code_id, string time_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id,
                        time_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateTrackerTimeCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateTrackerTimeCodeAsync(string sessionHash, int tracker_time_code_id, string time_name) {
            this.updateTrackerTimeCodeAsync(sessionHash, tracker_time_code_id, time_name, null);
        }
        
        /// <remarks/>
        public void updateTrackerTimeCodeAsync(string sessionHash, int tracker_time_code_id, string time_name, object userState) {
            if ((this.updateTrackerTimeCodeOperationCompleted == null)) {
                this.updateTrackerTimeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTrackerTimeCodeOperationCompleted);
            }
            this.InvokeAsync("updateTrackerTimeCode", new object[] {
                        sessionHash,
                        tracker_time_code_id,
                        time_name}, this.updateTrackerTimeCodeOperationCompleted, userState);
        }
        
        private void OnupdateTrackerTimeCodeOperationCompleted(object arg) {
            if ((this.updateTrackerTimeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTrackerTimeCodeCompleted(this, new updateTrackerTimeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addTrackerTimeCode", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addTrackerTimeCode")]
        public int addTrackerTimeCode(string sessionHash, string time_name) {
            object[] results = this.Invoke("addTrackerTimeCode", new object[] {
                        sessionHash,
                        time_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTrackerTimeCode(string sessionHash, string time_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTrackerTimeCode", new object[] {
                        sessionHash,
                        time_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddTrackerTimeCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addTrackerTimeCodeAsync(string sessionHash, string time_name) {
            this.addTrackerTimeCodeAsync(sessionHash, time_name, null);
        }
        
        /// <remarks/>
        public void addTrackerTimeCodeAsync(string sessionHash, string time_name, object userState) {
            if ((this.addTrackerTimeCodeOperationCompleted == null)) {
                this.addTrackerTimeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrackerTimeCodeOperationCompleted);
            }
            this.InvokeAsync("addTrackerTimeCode", new object[] {
                        sessionHash,
                        time_name}, this.addTrackerTimeCodeOperationCompleted, userState);
        }
        
        private void OnaddTrackerTimeCodeOperationCompleted(object arg) {
            if ((this.addTrackerTimeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrackerTimeCodeCompleted(this, new addTrackerTimeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolAssignees", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolAssignees")]
        public CruisecontrolAssignee[] getCruisecontrolAssignees(string sessionHash, int cruisecontrol_id, int assignee) {
            object[] results = this.Invoke("getCruisecontrolAssignees", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee});
            return ((CruisecontrolAssignee[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolAssignees(string sessionHash, int cruisecontrol_id, int assignee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolAssignees", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolAssignee[] EndgetCruisecontrolAssignees(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolAssignee[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolAssigneesAsync(string sessionHash, int cruisecontrol_id, int assignee) {
            this.getCruisecontrolAssigneesAsync(sessionHash, cruisecontrol_id, assignee, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolAssigneesAsync(string sessionHash, int cruisecontrol_id, int assignee, object userState) {
            if ((this.getCruisecontrolAssigneesOperationCompleted == null)) {
                this.getCruisecontrolAssigneesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolAssigneesOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolAssignees", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee}, this.getCruisecontrolAssigneesOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolAssigneesOperationCompleted(object arg) {
            if ((this.getCruisecontrolAssigneesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolAssigneesCompleted(this, new getCruisecontrolAssigneesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addCruisecontrolAssignee", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCruisecontrolAssignee")]
        public int addCruisecontrolAssignee(string sessionHash, int cruisecontrol_id, int assignee) {
            object[] results = this.Invoke("addCruisecontrolAssignee", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCruisecontrolAssignee(string sessionHash, int cruisecontrol_id, int assignee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCruisecontrolAssignee", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddCruisecontrolAssignee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCruisecontrolAssigneeAsync(string sessionHash, int cruisecontrol_id, int assignee) {
            this.addCruisecontrolAssigneeAsync(sessionHash, cruisecontrol_id, assignee, null);
        }
        
        /// <remarks/>
        public void addCruisecontrolAssigneeAsync(string sessionHash, int cruisecontrol_id, int assignee, object userState) {
            if ((this.addCruisecontrolAssigneeOperationCompleted == null)) {
                this.addCruisecontrolAssigneeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCruisecontrolAssigneeOperationCompleted);
            }
            this.InvokeAsync("addCruisecontrolAssignee", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee}, this.addCruisecontrolAssigneeOperationCompleted, userState);
        }
        
        private void OnaddCruisecontrolAssigneeOperationCompleted(object arg) {
            if ((this.addCruisecontrolAssigneeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCruisecontrolAssigneeCompleted(this, new addCruisecontrolAssigneeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteCruisecontrolAssignee", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCruisecontrolAssignee")]
        public int deleteCruisecontrolAssignee(string sessionHash, int cruisecontrol_id, int assignee) {
            object[] results = this.Invoke("deleteCruisecontrolAssignee", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteCruisecontrolAssignee(string sessionHash, int cruisecontrol_id, int assignee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteCruisecontrolAssignee", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteCruisecontrolAssignee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCruisecontrolAssigneeAsync(string sessionHash, int cruisecontrol_id, int assignee) {
            this.deleteCruisecontrolAssigneeAsync(sessionHash, cruisecontrol_id, assignee, null);
        }
        
        /// <remarks/>
        public void deleteCruisecontrolAssigneeAsync(string sessionHash, int cruisecontrol_id, int assignee, object userState) {
            if ((this.deleteCruisecontrolAssigneeOperationCompleted == null)) {
                this.deleteCruisecontrolAssigneeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCruisecontrolAssigneeOperationCompleted);
            }
            this.InvokeAsync("deleteCruisecontrolAssignee", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        assignee}, this.deleteCruisecontrolAssigneeOperationCompleted, userState);
        }
        
        private void OndeleteCruisecontrolAssigneeOperationCompleted(object arg) {
            if ((this.deleteCruisecontrolAssigneeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCruisecontrolAssigneeCompleted(this, new deleteCruisecontrolAssigneeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolBuildChangeUsers", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolBuildChangeUsers")]
        public CruisecontrolBuildChangeUser[] getCruisecontrolBuildChangeUsers(string sessionHash, int cruisecontrol_build_id, int user_id) {
            object[] results = this.Invoke("getCruisecontrolBuildChangeUsers", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id});
            return ((CruisecontrolBuildChangeUser[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolBuildChangeUsers(string sessionHash, int cruisecontrol_build_id, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolBuildChangeUsers", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolBuildChangeUser[] EndgetCruisecontrolBuildChangeUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolBuildChangeUser[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildChangeUsersAsync(string sessionHash, int cruisecontrol_build_id, int user_id) {
            this.getCruisecontrolBuildChangeUsersAsync(sessionHash, cruisecontrol_build_id, user_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildChangeUsersAsync(string sessionHash, int cruisecontrol_build_id, int user_id, object userState) {
            if ((this.getCruisecontrolBuildChangeUsersOperationCompleted == null)) {
                this.getCruisecontrolBuildChangeUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolBuildChangeUsersOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolBuildChangeUsers", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id}, this.getCruisecontrolBuildChangeUsersOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolBuildChangeUsersOperationCompleted(object arg) {
            if ((this.getCruisecontrolBuildChangeUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolBuildChangeUsersCompleted(this, new getCruisecontrolBuildChangeUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addCruisecontrolBuildChangeUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCruisecontrolBuildChangeUser")]
        public int addCruisecontrolBuildChangeUser(string sessionHash, int cruisecontrol_build_id, int user_id) {
            object[] results = this.Invoke("addCruisecontrolBuildChangeUser", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCruisecontrolBuildChangeUser(string sessionHash, int cruisecontrol_build_id, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCruisecontrolBuildChangeUser", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddCruisecontrolBuildChangeUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCruisecontrolBuildChangeUserAsync(string sessionHash, int cruisecontrol_build_id, int user_id) {
            this.addCruisecontrolBuildChangeUserAsync(sessionHash, cruisecontrol_build_id, user_id, null);
        }
        
        /// <remarks/>
        public void addCruisecontrolBuildChangeUserAsync(string sessionHash, int cruisecontrol_build_id, int user_id, object userState) {
            if ((this.addCruisecontrolBuildChangeUserOperationCompleted == null)) {
                this.addCruisecontrolBuildChangeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCruisecontrolBuildChangeUserOperationCompleted);
            }
            this.InvokeAsync("addCruisecontrolBuildChangeUser", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id}, this.addCruisecontrolBuildChangeUserOperationCompleted, userState);
        }
        
        private void OnaddCruisecontrolBuildChangeUserOperationCompleted(object arg) {
            if ((this.addCruisecontrolBuildChangeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCruisecontrolBuildChangeUserCompleted(this, new addCruisecontrolBuildChangeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteCruisecontrolBuildChangeUser", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCruisecontrolBuildChangeUser")]
        public int deleteCruisecontrolBuildChangeUser(string sessionHash, int cruisecontrol_build_id, int user_id) {
            object[] results = this.Invoke("deleteCruisecontrolBuildChangeUser", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteCruisecontrolBuildChangeUser(string sessionHash, int cruisecontrol_build_id, int user_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteCruisecontrolBuildChangeUser", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteCruisecontrolBuildChangeUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCruisecontrolBuildChangeUserAsync(string sessionHash, int cruisecontrol_build_id, int user_id) {
            this.deleteCruisecontrolBuildChangeUserAsync(sessionHash, cruisecontrol_build_id, user_id, null);
        }
        
        /// <remarks/>
        public void deleteCruisecontrolBuildChangeUserAsync(string sessionHash, int cruisecontrol_build_id, int user_id, object userState) {
            if ((this.deleteCruisecontrolBuildChangeUserOperationCompleted == null)) {
                this.deleteCruisecontrolBuildChangeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCruisecontrolBuildChangeUserOperationCompleted);
            }
            this.InvokeAsync("deleteCruisecontrolBuildChangeUser", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        user_id}, this.deleteCruisecontrolBuildChangeUserOperationCompleted, userState);
        }
        
        private void OndeleteCruisecontrolBuildChangeUserOperationCompleted(object arg) {
            if ((this.deleteCruisecontrolBuildChangeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCruisecontrolBuildChangeUserCompleted(this, new deleteCruisecontrolBuildChangeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolBuilds", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolBuilds")]
        public CruisecontrolBuild[] getCruisecontrolBuilds(string sessionHash, int cruisecontrol_id) {
            object[] results = this.Invoke("getCruisecontrolBuilds", new object[] {
                        sessionHash,
                        cruisecontrol_id});
            return ((CruisecontrolBuild[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolBuilds(string sessionHash, int cruisecontrol_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolBuilds", new object[] {
                        sessionHash,
                        cruisecontrol_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolBuild[] EndgetCruisecontrolBuilds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolBuild[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildsAsync(string sessionHash, int cruisecontrol_id) {
            this.getCruisecontrolBuildsAsync(sessionHash, cruisecontrol_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildsAsync(string sessionHash, int cruisecontrol_id, object userState) {
            if ((this.getCruisecontrolBuildsOperationCompleted == null)) {
                this.getCruisecontrolBuildsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolBuildsOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolBuilds", new object[] {
                        sessionHash,
                        cruisecontrol_id}, this.getCruisecontrolBuildsOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolBuildsOperationCompleted(object arg) {
            if ((this.getCruisecontrolBuildsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolBuildsCompleted(this, new getCruisecontrolBuildsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolBuild", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolBuild")]
        public CruisecontrolBuild[] getCruisecontrolBuildArray(string sessionHash, int cruisecontrol_build_id) {
            object[] results = this.Invoke("getCruisecontrolBuildArray", new object[] {
                        sessionHash,
                        cruisecontrol_build_id});
            return ((CruisecontrolBuild[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolBuildArray(string sessionHash, int cruisecontrol_build_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolBuildArray", new object[] {
                        sessionHash,
                        cruisecontrol_build_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolBuild[] EndgetCruisecontrolBuildArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolBuild[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildArrayAsync(string sessionHash, int cruisecontrol_build_id) {
            this.getCruisecontrolBuildArrayAsync(sessionHash, cruisecontrol_build_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildArrayAsync(string sessionHash, int cruisecontrol_build_id, object userState) {
            if ((this.getCruisecontrolBuildArrayOperationCompleted == null)) {
                this.getCruisecontrolBuildArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolBuildArrayOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolBuildArray", new object[] {
                        sessionHash,
                        cruisecontrol_build_id}, this.getCruisecontrolBuildArrayOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolBuildArrayOperationCompleted(object arg) {
            if ((this.getCruisecontrolBuildArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolBuildArrayCompleted(this, new getCruisecontrolBuildArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolBuild", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolBuild")]
        public CruisecontrolBuild getCruisecontrolBuild(string sessionHash, int cruisecontrol_build_id) {
            object[] results = this.Invoke("getCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id});
            return ((CruisecontrolBuild)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolBuild(string sessionHash, int cruisecontrol_build_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolBuild EndgetCruisecontrolBuild(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolBuild)(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_build_id) {
            this.getCruisecontrolBuildAsync(sessionHash, cruisecontrol_build_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_build_id, object userState) {
            if ((this.getCruisecontrolBuildOperationCompleted == null)) {
                this.getCruisecontrolBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolBuildOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id}, this.getCruisecontrolBuildOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolBuildOperationCompleted(object arg) {
            if ((this.getCruisecontrolBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolBuildCompleted(this, new getCruisecontrolBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteCruisecontrolBuild", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCruisecontrolBuild")]
        public int deleteCruisecontrolBuild(string sessionHash, int cruisecontrol_build_id) {
            object[] results = this.Invoke("deleteCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteCruisecontrolBuild(string sessionHash, int cruisecontrol_build_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteCruisecontrolBuild(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_build_id) {
            this.deleteCruisecontrolBuildAsync(sessionHash, cruisecontrol_build_id, null);
        }
        
        /// <remarks/>
        public void deleteCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_build_id, object userState) {
            if ((this.deleteCruisecontrolBuildOperationCompleted == null)) {
                this.deleteCruisecontrolBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCruisecontrolBuildOperationCompleted);
            }
            this.InvokeAsync("deleteCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id}, this.deleteCruisecontrolBuildOperationCompleted, userState);
        }
        
        private void OndeleteCruisecontrolBuildOperationCompleted(object arg) {
            if ((this.deleteCruisecontrolBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCruisecontrolBuildCompleted(this, new deleteCruisecontrolBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateCruisecontrolBuild", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCruisecontrolBuild")]
        public int updateCruisecontrolBuild(string sessionHash, int cruisecontrol_build_id, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description) {
            object[] results = this.Invoke("updateCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        cruisecontrol_id,
                        cruisecontrol_defect_id,
                        build_date,
                        was_successful,
                        was_fix,
                        was_necessary,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateCruisecontrolBuild(string sessionHash, int cruisecontrol_build_id, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        cruisecontrol_id,
                        cruisecontrol_defect_id,
                        build_date,
                        was_successful,
                        was_fix,
                        was_necessary,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateCruisecontrolBuild(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_build_id, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description) {
            this.updateCruisecontrolBuildAsync(sessionHash, cruisecontrol_build_id, cruisecontrol_id, cruisecontrol_defect_id, build_date, was_successful, was_fix, was_necessary, description, null);
        }
        
        /// <remarks/>
        public void updateCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_build_id, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description, object userState) {
            if ((this.updateCruisecontrolBuildOperationCompleted == null)) {
                this.updateCruisecontrolBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCruisecontrolBuildOperationCompleted);
            }
            this.InvokeAsync("updateCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_build_id,
                        cruisecontrol_id,
                        cruisecontrol_defect_id,
                        build_date,
                        was_successful,
                        was_fix,
                        was_necessary,
                        description}, this.updateCruisecontrolBuildOperationCompleted, userState);
        }
        
        private void OnupdateCruisecontrolBuildOperationCompleted(object arg) {
            if ((this.updateCruisecontrolBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCruisecontrolBuildCompleted(this, new updateCruisecontrolBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addCruisecontrolBuild", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCruisecontrolBuild")]
        public int addCruisecontrolBuild(string sessionHash, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description) {
            object[] results = this.Invoke("addCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        cruisecontrol_defect_id,
                        build_date,
                        was_successful,
                        was_fix,
                        was_necessary,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCruisecontrolBuild(string sessionHash, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        cruisecontrol_defect_id,
                        build_date,
                        was_successful,
                        was_fix,
                        was_necessary,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddCruisecontrolBuild(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description) {
            this.addCruisecontrolBuildAsync(sessionHash, cruisecontrol_id, cruisecontrol_defect_id, build_date, was_successful, was_fix, was_necessary, description, null);
        }
        
        /// <remarks/>
        public void addCruisecontrolBuildAsync(string sessionHash, int cruisecontrol_id, int cruisecontrol_defect_id, string build_date, bool was_successful, bool was_fix, bool was_necessary, string description, object userState) {
            if ((this.addCruisecontrolBuildOperationCompleted == null)) {
                this.addCruisecontrolBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCruisecontrolBuildOperationCompleted);
            }
            this.InvokeAsync("addCruisecontrolBuild", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        cruisecontrol_defect_id,
                        build_date,
                        was_successful,
                        was_fix,
                        was_necessary,
                        description}, this.addCruisecontrolBuildOperationCompleted, userState);
        }
        
        private void OnaddCruisecontrolBuildOperationCompleted(object arg) {
            if ((this.addCruisecontrolBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCruisecontrolBuildCompleted(this, new addCruisecontrolBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolDefects", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolDefects")]
        public CruisecontrolDefect[] getCruisecontrolDefects(string sessionHash, int cruisecontrol_id, int tracker_item_id) {
            object[] results = this.Invoke("getCruisecontrolDefects", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_item_id});
            return ((CruisecontrolDefect[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolDefects(string sessionHash, int cruisecontrol_id, int tracker_item_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolDefects", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_item_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolDefect[] EndgetCruisecontrolDefects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolDefect[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolDefectsAsync(string sessionHash, int cruisecontrol_id, int tracker_item_id) {
            this.getCruisecontrolDefectsAsync(sessionHash, cruisecontrol_id, tracker_item_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolDefectsAsync(string sessionHash, int cruisecontrol_id, int tracker_item_id, object userState) {
            if ((this.getCruisecontrolDefectsOperationCompleted == null)) {
                this.getCruisecontrolDefectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolDefectsOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolDefects", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_item_id}, this.getCruisecontrolDefectsOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolDefectsOperationCompleted(object arg) {
            if ((this.getCruisecontrolDefectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolDefectsCompleted(this, new getCruisecontrolDefectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolDefect", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolDefect")]
        public CruisecontrolDefect[] getCruisecontrolDefectArray(string sessionHash, int cruisecontrol_defect_id) {
            object[] results = this.Invoke("getCruisecontrolDefectArray", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id});
            return ((CruisecontrolDefect[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolDefectArray(string sessionHash, int cruisecontrol_defect_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolDefectArray", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolDefect[] EndgetCruisecontrolDefectArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolDefect[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolDefectArrayAsync(string sessionHash, int cruisecontrol_defect_id) {
            this.getCruisecontrolDefectArrayAsync(sessionHash, cruisecontrol_defect_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolDefectArrayAsync(string sessionHash, int cruisecontrol_defect_id, object userState) {
            if ((this.getCruisecontrolDefectArrayOperationCompleted == null)) {
                this.getCruisecontrolDefectArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolDefectArrayOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolDefectArray", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id}, this.getCruisecontrolDefectArrayOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolDefectArrayOperationCompleted(object arg) {
            if ((this.getCruisecontrolDefectArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolDefectArrayCompleted(this, new getCruisecontrolDefectArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolDefect", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolDefect")]
        public CruisecontrolDefect getCruisecontrolDefect(string sessionHash, int cruisecontrol_defect_id) {
            object[] results = this.Invoke("getCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id});
            return ((CruisecontrolDefect)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolDefect(string sessionHash, int cruisecontrol_defect_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolDefect EndgetCruisecontrolDefect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolDefect)(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_defect_id) {
            this.getCruisecontrolDefectAsync(sessionHash, cruisecontrol_defect_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_defect_id, object userState) {
            if ((this.getCruisecontrolDefectOperationCompleted == null)) {
                this.getCruisecontrolDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolDefectOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id}, this.getCruisecontrolDefectOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolDefectOperationCompleted(object arg) {
            if ((this.getCruisecontrolDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolDefectCompleted(this, new getCruisecontrolDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteCruisecontrolDefect", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCruisecontrolDefect")]
        public int deleteCruisecontrolDefect(string sessionHash, int cruisecontrol_defect_id) {
            object[] results = this.Invoke("deleteCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteCruisecontrolDefect(string sessionHash, int cruisecontrol_defect_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteCruisecontrolDefect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_defect_id) {
            this.deleteCruisecontrolDefectAsync(sessionHash, cruisecontrol_defect_id, null);
        }
        
        /// <remarks/>
        public void deleteCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_defect_id, object userState) {
            if ((this.deleteCruisecontrolDefectOperationCompleted == null)) {
                this.deleteCruisecontrolDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCruisecontrolDefectOperationCompleted);
            }
            this.InvokeAsync("deleteCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id}, this.deleteCruisecontrolDefectOperationCompleted, userState);
        }
        
        private void OndeleteCruisecontrolDefectOperationCompleted(object arg) {
            if ((this.deleteCruisecontrolDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCruisecontrolDefectCompleted(this, new deleteCruisecontrolDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateCruisecontrolDefect", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCruisecontrolDefect")]
        public int updateCruisecontrolDefect(string sessionHash, int cruisecontrol_defect_id, int cruisecontrol_id, int tracker_item_id, bool open) {
            object[] results = this.Invoke("updateCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id,
                        cruisecontrol_id,
                        tracker_item_id,
                        open});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateCruisecontrolDefect(string sessionHash, int cruisecontrol_defect_id, int cruisecontrol_id, int tracker_item_id, bool open, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id,
                        cruisecontrol_id,
                        tracker_item_id,
                        open}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateCruisecontrolDefect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_defect_id, int cruisecontrol_id, int tracker_item_id, bool open) {
            this.updateCruisecontrolDefectAsync(sessionHash, cruisecontrol_defect_id, cruisecontrol_id, tracker_item_id, open, null);
        }
        
        /// <remarks/>
        public void updateCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_defect_id, int cruisecontrol_id, int tracker_item_id, bool open, object userState) {
            if ((this.updateCruisecontrolDefectOperationCompleted == null)) {
                this.updateCruisecontrolDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCruisecontrolDefectOperationCompleted);
            }
            this.InvokeAsync("updateCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_defect_id,
                        cruisecontrol_id,
                        tracker_item_id,
                        open}, this.updateCruisecontrolDefectOperationCompleted, userState);
        }
        
        private void OnupdateCruisecontrolDefectOperationCompleted(object arg) {
            if ((this.updateCruisecontrolDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCruisecontrolDefectCompleted(this, new updateCruisecontrolDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addCruisecontrolDefect", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCruisecontrolDefect")]
        public int addCruisecontrolDefect(string sessionHash, int cruisecontrol_id, int tracker_item_id, bool open) {
            object[] results = this.Invoke("addCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_item_id,
                        open});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCruisecontrolDefect(string sessionHash, int cruisecontrol_id, int tracker_item_id, bool open, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_item_id,
                        open}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddCruisecontrolDefect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_id, int tracker_item_id, bool open) {
            this.addCruisecontrolDefectAsync(sessionHash, cruisecontrol_id, tracker_item_id, open, null);
        }
        
        /// <remarks/>
        public void addCruisecontrolDefectAsync(string sessionHash, int cruisecontrol_id, int tracker_item_id, bool open, object userState) {
            if ((this.addCruisecontrolDefectOperationCompleted == null)) {
                this.addCruisecontrolDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCruisecontrolDefectOperationCompleted);
            }
            this.InvokeAsync("addCruisecontrolDefect", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_item_id,
                        open}, this.addCruisecontrolDefectOperationCompleted, userState);
        }
        
        private void OnaddCruisecontrolDefectOperationCompleted(object arg) {
            if ((this.addCruisecontrolDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCruisecontrolDefectCompleted(this, new addCruisecontrolDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrolPublishers", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrolPublishers")]
        public CruisecontrolPublisher[] getCruisecontrolPublishers(string sessionHash, int cruisecontrol_id, int tracker_id) {
            object[] results = this.Invoke("getCruisecontrolPublishers", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id});
            return ((CruisecontrolPublisher[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolPublishers(string sessionHash, int cruisecontrol_id, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolPublishers", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public CruisecontrolPublisher[] EndgetCruisecontrolPublishers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CruisecontrolPublisher[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolPublishersAsync(string sessionHash, int cruisecontrol_id, int tracker_id) {
            this.getCruisecontrolPublishersAsync(sessionHash, cruisecontrol_id, tracker_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolPublishersAsync(string sessionHash, int cruisecontrol_id, int tracker_id, object userState) {
            if ((this.getCruisecontrolPublishersOperationCompleted == null)) {
                this.getCruisecontrolPublishersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolPublishersOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolPublishers", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id}, this.getCruisecontrolPublishersOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolPublishersOperationCompleted(object arg) {
            if ((this.getCruisecontrolPublishersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolPublishersCompleted(this, new getCruisecontrolPublishersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addCruisecontrolPublisher", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCruisecontrolPublisher")]
        public int addCruisecontrolPublisher(string sessionHash, int cruisecontrol_id, int tracker_id) {
            object[] results = this.Invoke("addCruisecontrolPublisher", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCruisecontrolPublisher(string sessionHash, int cruisecontrol_id, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCruisecontrolPublisher", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddCruisecontrolPublisher(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCruisecontrolPublisherAsync(string sessionHash, int cruisecontrol_id, int tracker_id) {
            this.addCruisecontrolPublisherAsync(sessionHash, cruisecontrol_id, tracker_id, null);
        }
        
        /// <remarks/>
        public void addCruisecontrolPublisherAsync(string sessionHash, int cruisecontrol_id, int tracker_id, object userState) {
            if ((this.addCruisecontrolPublisherOperationCompleted == null)) {
                this.addCruisecontrolPublisherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCruisecontrolPublisherOperationCompleted);
            }
            this.InvokeAsync("addCruisecontrolPublisher", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id}, this.addCruisecontrolPublisherOperationCompleted, userState);
        }
        
        private void OnaddCruisecontrolPublisherOperationCompleted(object arg) {
            if ((this.addCruisecontrolPublisherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCruisecontrolPublisherCompleted(this, new addCruisecontrolPublisherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteCruisecontrolPublisher", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCruisecontrolPublisher")]
        public int deleteCruisecontrolPublisher(string sessionHash, int cruisecontrol_id, int tracker_id) {
            object[] results = this.Invoke("deleteCruisecontrolPublisher", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteCruisecontrolPublisher(string sessionHash, int cruisecontrol_id, int tracker_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteCruisecontrolPublisher", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteCruisecontrolPublisher(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCruisecontrolPublisherAsync(string sessionHash, int cruisecontrol_id, int tracker_id) {
            this.deleteCruisecontrolPublisherAsync(sessionHash, cruisecontrol_id, tracker_id, null);
        }
        
        /// <remarks/>
        public void deleteCruisecontrolPublisherAsync(string sessionHash, int cruisecontrol_id, int tracker_id, object userState) {
            if ((this.deleteCruisecontrolPublisherOperationCompleted == null)) {
                this.deleteCruisecontrolPublisherOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCruisecontrolPublisherOperationCompleted);
            }
            this.InvokeAsync("deleteCruisecontrolPublisher", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        tracker_id}, this.deleteCruisecontrolPublisherOperationCompleted, userState);
        }
        
        private void OndeleteCruisecontrolPublisherOperationCompleted(object arg) {
            if ((this.deleteCruisecontrolPublisherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCruisecontrolPublisherCompleted(this, new deleteCruisecontrolPublisherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrols", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrols")]
        public Cruisecontrol[] getCruisecontrols(string sessionHash, int project_id) {
            object[] results = this.Invoke("getCruisecontrols", new object[] {
                        sessionHash,
                        project_id});
            return ((Cruisecontrol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrols(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrols", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Cruisecontrol[] EndgetCruisecontrols(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Cruisecontrol[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolsAsync(string sessionHash, int project_id) {
            this.getCruisecontrolsAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolsAsync(string sessionHash, int project_id, object userState) {
            if ((this.getCruisecontrolsOperationCompleted == null)) {
                this.getCruisecontrolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolsOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrols", new object[] {
                        sessionHash,
                        project_id}, this.getCruisecontrolsOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolsOperationCompleted(object arg) {
            if ((this.getCruisecontrolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolsCompleted(this, new getCruisecontrolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrol", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrol")]
        public Cruisecontrol[] getCruisecontrolArray(string sessionHash, int cruisecontrol_id) {
            object[] results = this.Invoke("getCruisecontrolArray", new object[] {
                        sessionHash,
                        cruisecontrol_id});
            return ((Cruisecontrol[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrolArray(string sessionHash, int cruisecontrol_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrolArray", new object[] {
                        sessionHash,
                        cruisecontrol_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Cruisecontrol[] EndgetCruisecontrolArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Cruisecontrol[])(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolArrayAsync(string sessionHash, int cruisecontrol_id) {
            this.getCruisecontrolArrayAsync(sessionHash, cruisecontrol_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolArrayAsync(string sessionHash, int cruisecontrol_id, object userState) {
            if ((this.getCruisecontrolArrayOperationCompleted == null)) {
                this.getCruisecontrolArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolArrayOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrolArray", new object[] {
                        sessionHash,
                        cruisecontrol_id}, this.getCruisecontrolArrayOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolArrayOperationCompleted(object arg) {
            if ((this.getCruisecontrolArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolArrayCompleted(this, new getCruisecontrolArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getCruisecontrol", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCruisecontrol")]
        public Cruisecontrol getCruisecontrol(string sessionHash, int cruisecontrol_id) {
            object[] results = this.Invoke("getCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id});
            return ((Cruisecontrol)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCruisecontrol(string sessionHash, int cruisecontrol_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Cruisecontrol EndgetCruisecontrol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Cruisecontrol)(results[0]));
        }
        
        /// <remarks/>
        public void getCruisecontrolAsync(string sessionHash, int cruisecontrol_id) {
            this.getCruisecontrolAsync(sessionHash, cruisecontrol_id, null);
        }
        
        /// <remarks/>
        public void getCruisecontrolAsync(string sessionHash, int cruisecontrol_id, object userState) {
            if ((this.getCruisecontrolOperationCompleted == null)) {
                this.getCruisecontrolOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCruisecontrolOperationCompleted);
            }
            this.InvokeAsync("getCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id}, this.getCruisecontrolOperationCompleted, userState);
        }
        
        private void OngetCruisecontrolOperationCompleted(object arg) {
            if ((this.getCruisecontrolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCruisecontrolCompleted(this, new getCruisecontrolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteCruisecontrol", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCruisecontrol")]
        public int deleteCruisecontrol(string sessionHash, int cruisecontrol_id) {
            object[] results = this.Invoke("deleteCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteCruisecontrol(string sessionHash, int cruisecontrol_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteCruisecontrol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCruisecontrolAsync(string sessionHash, int cruisecontrol_id) {
            this.deleteCruisecontrolAsync(sessionHash, cruisecontrol_id, null);
        }
        
        /// <remarks/>
        public void deleteCruisecontrolAsync(string sessionHash, int cruisecontrol_id, object userState) {
            if ((this.deleteCruisecontrolOperationCompleted == null)) {
                this.deleteCruisecontrolOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCruisecontrolOperationCompleted);
            }
            this.InvokeAsync("deleteCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id}, this.deleteCruisecontrolOperationCompleted, userState);
        }
        
        private void OndeleteCruisecontrolOperationCompleted(object arg) {
            if ((this.deleteCruisecontrolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCruisecontrolCompleted(this, new deleteCruisecontrolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateCruisecontrol", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCruisecontrol")]
        public int updateCruisecontrol(string sessionHash, int cruisecontrol_id, int project_id, string build_name, string build_description, int submitter_id) {
            object[] results = this.Invoke("updateCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        project_id,
                        build_name,
                        build_description,
                        submitter_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateCruisecontrol(string sessionHash, int cruisecontrol_id, int project_id, string build_name, string build_description, int submitter_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        project_id,
                        build_name,
                        build_description,
                        submitter_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateCruisecontrol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateCruisecontrolAsync(string sessionHash, int cruisecontrol_id, int project_id, string build_name, string build_description, int submitter_id) {
            this.updateCruisecontrolAsync(sessionHash, cruisecontrol_id, project_id, build_name, build_description, submitter_id, null);
        }
        
        /// <remarks/>
        public void updateCruisecontrolAsync(string sessionHash, int cruisecontrol_id, int project_id, string build_name, string build_description, int submitter_id, object userState) {
            if ((this.updateCruisecontrolOperationCompleted == null)) {
                this.updateCruisecontrolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCruisecontrolOperationCompleted);
            }
            this.InvokeAsync("updateCruisecontrol", new object[] {
                        sessionHash,
                        cruisecontrol_id,
                        project_id,
                        build_name,
                        build_description,
                        submitter_id}, this.updateCruisecontrolOperationCompleted, userState);
        }
        
        private void OnupdateCruisecontrolOperationCompleted(object arg) {
            if ((this.updateCruisecontrolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCruisecontrolCompleted(this, new updateCruisecontrolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addCruisecontrol", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCruisecontrol")]
        public int addCruisecontrol(string sessionHash, int project_id, string build_name, string build_description, int submitter_id) {
            object[] results = this.Invoke("addCruisecontrol", new object[] {
                        sessionHash,
                        project_id,
                        build_name,
                        build_description,
                        submitter_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCruisecontrol(string sessionHash, int project_id, string build_name, string build_description, int submitter_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCruisecontrol", new object[] {
                        sessionHash,
                        project_id,
                        build_name,
                        build_description,
                        submitter_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddCruisecontrol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCruisecontrolAsync(string sessionHash, int project_id, string build_name, string build_description, int submitter_id) {
            this.addCruisecontrolAsync(sessionHash, project_id, build_name, build_description, submitter_id, null);
        }
        
        /// <remarks/>
        public void addCruisecontrolAsync(string sessionHash, int project_id, string build_name, string build_description, int submitter_id, object userState) {
            if ((this.addCruisecontrolOperationCompleted == null)) {
                this.addCruisecontrolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCruisecontrolOperationCompleted);
            }
            this.InvokeAsync("addCruisecontrol", new object[] {
                        sessionHash,
                        project_id,
                        build_name,
                        build_description,
                        submitter_id}, this.addCruisecontrolOperationCompleted, userState);
        }
        
        private void OnaddCruisecontrolOperationCompleted(object arg) {
            if ((this.addCruisecontrolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCruisecontrolCompleted(this, new addCruisecontrolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectScm", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectScm")]
        public ProjectScm[] getProjectScmArray(string sessionHash, int project_id) {
            object[] results = this.Invoke("getProjectScmArray", new object[] {
                        sessionHash,
                        project_id});
            return ((ProjectScm[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectScmArray(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectScmArray", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProjectScm[] EndgetProjectScmArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectScm[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectScmArrayAsync(string sessionHash, int project_id) {
            this.getProjectScmArrayAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getProjectScmArrayAsync(string sessionHash, int project_id, object userState) {
            if ((this.getProjectScmArrayOperationCompleted == null)) {
                this.getProjectScmArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectScmArrayOperationCompleted);
            }
            this.InvokeAsync("getProjectScmArray", new object[] {
                        sessionHash,
                        project_id}, this.getProjectScmArrayOperationCompleted, userState);
        }
        
        private void OngetProjectScmArrayOperationCompleted(object arg) {
            if ((this.getProjectScmArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectScmArrayCompleted(this, new getProjectScmArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getProjectScm", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectScm")]
        public ProjectScm getProjectScm(string sessionHash, int project_id) {
            object[] results = this.Invoke("getProjectScm", new object[] {
                        sessionHash,
                        project_id});
            return ((ProjectScm)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectScm(string sessionHash, int project_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectScm", new object[] {
                        sessionHash,
                        project_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProjectScm EndgetProjectScm(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProjectScm)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectScmAsync(string sessionHash, int project_id) {
            this.getProjectScmAsync(sessionHash, project_id, null);
        }
        
        /// <remarks/>
        public void getProjectScmAsync(string sessionHash, int project_id, object userState) {
            if ((this.getProjectScmOperationCompleted == null)) {
                this.getProjectScmOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectScmOperationCompleted);
            }
            this.InvokeAsync("getProjectScm", new object[] {
                        sessionHash,
                        project_id}, this.getProjectScmOperationCompleted, userState);
        }
        
        private void OngetProjectScmOperationCompleted(object arg) {
            if ((this.getProjectScmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectScmCompleted(this, new getProjectScmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateProjectScm", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProjectScm")]
        public int updateProjectScm(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text) {
            object[] results = this.Invoke("updateProjectScm", new object[] {
                        sessionHash,
                        project_id,
                        enable_anonread,
                        scm_server_id,
                        controlled,
                        hostname,
                        root_directory,
                        external_browse_url,
                        browse_text,
                        access_text});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateProjectScm(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateProjectScm", new object[] {
                        sessionHash,
                        project_id,
                        enable_anonread,
                        scm_server_id,
                        controlled,
                        hostname,
                        root_directory,
                        external_browse_url,
                        browse_text,
                        access_text}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateProjectScm(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateProjectScmAsync(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text) {
            this.updateProjectScmAsync(sessionHash, project_id, enable_anonread, scm_server_id, controlled, hostname, root_directory, external_browse_url, browse_text, access_text, null);
        }
        
        /// <remarks/>
        public void updateProjectScmAsync(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text, object userState) {
            if ((this.updateProjectScmOperationCompleted == null)) {
                this.updateProjectScmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProjectScmOperationCompleted);
            }
            this.InvokeAsync("updateProjectScm", new object[] {
                        sessionHash,
                        project_id,
                        enable_anonread,
                        scm_server_id,
                        controlled,
                        hostname,
                        root_directory,
                        external_browse_url,
                        browse_text,
                        access_text}, this.updateProjectScmOperationCompleted, userState);
        }
        
        private void OnupdateProjectScmOperationCompleted(object arg) {
            if ((this.updateProjectScmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProjectScmCompleted(this, new updateProjectScmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addProjectScm", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addProjectScm")]
        public int addProjectScm(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text) {
            object[] results = this.Invoke("addProjectScm", new object[] {
                        sessionHash,
                        project_id,
                        enable_anonread,
                        scm_server_id,
                        controlled,
                        hostname,
                        root_directory,
                        external_browse_url,
                        browse_text,
                        access_text});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddProjectScm(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addProjectScm", new object[] {
                        sessionHash,
                        project_id,
                        enable_anonread,
                        scm_server_id,
                        controlled,
                        hostname,
                        root_directory,
                        external_browse_url,
                        browse_text,
                        access_text}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddProjectScm(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addProjectScmAsync(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text) {
            this.addProjectScmAsync(sessionHash, project_id, enable_anonread, scm_server_id, controlled, hostname, root_directory, external_browse_url, browse_text, access_text, null);
        }
        
        /// <remarks/>
        public void addProjectScmAsync(string sessionHash, int project_id, bool enable_anonread, int scm_server_id, bool controlled, string hostname, string root_directory, string external_browse_url, string browse_text, string access_text, object userState) {
            if ((this.addProjectScmOperationCompleted == null)) {
                this.addProjectScmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProjectScmOperationCompleted);
            }
            this.InvokeAsync("addProjectScm", new object[] {
                        sessionHash,
                        project_id,
                        enable_anonread,
                        scm_server_id,
                        controlled,
                        hostname,
                        root_directory,
                        external_browse_url,
                        browse_text,
                        access_text}, this.addProjectScmOperationCompleted, userState);
        }
        
        private void OnaddProjectScmOperationCompleted(object arg) {
            if ((this.addProjectScmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProjectScmCompleted(this, new addProjectScmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForums", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForums")]
        public Forum[] getForums(string sessionHash, string section, int ref_id, string forum_name, int is_public, string description, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max) {
            object[] results = this.Invoke("getForums", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        forum_name,
                        is_public,
                        description,
                        msg_count_min,
                        msg_count_max,
                        recent_date_min,
                        recent_date_max});
            return ((Forum[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForums(string sessionHash, string section, int ref_id, string forum_name, int is_public, string description, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForums", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        forum_name,
                        is_public,
                        description,
                        msg_count_min,
                        msg_count_max,
                        recent_date_min,
                        recent_date_max}, callback, asyncState);
        }
        
        /// <remarks/>
        public Forum[] EndgetForums(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Forum[])(results[0]));
        }
        
        /// <remarks/>
        public void getForumsAsync(string sessionHash, string section, int ref_id, string forum_name, int is_public, string description, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max) {
            this.getForumsAsync(sessionHash, section, ref_id, forum_name, is_public, description, msg_count_min, msg_count_max, recent_date_min, recent_date_max, null);
        }
        
        /// <remarks/>
        public void getForumsAsync(string sessionHash, string section, int ref_id, string forum_name, int is_public, string description, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max, object userState) {
            if ((this.getForumsOperationCompleted == null)) {
                this.getForumsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumsOperationCompleted);
            }
            this.InvokeAsync("getForums", new object[] {
                        sessionHash,
                        section,
                        ref_id,
                        forum_name,
                        is_public,
                        description,
                        msg_count_min,
                        msg_count_max,
                        recent_date_min,
                        recent_date_max}, this.getForumsOperationCompleted, userState);
        }
        
        private void OngetForumsOperationCompleted(object arg) {
            if ((this.getForumsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumsCompleted(this, new getForumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForum", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForum")]
        public Forum[] getForumArray(string sessionHash, int forum_id) {
            object[] results = this.Invoke("getForumArray", new object[] {
                        sessionHash,
                        forum_id});
            return ((Forum[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumArray(string sessionHash, int forum_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumArray", new object[] {
                        sessionHash,
                        forum_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Forum[] EndgetForumArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Forum[])(results[0]));
        }
        
        /// <remarks/>
        public void getForumArrayAsync(string sessionHash, int forum_id) {
            this.getForumArrayAsync(sessionHash, forum_id, null);
        }
        
        /// <remarks/>
        public void getForumArrayAsync(string sessionHash, int forum_id, object userState) {
            if ((this.getForumArrayOperationCompleted == null)) {
                this.getForumArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumArrayOperationCompleted);
            }
            this.InvokeAsync("getForumArray", new object[] {
                        sessionHash,
                        forum_id}, this.getForumArrayOperationCompleted, userState);
        }
        
        private void OngetForumArrayOperationCompleted(object arg) {
            if ((this.getForumArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumArrayCompleted(this, new getForumArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForum", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForum")]
        public Forum getForum(string sessionHash, int forum_id) {
            object[] results = this.Invoke("getForum", new object[] {
                        sessionHash,
                        forum_id});
            return ((Forum)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForum(string sessionHash, int forum_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForum", new object[] {
                        sessionHash,
                        forum_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Forum EndgetForum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Forum)(results[0]));
        }
        
        /// <remarks/>
        public void getForumAsync(string sessionHash, int forum_id) {
            this.getForumAsync(sessionHash, forum_id, null);
        }
        
        /// <remarks/>
        public void getForumAsync(string sessionHash, int forum_id, object userState) {
            if ((this.getForumOperationCompleted == null)) {
                this.getForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumOperationCompleted);
            }
            this.InvokeAsync("getForum", new object[] {
                        sessionHash,
                        forum_id}, this.getForumOperationCompleted, userState);
        }
        
        private void OngetForumOperationCompleted(object arg) {
            if ((this.getForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumCompleted(this, new getForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateForum", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateForum")]
        public int updateForum(string sessionHash, int forum_id, string section, int ref_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab) {
            object[] results = this.Invoke("updateForum", new object[] {
                        sessionHash,
                        forum_id,
                        section,
                        ref_id,
                        forum_name,
                        is_public,
                        description,
                        send_all_posts_to,
                        moderation_level,
                        show_associations_tab,
                        show_tags_tab});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateForum(string sessionHash, int forum_id, string section, int ref_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateForum", new object[] {
                        sessionHash,
                        forum_id,
                        section,
                        ref_id,
                        forum_name,
                        is_public,
                        description,
                        send_all_posts_to,
                        moderation_level,
                        show_associations_tab,
                        show_tags_tab}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateForum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateForumAsync(string sessionHash, int forum_id, string section, int ref_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab) {
            this.updateForumAsync(sessionHash, forum_id, section, ref_id, forum_name, is_public, description, send_all_posts_to, moderation_level, show_associations_tab, show_tags_tab, null);
        }
        
        /// <remarks/>
        public void updateForumAsync(string sessionHash, int forum_id, string section, int ref_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab, object userState) {
            if ((this.updateForumOperationCompleted == null)) {
                this.updateForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateForumOperationCompleted);
            }
            this.InvokeAsync("updateForum", new object[] {
                        sessionHash,
                        forum_id,
                        section,
                        ref_id,
                        forum_name,
                        is_public,
                        description,
                        send_all_posts_to,
                        moderation_level,
                        show_associations_tab,
                        show_tags_tab}, this.updateForumOperationCompleted, userState);
        }
        
        private void OnupdateForumOperationCompleted(object arg) {
            if ((this.updateForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateForumCompleted(this, new updateForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addForum", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addForum")]
        public int addForum(string sessionHash, int project_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab) {
            object[] results = this.Invoke("addForum", new object[] {
                        sessionHash,
                        project_id,
                        forum_name,
                        is_public,
                        description,
                        send_all_posts_to,
                        moderation_level,
                        show_associations_tab,
                        show_tags_tab});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddForum(string sessionHash, int project_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addForum", new object[] {
                        sessionHash,
                        project_id,
                        forum_name,
                        is_public,
                        description,
                        send_all_posts_to,
                        moderation_level,
                        show_associations_tab,
                        show_tags_tab}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddForum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addForumAsync(string sessionHash, int project_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab) {
            this.addForumAsync(sessionHash, project_id, forum_name, is_public, description, send_all_posts_to, moderation_level, show_associations_tab, show_tags_tab, null);
        }
        
        /// <remarks/>
        public void addForumAsync(string sessionHash, int project_id, string forum_name, bool is_public, string description, string send_all_posts_to, int moderation_level, bool show_associations_tab, bool show_tags_tab, object userState) {
            if ((this.addForumOperationCompleted == null)) {
                this.addForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddForumOperationCompleted);
            }
            this.InvokeAsync("addForum", new object[] {
                        sessionHash,
                        project_id,
                        forum_name,
                        is_public,
                        description,
                        send_all_posts_to,
                        moderation_level,
                        show_associations_tab,
                        show_tags_tab}, this.addForumOperationCompleted, userState);
        }
        
        private void OnaddForumOperationCompleted(object arg) {
            if ((this.addForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addForumCompleted(this, new addForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteForum", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteForum")]
        public int deleteForum(string sessionHash, int forum_id) {
            object[] results = this.Invoke("deleteForum", new object[] {
                        sessionHash,
                        forum_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteForum(string sessionHash, int forum_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteForum", new object[] {
                        sessionHash,
                        forum_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteForum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteForumAsync(string sessionHash, int forum_id) {
            this.deleteForumAsync(sessionHash, forum_id, null);
        }
        
        /// <remarks/>
        public void deleteForumAsync(string sessionHash, int forum_id, object userState) {
            if ((this.deleteForumOperationCompleted == null)) {
                this.deleteForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteForumOperationCompleted);
            }
            this.InvokeAsync("deleteForum", new object[] {
                        sessionHash,
                        forum_id}, this.deleteForumOperationCompleted, userState);
        }
        
        private void OndeleteForumOperationCompleted(object arg) {
            if ((this.deleteForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteForumCompleted(this, new deleteForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForumThreads", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForumThreads")]
        public ForumThread[] getForumThreads(string sessionHash, int forum_id, int created_by, string thread_name, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max) {
            object[] results = this.Invoke("getForumThreads", new object[] {
                        sessionHash,
                        forum_id,
                        created_by,
                        thread_name,
                        msg_count_min,
                        msg_count_max,
                        recent_date_min,
                        recent_date_max});
            return ((ForumThread[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumThreads(string sessionHash, int forum_id, int created_by, string thread_name, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumThreads", new object[] {
                        sessionHash,
                        forum_id,
                        created_by,
                        thread_name,
                        msg_count_min,
                        msg_count_max,
                        recent_date_min,
                        recent_date_max}, callback, asyncState);
        }
        
        /// <remarks/>
        public ForumThread[] EndgetForumThreads(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ForumThread[])(results[0]));
        }
        
        /// <remarks/>
        public void getForumThreadsAsync(string sessionHash, int forum_id, int created_by, string thread_name, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max) {
            this.getForumThreadsAsync(sessionHash, forum_id, created_by, thread_name, msg_count_min, msg_count_max, recent_date_min, recent_date_max, null);
        }
        
        /// <remarks/>
        public void getForumThreadsAsync(string sessionHash, int forum_id, int created_by, string thread_name, int msg_count_min, int msg_count_max, string recent_date_min, string recent_date_max, object userState) {
            if ((this.getForumThreadsOperationCompleted == null)) {
                this.getForumThreadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumThreadsOperationCompleted);
            }
            this.InvokeAsync("getForumThreads", new object[] {
                        sessionHash,
                        forum_id,
                        created_by,
                        thread_name,
                        msg_count_min,
                        msg_count_max,
                        recent_date_min,
                        recent_date_max}, this.getForumThreadsOperationCompleted, userState);
        }
        
        private void OngetForumThreadsOperationCompleted(object arg) {
            if ((this.getForumThreadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumThreadsCompleted(this, new getForumThreadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForumThread", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForumThread")]
        public ForumThread[] getForumThreadArray(string sessionHash, int forum_thread_id) {
            object[] results = this.Invoke("getForumThreadArray", new object[] {
                        sessionHash,
                        forum_thread_id});
            return ((ForumThread[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumThreadArray(string sessionHash, int forum_thread_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumThreadArray", new object[] {
                        sessionHash,
                        forum_thread_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ForumThread[] EndgetForumThreadArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ForumThread[])(results[0]));
        }
        
        /// <remarks/>
        public void getForumThreadArrayAsync(string sessionHash, int forum_thread_id) {
            this.getForumThreadArrayAsync(sessionHash, forum_thread_id, null);
        }
        
        /// <remarks/>
        public void getForumThreadArrayAsync(string sessionHash, int forum_thread_id, object userState) {
            if ((this.getForumThreadArrayOperationCompleted == null)) {
                this.getForumThreadArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumThreadArrayOperationCompleted);
            }
            this.InvokeAsync("getForumThreadArray", new object[] {
                        sessionHash,
                        forum_thread_id}, this.getForumThreadArrayOperationCompleted, userState);
        }
        
        private void OngetForumThreadArrayOperationCompleted(object arg) {
            if ((this.getForumThreadArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumThreadArrayCompleted(this, new getForumThreadArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForumThread", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForumThread")]
        public ForumThread getForumThread(string sessionHash, int forum_thread_id) {
            object[] results = this.Invoke("getForumThread", new object[] {
                        sessionHash,
                        forum_thread_id});
            return ((ForumThread)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumThread(string sessionHash, int forum_thread_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumThread", new object[] {
                        sessionHash,
                        forum_thread_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ForumThread EndgetForumThread(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ForumThread)(results[0]));
        }
        
        /// <remarks/>
        public void getForumThreadAsync(string sessionHash, int forum_thread_id) {
            this.getForumThreadAsync(sessionHash, forum_thread_id, null);
        }
        
        /// <remarks/>
        public void getForumThreadAsync(string sessionHash, int forum_thread_id, object userState) {
            if ((this.getForumThreadOperationCompleted == null)) {
                this.getForumThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumThreadOperationCompleted);
            }
            this.InvokeAsync("getForumThread", new object[] {
                        sessionHash,
                        forum_thread_id}, this.getForumThreadOperationCompleted, userState);
        }
        
        private void OngetForumThreadOperationCompleted(object arg) {
            if ((this.getForumThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumThreadCompleted(this, new getForumThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateForumThread", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateForumThread")]
        public int updateForumThread(string sessionHash, int forum_thread_id, string thread_name) {
            object[] results = this.Invoke("updateForumThread", new object[] {
                        sessionHash,
                        forum_thread_id,
                        thread_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateForumThread(string sessionHash, int forum_thread_id, string thread_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateForumThread", new object[] {
                        sessionHash,
                        forum_thread_id,
                        thread_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateForumThread(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateForumThreadAsync(string sessionHash, int forum_thread_id, string thread_name) {
            this.updateForumThreadAsync(sessionHash, forum_thread_id, thread_name, null);
        }
        
        /// <remarks/>
        public void updateForumThreadAsync(string sessionHash, int forum_thread_id, string thread_name, object userState) {
            if ((this.updateForumThreadOperationCompleted == null)) {
                this.updateForumThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateForumThreadOperationCompleted);
            }
            this.InvokeAsync("updateForumThread", new object[] {
                        sessionHash,
                        forum_thread_id,
                        thread_name}, this.updateForumThreadOperationCompleted, userState);
        }
        
        private void OnupdateForumThreadOperationCompleted(object arg) {
            if ((this.updateForumThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateForumThreadCompleted(this, new updateForumThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addForumThread", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addForumThread")]
        public int addForumThread(string sessionHash, int forum_id, string thread_name) {
            object[] results = this.Invoke("addForumThread", new object[] {
                        sessionHash,
                        forum_id,
                        thread_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddForumThread(string sessionHash, int forum_id, string thread_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addForumThread", new object[] {
                        sessionHash,
                        forum_id,
                        thread_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddForumThread(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addForumThreadAsync(string sessionHash, int forum_id, string thread_name) {
            this.addForumThreadAsync(sessionHash, forum_id, thread_name, null);
        }
        
        /// <remarks/>
        public void addForumThreadAsync(string sessionHash, int forum_id, string thread_name, object userState) {
            if ((this.addForumThreadOperationCompleted == null)) {
                this.addForumThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddForumThreadOperationCompleted);
            }
            this.InvokeAsync("addForumThread", new object[] {
                        sessionHash,
                        forum_id,
                        thread_name}, this.addForumThreadOperationCompleted, userState);
        }
        
        private void OnaddForumThreadOperationCompleted(object arg) {
            if ((this.addForumThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addForumThreadCompleted(this, new addForumThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteForumThread", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteForumThread")]
        public int deleteForumThread(string sessionHash, int forum_thread_id) {
            object[] results = this.Invoke("deleteForumThread", new object[] {
                        sessionHash,
                        forum_thread_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteForumThread(string sessionHash, int forum_thread_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteForumThread", new object[] {
                        sessionHash,
                        forum_thread_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteForumThread(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteForumThreadAsync(string sessionHash, int forum_thread_id) {
            this.deleteForumThreadAsync(sessionHash, forum_thread_id, null);
        }
        
        /// <remarks/>
        public void deleteForumThreadAsync(string sessionHash, int forum_thread_id, object userState) {
            if ((this.deleteForumThreadOperationCompleted == null)) {
                this.deleteForumThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteForumThreadOperationCompleted);
            }
            this.InvokeAsync("deleteForumThread", new object[] {
                        sessionHash,
                        forum_thread_id}, this.deleteForumThreadOperationCompleted, userState);
        }
        
        private void OndeleteForumThreadOperationCompleted(object arg) {
            if ((this.deleteForumThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteForumThreadCompleted(this, new deleteForumThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForumMessages", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForumMessages")]
        public ForumMessage[] getForumMessages(string sessionHash, int forum_thread_id, int created_by, string subject, string body, string post_date_min, string post_date_max, int parent_forum_message_id, string mail_msg_id, string mail_sender, int is_approved) {
            object[] results = this.Invoke("getForumMessages", new object[] {
                        sessionHash,
                        forum_thread_id,
                        created_by,
                        subject,
                        body,
                        post_date_min,
                        post_date_max,
                        parent_forum_message_id,
                        mail_msg_id,
                        mail_sender,
                        is_approved});
            return ((ForumMessage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumMessages(string sessionHash, int forum_thread_id, int created_by, string subject, string body, string post_date_min, string post_date_max, int parent_forum_message_id, string mail_msg_id, string mail_sender, int is_approved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumMessages", new object[] {
                        sessionHash,
                        forum_thread_id,
                        created_by,
                        subject,
                        body,
                        post_date_min,
                        post_date_max,
                        parent_forum_message_id,
                        mail_msg_id,
                        mail_sender,
                        is_approved}, callback, asyncState);
        }
        
        /// <remarks/>
        public ForumMessage[] EndgetForumMessages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ForumMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getForumMessagesAsync(string sessionHash, int forum_thread_id, int created_by, string subject, string body, string post_date_min, string post_date_max, int parent_forum_message_id, string mail_msg_id, string mail_sender, int is_approved) {
            this.getForumMessagesAsync(sessionHash, forum_thread_id, created_by, subject, body, post_date_min, post_date_max, parent_forum_message_id, mail_msg_id, mail_sender, is_approved, null);
        }
        
        /// <remarks/>
        public void getForumMessagesAsync(string sessionHash, int forum_thread_id, int created_by, string subject, string body, string post_date_min, string post_date_max, int parent_forum_message_id, string mail_msg_id, string mail_sender, int is_approved, object userState) {
            if ((this.getForumMessagesOperationCompleted == null)) {
                this.getForumMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumMessagesOperationCompleted);
            }
            this.InvokeAsync("getForumMessages", new object[] {
                        sessionHash,
                        forum_thread_id,
                        created_by,
                        subject,
                        body,
                        post_date_min,
                        post_date_max,
                        parent_forum_message_id,
                        mail_msg_id,
                        mail_sender,
                        is_approved}, this.getForumMessagesOperationCompleted, userState);
        }
        
        private void OngetForumMessagesOperationCompleted(object arg) {
            if ((this.getForumMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumMessagesCompleted(this, new getForumMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForumMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForumMessage")]
        public ForumMessage[] getForumMessageArray(string sessionHash, int forum_message_id) {
            object[] results = this.Invoke("getForumMessageArray", new object[] {
                        sessionHash,
                        forum_message_id});
            return ((ForumMessage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumMessageArray(string sessionHash, int forum_message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumMessageArray", new object[] {
                        sessionHash,
                        forum_message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ForumMessage[] EndgetForumMessageArray(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ForumMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getForumMessageArrayAsync(string sessionHash, int forum_message_id) {
            this.getForumMessageArrayAsync(sessionHash, forum_message_id, null);
        }
        
        /// <remarks/>
        public void getForumMessageArrayAsync(string sessionHash, int forum_message_id, object userState) {
            if ((this.getForumMessageArrayOperationCompleted == null)) {
                this.getForumMessageArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumMessageArrayOperationCompleted);
            }
            this.InvokeAsync("getForumMessageArray", new object[] {
                        sessionHash,
                        forum_message_id}, this.getForumMessageArrayOperationCompleted, userState);
        }
        
        private void OngetForumMessageArrayOperationCompleted(object arg) {
            if ((this.getForumMessageArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumMessageArrayCompleted(this, new getForumMessageArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#getForumMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("getForumMessage")]
        public ForumMessage getForumMessage(string sessionHash, int forum_message_id) {
            object[] results = this.Invoke("getForumMessage", new object[] {
                        sessionHash,
                        forum_message_id});
            return ((ForumMessage)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetForumMessage(string sessionHash, int forum_message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getForumMessage", new object[] {
                        sessionHash,
                        forum_message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ForumMessage EndgetForumMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ForumMessage)(results[0]));
        }
        
        /// <remarks/>
        public void getForumMessageAsync(string sessionHash, int forum_message_id) {
            this.getForumMessageAsync(sessionHash, forum_message_id, null);
        }
        
        /// <remarks/>
        public void getForumMessageAsync(string sessionHash, int forum_message_id, object userState) {
            if ((this.getForumMessageOperationCompleted == null)) {
                this.getForumMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumMessageOperationCompleted);
            }
            this.InvokeAsync("getForumMessage", new object[] {
                        sessionHash,
                        forum_message_id}, this.getForumMessageOperationCompleted, userState);
        }
        
        private void OngetForumMessageOperationCompleted(object arg) {
            if ((this.getForumMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumMessageCompleted(this, new getForumMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#updateForumMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateForumMessage")]
        public int updateForumMessage(string sessionHash, int forum_message_id, string subject, string body, bool is_approved) {
            object[] results = this.Invoke("updateForumMessage", new object[] {
                        sessionHash,
                        forum_message_id,
                        subject,
                        body,
                        is_approved});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateForumMessage(string sessionHash, int forum_message_id, string subject, string body, bool is_approved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateForumMessage", new object[] {
                        sessionHash,
                        forum_message_id,
                        subject,
                        body,
                        is_approved}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndupdateForumMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateForumMessageAsync(string sessionHash, int forum_message_id, string subject, string body, bool is_approved) {
            this.updateForumMessageAsync(sessionHash, forum_message_id, subject, body, is_approved, null);
        }
        
        /// <remarks/>
        public void updateForumMessageAsync(string sessionHash, int forum_message_id, string subject, string body, bool is_approved, object userState) {
            if ((this.updateForumMessageOperationCompleted == null)) {
                this.updateForumMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateForumMessageOperationCompleted);
            }
            this.InvokeAsync("updateForumMessage", new object[] {
                        sessionHash,
                        forum_message_id,
                        subject,
                        body,
                        is_approved}, this.updateForumMessageOperationCompleted, userState);
        }
        
        private void OnupdateForumMessageOperationCompleted(object arg) {
            if ((this.updateForumMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateForumMessageCompleted(this, new updateForumMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#addForumMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("addForumMessage")]
        public int addForumMessage(string sessionHash, int forum_thread_id, string subject, string body, int parent_forum_message_id, string mail_msg_id, string mail_sender, bool is_approved) {
            object[] results = this.Invoke("addForumMessage", new object[] {
                        sessionHash,
                        forum_thread_id,
                        subject,
                        body,
                        parent_forum_message_id,
                        mail_msg_id,
                        mail_sender,
                        is_approved});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddForumMessage(string sessionHash, int forum_thread_id, string subject, string body, int parent_forum_message_id, string mail_msg_id, string mail_sender, bool is_approved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addForumMessage", new object[] {
                        sessionHash,
                        forum_thread_id,
                        subject,
                        body,
                        parent_forum_message_id,
                        mail_msg_id,
                        mail_sender,
                        is_approved}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddForumMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addForumMessageAsync(string sessionHash, int forum_thread_id, string subject, string body, int parent_forum_message_id, string mail_msg_id, string mail_sender, bool is_approved) {
            this.addForumMessageAsync(sessionHash, forum_thread_id, subject, body, parent_forum_message_id, mail_msg_id, mail_sender, is_approved, null);
        }
        
        /// <remarks/>
        public void addForumMessageAsync(string sessionHash, int forum_thread_id, string subject, string body, int parent_forum_message_id, string mail_msg_id, string mail_sender, bool is_approved, object userState) {
            if ((this.addForumMessageOperationCompleted == null)) {
                this.addForumMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddForumMessageOperationCompleted);
            }
            this.InvokeAsync("addForumMessage", new object[] {
                        sessionHash,
                        forum_thread_id,
                        subject,
                        body,
                        parent_forum_message_id,
                        mail_msg_id,
                        mail_sender,
                        is_approved}, this.addForumMessageOperationCompleted, userState);
        }
        
        private void OnaddForumMessageOperationCompleted(object arg) {
            if ((this.addForumMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addForumMessageCompleted(this, new addForumMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://forge.iowa.gov#deleteForumMessage", RequestNamespace="http://forge.iowa.gov", ResponseNamespace="http://forge.iowa.gov")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteForumMessage")]
        public int deleteForumMessage(string sessionHash, int forum_message_id) {
            object[] results = this.Invoke("deleteForumMessage", new object[] {
                        sessionHash,
                        forum_message_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteForumMessage(string sessionHash, int forum_message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteForumMessage", new object[] {
                        sessionHash,
                        forum_message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteForumMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteForumMessageAsync(string sessionHash, int forum_message_id) {
            this.deleteForumMessageAsync(sessionHash, forum_message_id, null);
        }
        
        /// <remarks/>
        public void deleteForumMessageAsync(string sessionHash, int forum_message_id, object userState) {
            if ((this.deleteForumMessageOperationCompleted == null)) {
                this.deleteForumMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteForumMessageOperationCompleted);
            }
            this.InvokeAsync("deleteForumMessage", new object[] {
                        sessionHash,
                        forum_message_id}, this.deleteForumMessageOperationCompleted, userState);
        }
        
        private void OndeleteForumMessageOperationCompleted(object arg) {
            if ((this.deleteForumMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteForumMessageCompleted(this, new deleteForumMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Association {
        
        private string sectionField;
        
        private int ref_idField;
        
        private string to_sectionField;
        
        private int to_ref_idField;
        
        private string commentField;
        
        private string associated_item_descriptionField;
        
        private string associated_item_urlField;
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public int ref_id {
            get {
                return this.ref_idField;
            }
            set {
                this.ref_idField = value;
            }
        }
        
        /// <remarks/>
        public string to_section {
            get {
                return this.to_sectionField;
            }
            set {
                this.to_sectionField = value;
            }
        }
        
        /// <remarks/>
        public int to_ref_id {
            get {
                return this.to_ref_idField;
            }
            set {
                this.to_ref_idField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string associated_item_description {
            get {
                return this.associated_item_descriptionField;
            }
            set {
                this.associated_item_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string associated_item_url {
            get {
                return this.associated_item_urlField;
            }
            set {
                this.associated_item_urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class ForumMessage {
        
        private int forum_message_idField;
        
        private int forum_thread_idField;
        
        private int created_byField;
        
        private string subjectField;
        
        private string bodyField;
        
        private string post_dateField;
        
        private int parent_forum_message_idField;
        
        private string mail_msg_idField;
        
        private string mail_senderField;
        
        private int is_approvedField;
        
        /// <remarks/>
        public int forum_message_id {
            get {
                return this.forum_message_idField;
            }
            set {
                this.forum_message_idField = value;
            }
        }
        
        /// <remarks/>
        public int forum_thread_id {
            get {
                return this.forum_thread_idField;
            }
            set {
                this.forum_thread_idField = value;
            }
        }
        
        /// <remarks/>
        public int created_by {
            get {
                return this.created_byField;
            }
            set {
                this.created_byField = value;
            }
        }
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string post_date {
            get {
                return this.post_dateField;
            }
            set {
                this.post_dateField = value;
            }
        }
        
        /// <remarks/>
        public int parent_forum_message_id {
            get {
                return this.parent_forum_message_idField;
            }
            set {
                this.parent_forum_message_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mail_msg_id {
            get {
                return this.mail_msg_idField;
            }
            set {
                this.mail_msg_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mail_sender {
            get {
                return this.mail_senderField;
            }
            set {
                this.mail_senderField = value;
            }
        }
        
        /// <remarks/>
        public int is_approved {
            get {
                return this.is_approvedField;
            }
            set {
                this.is_approvedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class ForumThread {
        
        private int forum_thread_idField;
        
        private int forum_idField;
        
        private int created_byField;
        
        private string thread_nameField;
        
        private int message_countField;
        
        private string most_recent_dateField;
        
        /// <remarks/>
        public int forum_thread_id {
            get {
                return this.forum_thread_idField;
            }
            set {
                this.forum_thread_idField = value;
            }
        }
        
        /// <remarks/>
        public int forum_id {
            get {
                return this.forum_idField;
            }
            set {
                this.forum_idField = value;
            }
        }
        
        /// <remarks/>
        public int created_by {
            get {
                return this.created_byField;
            }
            set {
                this.created_byField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string thread_name {
            get {
                return this.thread_nameField;
            }
            set {
                this.thread_nameField = value;
            }
        }
        
        /// <remarks/>
        public int message_count {
            get {
                return this.message_countField;
            }
            set {
                this.message_countField = value;
            }
        }
        
        /// <remarks/>
        public string most_recent_date {
            get {
                return this.most_recent_dateField;
            }
            set {
                this.most_recent_dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Forum {
        
        private int forum_idField;
        
        private string sectionField;
        
        private int ref_idField;
        
        private string forum_nameField;
        
        private bool is_publicField;
        
        private string descriptionField;
        
        private string send_all_posts_toField;
        
        private int thread_countField;
        
        private int message_countField;
        
        private string most_recent_dateField;
        
        private int moderation_levelField;
        
        private bool show_associations_tabField;
        
        private bool show_tags_tabField;
        
        /// <remarks/>
        public int forum_id {
            get {
                return this.forum_idField;
            }
            set {
                this.forum_idField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public int ref_id {
            get {
                return this.ref_idField;
            }
            set {
                this.ref_idField = value;
            }
        }
        
        /// <remarks/>
        public string forum_name {
            get {
                return this.forum_nameField;
            }
            set {
                this.forum_nameField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string send_all_posts_to {
            get {
                return this.send_all_posts_toField;
            }
            set {
                this.send_all_posts_toField = value;
            }
        }
        
        /// <remarks/>
        public int thread_count {
            get {
                return this.thread_countField;
            }
            set {
                this.thread_countField = value;
            }
        }
        
        /// <remarks/>
        public int message_count {
            get {
                return this.message_countField;
            }
            set {
                this.message_countField = value;
            }
        }
        
        /// <remarks/>
        public string most_recent_date {
            get {
                return this.most_recent_dateField;
            }
            set {
                this.most_recent_dateField = value;
            }
        }
        
        /// <remarks/>
        public int moderation_level {
            get {
                return this.moderation_levelField;
            }
            set {
                this.moderation_levelField = value;
            }
        }
        
        /// <remarks/>
        public bool show_associations_tab {
            get {
                return this.show_associations_tabField;
            }
            set {
                this.show_associations_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_tags_tab {
            get {
                return this.show_tags_tabField;
            }
            set {
                this.show_tags_tabField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class ProjectScm {
        
        private int project_idField;
        
        private bool enable_anonreadField;
        
        private int scm_server_idField;
        
        private bool controlledField;
        
        private string hostnameField;
        
        private string root_directoryField;
        
        private string external_browse_urlField;
        
        private string browse_textField;
        
        private string access_textField;
        
        private int bytes_usedField;
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public bool enable_anonread {
            get {
                return this.enable_anonreadField;
            }
            set {
                this.enable_anonreadField = value;
            }
        }
        
        /// <remarks/>
        public int scm_server_id {
            get {
                return this.scm_server_idField;
            }
            set {
                this.scm_server_idField = value;
            }
        }
        
        /// <remarks/>
        public bool controlled {
            get {
                return this.controlledField;
            }
            set {
                this.controlledField = value;
            }
        }
        
        /// <remarks/>
        public string hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        public string root_directory {
            get {
                return this.root_directoryField;
            }
            set {
                this.root_directoryField = value;
            }
        }
        
        /// <remarks/>
        public string external_browse_url {
            get {
                return this.external_browse_urlField;
            }
            set {
                this.external_browse_urlField = value;
            }
        }
        
        /// <remarks/>
        public string browse_text {
            get {
                return this.browse_textField;
            }
            set {
                this.browse_textField = value;
            }
        }
        
        /// <remarks/>
        public string access_text {
            get {
                return this.access_textField;
            }
            set {
                this.access_textField = value;
            }
        }
        
        /// <remarks/>
        public int bytes_used {
            get {
                return this.bytes_usedField;
            }
            set {
                this.bytes_usedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Cruisecontrol {
        
        private int cruisecontrol_idField;
        
        private int project_idField;
        
        private string build_nameField;
        
        private string build_descriptionField;
        
        private int submitter_idField;
        
        /// <remarks/>
        public int cruisecontrol_id {
            get {
                return this.cruisecontrol_idField;
            }
            set {
                this.cruisecontrol_idField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string build_name {
            get {
                return this.build_nameField;
            }
            set {
                this.build_nameField = value;
            }
        }
        
        /// <remarks/>
        public string build_description {
            get {
                return this.build_descriptionField;
            }
            set {
                this.build_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int submitter_id {
            get {
                return this.submitter_idField;
            }
            set {
                this.submitter_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class CruisecontrolPublisher {
        
        private int cruisecontrol_idField;
        
        private int tracker_idField;
        
        /// <remarks/>
        public int cruisecontrol_id {
            get {
                return this.cruisecontrol_idField;
            }
            set {
                this.cruisecontrol_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class CruisecontrolDefect {
        
        private int cruisecontrol_defect_idField;
        
        private int cruisecontrol_idField;
        
        private int tracker_item_idField;
        
        private bool openField;
        
        /// <remarks/>
        public int cruisecontrol_defect_id {
            get {
                return this.cruisecontrol_defect_idField;
            }
            set {
                this.cruisecontrol_defect_idField = value;
            }
        }
        
        /// <remarks/>
        public int cruisecontrol_id {
            get {
                return this.cruisecontrol_idField;
            }
            set {
                this.cruisecontrol_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public bool open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class CruisecontrolBuild {
        
        private int cruisecontrol_build_idField;
        
        private int cruisecontrol_idField;
        
        private int cruisecontrol_defect_idField;
        
        private string build_dateField;
        
        private bool was_successfulField;
        
        private bool was_fixField;
        
        private bool was_necessaryField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int cruisecontrol_build_id {
            get {
                return this.cruisecontrol_build_idField;
            }
            set {
                this.cruisecontrol_build_idField = value;
            }
        }
        
        /// <remarks/>
        public int cruisecontrol_id {
            get {
                return this.cruisecontrol_idField;
            }
            set {
                this.cruisecontrol_idField = value;
            }
        }
        
        /// <remarks/>
        public int cruisecontrol_defect_id {
            get {
                return this.cruisecontrol_defect_idField;
            }
            set {
                this.cruisecontrol_defect_idField = value;
            }
        }
        
        /// <remarks/>
        public string build_date {
            get {
                return this.build_dateField;
            }
            set {
                this.build_dateField = value;
            }
        }
        
        /// <remarks/>
        public bool was_successful {
            get {
                return this.was_successfulField;
            }
            set {
                this.was_successfulField = value;
            }
        }
        
        /// <remarks/>
        public bool was_fix {
            get {
                return this.was_fixField;
            }
            set {
                this.was_fixField = value;
            }
        }
        
        /// <remarks/>
        public bool was_necessary {
            get {
                return this.was_necessaryField;
            }
            set {
                this.was_necessaryField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class CruisecontrolBuildChangeUser {
        
        private int cruisecontrol_build_idField;
        
        private int user_idField;
        
        /// <remarks/>
        public int cruisecontrol_build_id {
            get {
                return this.cruisecontrol_build_idField;
            }
            set {
                this.cruisecontrol_build_idField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class CruisecontrolAssignee {
        
        private int cruisecontrol_idField;
        
        private int assigneeField;
        
        /// <remarks/>
        public int cruisecontrol_id {
            get {
                return this.cruisecontrol_idField;
            }
            set {
                this.cruisecontrol_idField = value;
            }
        }
        
        /// <remarks/>
        public int assignee {
            get {
                return this.assigneeField;
            }
            set {
                this.assigneeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerTimeCode {
        
        private int tracker_time_code_idField;
        
        private string time_nameField;
        
        /// <remarks/>
        public int tracker_time_code_id {
            get {
                return this.tracker_time_code_idField;
            }
            set {
                this.tracker_time_code_idField = value;
            }
        }
        
        /// <remarks/>
        public string time_name {
            get {
                return this.time_nameField;
            }
            set {
                this.time_nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerFull {
        
        private int tracker_idField;
        
        private int project_idField;
        
        private string tracker_nameField;
        
        private string descriptionField;
        
        private bool is_publicField;
        
        private bool restrict_browseField;
        
        private bool email_all_updatesField;
        
        private string email_addressField;
        
        private int due_periodField;
        
        private string submit_instructionsField;
        
        private string browse_instructionsField;
        
        private int datatypeField;
        
        private int item_totalField;
        
        private int open_countField;
        
        private TrackerExtraField[] extra_fieldsField;
        
        private TrackerExtraFieldElement[] extra_field_elementsField;
        
        private User[] techiniciansField;
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string tracker_name {
            get {
                return this.tracker_nameField;
            }
            set {
                this.tracker_nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        public bool restrict_browse {
            get {
                return this.restrict_browseField;
            }
            set {
                this.restrict_browseField = value;
            }
        }
        
        /// <remarks/>
        public bool email_all_updates {
            get {
                return this.email_all_updatesField;
            }
            set {
                this.email_all_updatesField = value;
            }
        }
        
        /// <remarks/>
        public string email_address {
            get {
                return this.email_addressField;
            }
            set {
                this.email_addressField = value;
            }
        }
        
        /// <remarks/>
        public int due_period {
            get {
                return this.due_periodField;
            }
            set {
                this.due_periodField = value;
            }
        }
        
        /// <remarks/>
        public string submit_instructions {
            get {
                return this.submit_instructionsField;
            }
            set {
                this.submit_instructionsField = value;
            }
        }
        
        /// <remarks/>
        public string browse_instructions {
            get {
                return this.browse_instructionsField;
            }
            set {
                this.browse_instructionsField = value;
            }
        }
        
        /// <remarks/>
        public int datatype {
            get {
                return this.datatypeField;
            }
            set {
                this.datatypeField = value;
            }
        }
        
        /// <remarks/>
        public int item_total {
            get {
                return this.item_totalField;
            }
            set {
                this.item_totalField = value;
            }
        }
        
        /// <remarks/>
        public int open_count {
            get {
                return this.open_countField;
            }
            set {
                this.open_countField = value;
            }
        }
        
        /// <remarks/>
        public TrackerExtraField[] extra_fields {
            get {
                return this.extra_fieldsField;
            }
            set {
                this.extra_fieldsField = value;
            }
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement[] extra_field_elements {
            get {
                return this.extra_field_elementsField;
            }
            set {
                this.extra_field_elementsField = value;
            }
        }
        
        /// <remarks/>
        public User[] techinicians {
            get {
                return this.techiniciansField;
            }
            set {
                this.techiniciansField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerExtraField {
        
        private int tracker_extra_field_idField;
        
        private int tracker_idField;
        
        private string field_nameField;
        
        private int field_typeField;
        
        private int attribute1Field;
        
        private int attribute2Field;
        
        private bool is_requiredField;
        
        private string aliasField;
        
        private int field_orderField;
        
        private bool use_in_quick_browseField;
        
        private bool show_on_submitField;
        
        private bool use_auto_assignField;
        
        private bool use_workflowField;
        
        private bool use_commit_ruleField;
        
        /// <remarks/>
        public int tracker_extra_field_id {
            get {
                return this.tracker_extra_field_idField;
            }
            set {
                this.tracker_extra_field_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public string field_name {
            get {
                return this.field_nameField;
            }
            set {
                this.field_nameField = value;
            }
        }
        
        /// <remarks/>
        public int field_type {
            get {
                return this.field_typeField;
            }
            set {
                this.field_typeField = value;
            }
        }
        
        /// <remarks/>
        public int attribute1 {
            get {
                return this.attribute1Field;
            }
            set {
                this.attribute1Field = value;
            }
        }
        
        /// <remarks/>
        public int attribute2 {
            get {
                return this.attribute2Field;
            }
            set {
                this.attribute2Field = value;
            }
        }
        
        /// <remarks/>
        public bool is_required {
            get {
                return this.is_requiredField;
            }
            set {
                this.is_requiredField = value;
            }
        }
        
        /// <remarks/>
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public int field_order {
            get {
                return this.field_orderField;
            }
            set {
                this.field_orderField = value;
            }
        }
        
        /// <remarks/>
        public bool use_in_quick_browse {
            get {
                return this.use_in_quick_browseField;
            }
            set {
                this.use_in_quick_browseField = value;
            }
        }
        
        /// <remarks/>
        public bool show_on_submit {
            get {
                return this.show_on_submitField;
            }
            set {
                this.show_on_submitField = value;
            }
        }
        
        /// <remarks/>
        public bool use_auto_assign {
            get {
                return this.use_auto_assignField;
            }
            set {
                this.use_auto_assignField = value;
            }
        }
        
        /// <remarks/>
        public bool use_workflow {
            get {
                return this.use_workflowField;
            }
            set {
                this.use_workflowField = value;
            }
        }
        
        /// <remarks/>
        public bool use_commit_rule {
            get {
                return this.use_commit_ruleField;
            }
            set {
                this.use_commit_ruleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerExtraFieldElement {
        
        private int element_idField;
        
        private int tracker_extra_field_idField;
        
        private string element_nameField;
        
        private int status_idField;
        
        private bool default_selectedField;
        
        private int sort_orderField;
        
        private int auto_assign_toField;
        
        private bool can_commitField;
        
        /// <remarks/>
        public int element_id {
            get {
                return this.element_idField;
            }
            set {
                this.element_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_extra_field_id {
            get {
                return this.tracker_extra_field_idField;
            }
            set {
                this.tracker_extra_field_idField = value;
            }
        }
        
        /// <remarks/>
        public string element_name {
            get {
                return this.element_nameField;
            }
            set {
                this.element_nameField = value;
            }
        }
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public bool default_selected {
            get {
                return this.default_selectedField;
            }
            set {
                this.default_selectedField = value;
            }
        }
        
        /// <remarks/>
        public int sort_order {
            get {
                return this.sort_orderField;
            }
            set {
                this.sort_orderField = value;
            }
        }
        
        /// <remarks/>
        public int auto_assign_to {
            get {
                return this.auto_assign_toField;
            }
            set {
                this.auto_assign_toField = value;
            }
        }
        
        /// <remarks/>
        public bool can_commit {
            get {
                return this.can_commitField;
            }
            set {
                this.can_commitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class User {
        
        private int user_idField;
        
        private string unix_nameField;
        
        private string emailField;
        
        private int statusField;
        
        private string create_dateField;
        
        private string timezoneField;
        
        private string date_formatField;
        
        private string addressField;
        
        private string address2Field;
        
        private string phoneField;
        
        private string faxField;
        
        private string titleField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string country_codeField;
        
        private int language_idField;
        
        private int theme_idField;
        
        private string external_idField;
        
        private string last_loginField;
        
        private string user_text1Field;
        
        private string user_text2Field;
        
        private string user_text3Field;
        
        private string user_text4Field;
        
        private string user_text5Field;
        
        private string user_text6Field;
        
        private bool is_groupField;
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string unix_name {
            get {
                return this.unix_nameField;
            }
            set {
                this.unix_nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                this.create_dateField = value;
            }
        }
        
        /// <remarks/>
        public string timezone {
            get {
                return this.timezoneField;
            }
            set {
                this.timezoneField = value;
            }
        }
        
        /// <remarks/>
        public string date_format {
            get {
                return this.date_formatField;
            }
            set {
                this.date_formatField = value;
            }
        }
        
        /// <remarks/>
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string country_code {
            get {
                return this.country_codeField;
            }
            set {
                this.country_codeField = value;
            }
        }
        
        /// <remarks/>
        public int language_id {
            get {
                return this.language_idField;
            }
            set {
                this.language_idField = value;
            }
        }
        
        /// <remarks/>
        public int theme_id {
            get {
                return this.theme_idField;
            }
            set {
                this.theme_idField = value;
            }
        }
        
        /// <remarks/>
        public string external_id {
            get {
                return this.external_idField;
            }
            set {
                this.external_idField = value;
            }
        }
        
        /// <remarks/>
        public string last_login {
            get {
                return this.last_loginField;
            }
            set {
                this.last_loginField = value;
            }
        }
        
        /// <remarks/>
        public string user_text1 {
            get {
                return this.user_text1Field;
            }
            set {
                this.user_text1Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text2 {
            get {
                return this.user_text2Field;
            }
            set {
                this.user_text2Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text3 {
            get {
                return this.user_text3Field;
            }
            set {
                this.user_text3Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text4 {
            get {
                return this.user_text4Field;
            }
            set {
                this.user_text4Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text5 {
            get {
                return this.user_text5Field;
            }
            set {
                this.user_text5Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text6 {
            get {
                return this.user_text6Field;
            }
            set {
                this.user_text6Field = value;
            }
        }
        
        /// <remarks/>
        public bool is_group {
            get {
                return this.is_groupField;
            }
            set {
                this.is_groupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Tracker {
        
        private int tracker_idField;
        
        private int project_idField;
        
        private string tracker_nameField;
        
        private string descriptionField;
        
        private bool is_publicField;
        
        private bool restrict_browseField;
        
        private bool email_all_updatesField;
        
        private string email_addressField;
        
        private int due_periodField;
        
        private string submit_instructionsField;
        
        private string browse_instructionsField;
        
        private int datatypeField;
        
        private int item_totalField;
        
        private int open_countField;
        
        private bool show_dependencies_tabField;
        
        private bool show_duplicates_tabField;
        
        private bool show_associations_tabField;
        
        private bool show_time_tracking_tabField;
        
        private bool show_tags_tabField;
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string tracker_name {
            get {
                return this.tracker_nameField;
            }
            set {
                this.tracker_nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        public bool restrict_browse {
            get {
                return this.restrict_browseField;
            }
            set {
                this.restrict_browseField = value;
            }
        }
        
        /// <remarks/>
        public bool email_all_updates {
            get {
                return this.email_all_updatesField;
            }
            set {
                this.email_all_updatesField = value;
            }
        }
        
        /// <remarks/>
        public string email_address {
            get {
                return this.email_addressField;
            }
            set {
                this.email_addressField = value;
            }
        }
        
        /// <remarks/>
        public int due_period {
            get {
                return this.due_periodField;
            }
            set {
                this.due_periodField = value;
            }
        }
        
        /// <remarks/>
        public string submit_instructions {
            get {
                return this.submit_instructionsField;
            }
            set {
                this.submit_instructionsField = value;
            }
        }
        
        /// <remarks/>
        public string browse_instructions {
            get {
                return this.browse_instructionsField;
            }
            set {
                this.browse_instructionsField = value;
            }
        }
        
        /// <remarks/>
        public int datatype {
            get {
                return this.datatypeField;
            }
            set {
                this.datatypeField = value;
            }
        }
        
        /// <remarks/>
        public int item_total {
            get {
                return this.item_totalField;
            }
            set {
                this.item_totalField = value;
            }
        }
        
        /// <remarks/>
        public int open_count {
            get {
                return this.open_countField;
            }
            set {
                this.open_countField = value;
            }
        }
        
        /// <remarks/>
        public bool show_dependencies_tab {
            get {
                return this.show_dependencies_tabField;
            }
            set {
                this.show_dependencies_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_duplicates_tab {
            get {
                return this.show_duplicates_tabField;
            }
            set {
                this.show_duplicates_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_associations_tab {
            get {
                return this.show_associations_tabField;
            }
            set {
                this.show_associations_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_time_tracking_tab {
            get {
                return this.show_time_tracking_tabField;
            }
            set {
                this.show_time_tracking_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_tags_tab {
            get {
                return this.show_tags_tabField;
            }
            set {
                this.show_tags_tabField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerQueryField {
        
        private int tracker_query_idField;
        
        private string query_field_typeField;
        
        private int query_field_idField;
        
        private string query_field_valuesField;
        
        /// <remarks/>
        public int tracker_query_id {
            get {
                return this.tracker_query_idField;
            }
            set {
                this.tracker_query_idField = value;
            }
        }
        
        /// <remarks/>
        public string query_field_type {
            get {
                return this.query_field_typeField;
            }
            set {
                this.query_field_typeField = value;
            }
        }
        
        /// <remarks/>
        public int query_field_id {
            get {
                return this.query_field_idField;
            }
            set {
                this.query_field_idField = value;
            }
        }
        
        /// <remarks/>
        public string query_field_values {
            get {
                return this.query_field_valuesField;
            }
            set {
                this.query_field_valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerQuery {
        
        private int tracker_query_idField;
        
        private int tracker_idField;
        
        private int user_idField;
        
        private string query_nameField;
        
        private bool is_sharedField;
        
        /// <remarks/>
        public int tracker_query_id {
            get {
                return this.tracker_query_idField;
            }
            set {
                this.tracker_query_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string query_name {
            get {
                return this.query_nameField;
            }
            set {
                this.query_nameField = value;
            }
        }
        
        /// <remarks/>
        public bool is_shared {
            get {
                return this.is_sharedField;
            }
            set {
                this.is_sharedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemShort {
        
        private int tracker_idField;
        
        private int tracker_item_idField;
        
        private int status_idField;
        
        private int priorityField;
        
        private int submitted_byField;
        
        private string open_dateField;
        
        private string close_dateField;
        
        private string summaryField;
        
        private TrackerItemAssignee[] assigneesField;
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public int submitted_by {
            get {
                return this.submitted_byField;
            }
            set {
                this.submitted_byField = value;
            }
        }
        
        /// <remarks/>
        public string open_date {
            get {
                return this.open_dateField;
            }
            set {
                this.open_dateField = value;
            }
        }
        
        /// <remarks/>
        public string close_date {
            get {
                return this.close_dateField;
            }
            set {
                this.close_dateField = value;
            }
        }
        
        /// <remarks/>
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemAssignee[] assignees {
            get {
                return this.assigneesField;
            }
            set {
                this.assigneesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemAssignee {
        
        private int tracker_item_idField;
        
        private int assigneeField;
        
        private int percent_utilizationField;
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int assignee {
            get {
                return this.assigneeField;
            }
            set {
                this.assigneeField = value;
            }
        }
        
        /// <remarks/>
        public int percent_utilization {
            get {
                return this.percent_utilizationField;
            }
            set {
                this.percent_utilizationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemFull {
        
        private int tracker_idField;
        
        private int tracker_item_idField;
        
        private int status_idField;
        
        private int priorityField;
        
        private int submitted_byField;
        
        private string open_dateField;
        
        private string close_dateField;
        
        private string summaryField;
        
        private string detailsField;
        
        private string last_modified_dateField;
        
        private int last_modified_byField;
        
        private int sort_orderField;
        
        private int parent_idField;
        
        private TrackerExtraFieldData[] extra_field_dataField;
        
        private TrackerItemAssignee[] assigneesField;
        
        private TrackerItemMessage[] messagesField;
        
        private TrackerItemScmCommit[] scm_commitsField;
        
        private TrackerItemTime[] timesField;
        
        private TrackerItemDuplicate[] duplicatesField;
        
        private TrackerItemRelation[] relationsField;
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public int submitted_by {
            get {
                return this.submitted_byField;
            }
            set {
                this.submitted_byField = value;
            }
        }
        
        /// <remarks/>
        public string open_date {
            get {
                return this.open_dateField;
            }
            set {
                this.open_dateField = value;
            }
        }
        
        /// <remarks/>
        public string close_date {
            get {
                return this.close_dateField;
            }
            set {
                this.close_dateField = value;
            }
        }
        
        /// <remarks/>
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string last_modified_date {
            get {
                return this.last_modified_dateField;
            }
            set {
                this.last_modified_dateField = value;
            }
        }
        
        /// <remarks/>
        public int last_modified_by {
            get {
                return this.last_modified_byField;
            }
            set {
                this.last_modified_byField = value;
            }
        }
        
        /// <remarks/>
        public int sort_order {
            get {
                return this.sort_orderField;
            }
            set {
                this.sort_orderField = value;
            }
        }
        
        /// <remarks/>
        public int parent_id {
            get {
                return this.parent_idField;
            }
            set {
                this.parent_idField = value;
            }
        }
        
        /// <remarks/>
        public TrackerExtraFieldData[] extra_field_data {
            get {
                return this.extra_field_dataField;
            }
            set {
                this.extra_field_dataField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemAssignee[] assignees {
            get {
                return this.assigneesField;
            }
            set {
                this.assigneesField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemMessage[] messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemScmCommit[] scm_commits {
            get {
                return this.scm_commitsField;
            }
            set {
                this.scm_commitsField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemTime[] times {
            get {
                return this.timesField;
            }
            set {
                this.timesField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemDuplicate[] duplicates {
            get {
                return this.duplicatesField;
            }
            set {
                this.duplicatesField = value;
            }
        }
        
        /// <remarks/>
        public TrackerItemRelation[] relations {
            get {
                return this.relationsField;
            }
            set {
                this.relationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerExtraFieldData {
        
        private int tracker_extra_field_idField;
        
        private string field_dataField;
        
        private int tracker_extra_field_data_idField;
        
        private int tracker_item_idField;
        
        /// <remarks/>
        public int tracker_extra_field_id {
            get {
                return this.tracker_extra_field_idField;
            }
            set {
                this.tracker_extra_field_idField = value;
            }
        }
        
        /// <remarks/>
        public string field_data {
            get {
                return this.field_dataField;
            }
            set {
                this.field_dataField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_extra_field_data_id {
            get {
                return this.tracker_extra_field_data_idField;
            }
            set {
                this.tracker_extra_field_data_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemMessage {
        
        private int tracker_item_message_idField;
        
        private int tracker_item_idField;
        
        private int submitted_byField;
        
        private string adddateField;
        
        private string bodyField;
        
        /// <remarks/>
        public int tracker_item_message_id {
            get {
                return this.tracker_item_message_idField;
            }
            set {
                this.tracker_item_message_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int submitted_by {
            get {
                return this.submitted_byField;
            }
            set {
                this.submitted_byField = value;
            }
        }
        
        /// <remarks/>
        public string adddate {
            get {
                return this.adddateField;
            }
            set {
                this.adddateField = value;
            }
        }
        
        /// <remarks/>
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemScmCommit {
        
        private int tracker_item_idField;
        
        private int scm_commit_idField;
        
        private int project_idField;
        
        private string commit_dateField;
        
        private string message_logField;
        
        private int user_idField;
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int scm_commit_id {
            get {
                return this.scm_commit_idField;
            }
            set {
                this.scm_commit_idField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string commit_date {
            get {
                return this.commit_dateField;
            }
            set {
                this.commit_dateField = value;
            }
        }
        
        /// <remarks/>
        public string message_log {
            get {
                return this.message_logField;
            }
            set {
                this.message_logField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemTime {
        
        private int tracker_item_idField;
        
        private int tracker_item_time_idField;
        
        private int tracker_time_code_idField;
        
        private string date_entryField;
        
        private int user_idField;
        
        private double hoursField;
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_time_id {
            get {
                return this.tracker_item_time_idField;
            }
            set {
                this.tracker_item_time_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_time_code_id {
            get {
                return this.tracker_time_code_idField;
            }
            set {
                this.tracker_time_code_idField = value;
            }
        }
        
        /// <remarks/>
        public string date_entry {
            get {
                return this.date_entryField;
            }
            set {
                this.date_entryField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public double hours {
            get {
                return this.hoursField;
            }
            set {
                this.hoursField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemDuplicate {
        
        private int tracker_item_idField;
        
        private int duplicate_of_tracker_item_idField;
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int duplicate_of_tracker_item_id {
            get {
                return this.duplicate_of_tracker_item_idField;
            }
            set {
                this.duplicate_of_tracker_item_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItemRelation {
        
        private int tracker_item_idField;
        
        private int related_tracker_item_idField;
        
        private string link_typeField;
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int related_tracker_item_id {
            get {
                return this.related_tracker_item_idField;
            }
            set {
                this.related_tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public string link_type {
            get {
                return this.link_typeField;
            }
            set {
                this.link_typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerMyQueue {
        
        private int user_idField;
        
        private int tracker_item_idField;
        
        private int sort_orderField;
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int sort_order {
            get {
                return this.sort_orderField;
            }
            set {
                this.sort_orderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class TrackerItem {
        
        private int tracker_idField;
        
        private int tracker_item_idField;
        
        private int status_idField;
        
        private int priorityField;
        
        private int submitted_byField;
        
        private string open_dateField;
        
        private string close_dateField;
        
        private string summaryField;
        
        private string detailsField;
        
        private string last_modified_dateField;
        
        private int last_modified_byField;
        
        private int sort_orderField;
        
        private int parent_idField;
        
        /// <remarks/>
        public int tracker_id {
            get {
                return this.tracker_idField;
            }
            set {
                this.tracker_idField = value;
            }
        }
        
        /// <remarks/>
        public int tracker_item_id {
            get {
                return this.tracker_item_idField;
            }
            set {
                this.tracker_item_idField = value;
            }
        }
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public int submitted_by {
            get {
                return this.submitted_byField;
            }
            set {
                this.submitted_byField = value;
            }
        }
        
        /// <remarks/>
        public string open_date {
            get {
                return this.open_dateField;
            }
            set {
                this.open_dateField = value;
            }
        }
        
        /// <remarks/>
        public string close_date {
            get {
                return this.close_dateField;
            }
            set {
                this.close_dateField = value;
            }
        }
        
        /// <remarks/>
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string last_modified_date {
            get {
                return this.last_modified_dateField;
            }
            set {
                this.last_modified_dateField = value;
            }
        }
        
        /// <remarks/>
        public int last_modified_by {
            get {
                return this.last_modified_byField;
            }
            set {
                this.last_modified_byField = value;
            }
        }
        
        /// <remarks/>
        public int sort_order {
            get {
                return this.sort_orderField;
            }
            set {
                this.sort_orderField = value;
            }
        }
        
        /// <remarks/>
        public int parent_id {
            get {
                return this.parent_idField;
            }
            set {
                this.parent_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class DocmanProjectSetting {
        
        private int project_idField;
        
        private bool show_associations_tabField;
        
        private bool show_tags_tabField;
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public bool show_associations_tab {
            get {
                return this.show_associations_tabField;
            }
            set {
                this.show_associations_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_tags_tab {
            get {
                return this.show_tags_tabField;
            }
            set {
                this.show_tags_tabField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class DocmanFolder {
        
        private int docman_folder_idField;
        
        private int project_idField;
        
        private string folder_nameField;
        
        private bool is_publicField;
        
        private int parent_folder_idField;
        
        private int doc_countField;
        
        private int sort_orderField;
        
        /// <remarks/>
        public int docman_folder_id {
            get {
                return this.docman_folder_idField;
            }
            set {
                this.docman_folder_idField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string folder_name {
            get {
                return this.folder_nameField;
            }
            set {
                this.folder_nameField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        public int parent_folder_id {
            get {
                return this.parent_folder_idField;
            }
            set {
                this.parent_folder_idField = value;
            }
        }
        
        /// <remarks/>
        public int doc_count {
            get {
                return this.doc_countField;
            }
            set {
                this.doc_countField = value;
            }
        }
        
        /// <remarks/>
        public int sort_order {
            get {
                return this.sort_orderField;
            }
            set {
                this.sort_orderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class DocmanFileVersion {
        
        private int docman_file_version_idField;
        
        private int docman_file_idField;
        
        private string filenameField;
        
        private string create_dateField;
        
        private string changesField;
        
        private string version_numberField;
        
        private int created_byField;
        
        /// <remarks/>
        public int docman_file_version_id {
            get {
                return this.docman_file_version_idField;
            }
            set {
                this.docman_file_version_idField = value;
            }
        }
        
        /// <remarks/>
        public int docman_file_id {
            get {
                return this.docman_file_idField;
            }
            set {
                this.docman_file_idField = value;
            }
        }
        
        /// <remarks/>
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                this.create_dateField = value;
            }
        }
        
        /// <remarks/>
        public string changes {
            get {
                return this.changesField;
            }
            set {
                this.changesField = value;
            }
        }
        
        /// <remarks/>
        public string version_number {
            get {
                return this.version_numberField;
            }
            set {
                this.version_numberField = value;
            }
        }
        
        /// <remarks/>
        public int created_by {
            get {
                return this.created_byField;
            }
            set {
                this.created_byField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class DocmanFile {
        
        private int docman_file_idField;
        
        private int docman_folder_idField;
        
        private string descriptionField;
        
        private bool is_lockedField;
        
        /// <remarks/>
        public int docman_file_id {
            get {
                return this.docman_file_idField;
            }
            set {
                this.docman_file_idField = value;
            }
        }
        
        /// <remarks/>
        public int docman_folder_id {
            get {
                return this.docman_folder_idField;
            }
            set {
                this.docman_folder_idField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool is_locked {
            get {
                return this.is_lockedField;
            }
            set {
                this.is_lockedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class FrsProjectSetting {
        
        private int project_idField;
        
        private bool show_associations_tabField;
        
        private bool show_tags_tabField;
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public bool show_associations_tab {
            get {
                return this.show_associations_tabField;
            }
            set {
                this.show_associations_tabField = value;
            }
        }
        
        /// <remarks/>
        public bool show_tags_tab {
            get {
                return this.show_tags_tabField;
            }
            set {
                this.show_tags_tabField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class FrsReleaseStatus {
        
        private int status_idField;
        
        private string nameField;
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class FrsRelease {
        
        private int frs_release_idField;
        
        private int frs_package_idField;
        
        private string release_nameField;
        
        private string release_notesField;
        
        private string changesField;
        
        private int status_idField;
        
        private bool preformattedField;
        
        private string release_dateField;
        
        private int released_byField;
        
        private bool is_releasedField;
        
        /// <remarks/>
        public int frs_release_id {
            get {
                return this.frs_release_idField;
            }
            set {
                this.frs_release_idField = value;
            }
        }
        
        /// <remarks/>
        public int frs_package_id {
            get {
                return this.frs_package_idField;
            }
            set {
                this.frs_package_idField = value;
            }
        }
        
        /// <remarks/>
        public string release_name {
            get {
                return this.release_nameField;
            }
            set {
                this.release_nameField = value;
            }
        }
        
        /// <remarks/>
        public string release_notes {
            get {
                return this.release_notesField;
            }
            set {
                this.release_notesField = value;
            }
        }
        
        /// <remarks/>
        public string changes {
            get {
                return this.changesField;
            }
            set {
                this.changesField = value;
            }
        }
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public bool preformatted {
            get {
                return this.preformattedField;
            }
            set {
                this.preformattedField = value;
            }
        }
        
        /// <remarks/>
        public string release_date {
            get {
                return this.release_dateField;
            }
            set {
                this.release_dateField = value;
            }
        }
        
        /// <remarks/>
        public int released_by {
            get {
                return this.released_byField;
            }
            set {
                this.released_byField = value;
            }
        }
        
        /// <remarks/>
        public bool is_released {
            get {
                return this.is_releasedField;
            }
            set {
                this.is_releasedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class FrsPackage {
        
        private int frs_package_idField;
        
        private int project_idField;
        
        private string package_nameField;
        
        private int status_idField;
        
        private bool is_publicField;
        
        private bool require_loginField;
        
        /// <remarks/>
        public int frs_package_id {
            get {
                return this.frs_package_idField;
            }
            set {
                this.frs_package_idField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string package_name {
            get {
                return this.package_nameField;
            }
            set {
                this.package_nameField = value;
            }
        }
        
        /// <remarks/>
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                this.status_idField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        public bool require_login {
            get {
                return this.require_loginField;
            }
            set {
                this.require_loginField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class FilesystemData {
        
        private int filesystem_idField;
        
        private string file_dataField;
        
        /// <remarks/>
        public int filesystem_id {
            get {
                return this.filesystem_idField;
            }
            set {
                this.filesystem_idField = value;
            }
        }
        
        /// <remarks/>
        public string file_data {
            get {
                return this.file_dataField;
            }
            set {
                this.file_dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Filesystem {
        
        private int filesystem_idField;
        
        private string sectionField;
        
        private int ref_idField;
        
        private string file_nameField;
        
        private string file_name_safeField;
        
        private string file_typeField;
        
        private int file_sizeField;
        
        private bool deletedField;
        
        private int posted_byField;
        
        private int download_countField;
        
        private string download_urlField;
        
        /// <remarks/>
        public int filesystem_id {
            get {
                return this.filesystem_idField;
            }
            set {
                this.filesystem_idField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public int ref_id {
            get {
                return this.ref_idField;
            }
            set {
                this.ref_idField = value;
            }
        }
        
        /// <remarks/>
        public string file_name {
            get {
                return this.file_nameField;
            }
            set {
                this.file_nameField = value;
            }
        }
        
        /// <remarks/>
        public string file_name_safe {
            get {
                return this.file_name_safeField;
            }
            set {
                this.file_name_safeField = value;
            }
        }
        
        /// <remarks/>
        public string file_type {
            get {
                return this.file_typeField;
            }
            set {
                this.file_typeField = value;
            }
        }
        
        /// <remarks/>
        public int file_size {
            get {
                return this.file_sizeField;
            }
            set {
                this.file_sizeField = value;
            }
        }
        
        /// <remarks/>
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public int posted_by {
            get {
                return this.posted_byField;
            }
            set {
                this.posted_byField = value;
            }
        }
        
        /// <remarks/>
        public int download_count {
            get {
                return this.download_countField;
            }
            set {
                this.download_countField = value;
            }
        }
        
        /// <remarks/>
        public string download_url {
            get {
                return this.download_urlField;
            }
            set {
                this.download_urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class AuditTrail {
        
        private int audit_trail_idField;
        
        private string change_dateField;
        
        private int user_idField;
        
        private string sectionField;
        
        private int ref_idField;
        
        private string field_nameField;
        
        private string new_valueField;
        
        private string old_valueField;
        
        /// <remarks/>
        public int audit_trail_id {
            get {
                return this.audit_trail_idField;
            }
            set {
                this.audit_trail_idField = value;
            }
        }
        
        /// <remarks/>
        public string change_date {
            get {
                return this.change_dateField;
            }
            set {
                this.change_dateField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public int ref_id {
            get {
                return this.ref_idField;
            }
            set {
                this.ref_idField = value;
            }
        }
        
        /// <remarks/>
        public string field_name {
            get {
                return this.field_nameField;
            }
            set {
                this.field_nameField = value;
            }
        }
        
        /// <remarks/>
        public string new_value {
            get {
                return this.new_valueField;
            }
            set {
                this.new_valueField = value;
            }
        }
        
        /// <remarks/>
        public string old_value {
            get {
                return this.old_valueField;
            }
            set {
                this.old_valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class MemberWithRole {
        
        private int user_idField;
        
        private string unix_nameField;
        
        private string emailField;
        
        private int statusField;
        
        private string create_dateField;
        
        private string timezoneField;
        
        private string date_formatField;
        
        private string addressField;
        
        private string address2Field;
        
        private string phoneField;
        
        private string faxField;
        
        private string titleField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string country_codeField;
        
        private int language_idField;
        
        private int theme_idField;
        
        private string external_idField;
        
        private string last_loginField;
        
        private string user_text1Field;
        
        private string user_text2Field;
        
        private string user_text3Field;
        
        private string user_text4Field;
        
        private string user_text5Field;
        
        private string user_text6Field;
        
        private bool is_groupField;
        
        private Role[] rolesField;
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string unix_name {
            get {
                return this.unix_nameField;
            }
            set {
                this.unix_nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                this.create_dateField = value;
            }
        }
        
        /// <remarks/>
        public string timezone {
            get {
                return this.timezoneField;
            }
            set {
                this.timezoneField = value;
            }
        }
        
        /// <remarks/>
        public string date_format {
            get {
                return this.date_formatField;
            }
            set {
                this.date_formatField = value;
            }
        }
        
        /// <remarks/>
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string country_code {
            get {
                return this.country_codeField;
            }
            set {
                this.country_codeField = value;
            }
        }
        
        /// <remarks/>
        public int language_id {
            get {
                return this.language_idField;
            }
            set {
                this.language_idField = value;
            }
        }
        
        /// <remarks/>
        public int theme_id {
            get {
                return this.theme_idField;
            }
            set {
                this.theme_idField = value;
            }
        }
        
        /// <remarks/>
        public string external_id {
            get {
                return this.external_idField;
            }
            set {
                this.external_idField = value;
            }
        }
        
        /// <remarks/>
        public string last_login {
            get {
                return this.last_loginField;
            }
            set {
                this.last_loginField = value;
            }
        }
        
        /// <remarks/>
        public string user_text1 {
            get {
                return this.user_text1Field;
            }
            set {
                this.user_text1Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text2 {
            get {
                return this.user_text2Field;
            }
            set {
                this.user_text2Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text3 {
            get {
                return this.user_text3Field;
            }
            set {
                this.user_text3Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text4 {
            get {
                return this.user_text4Field;
            }
            set {
                this.user_text4Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text5 {
            get {
                return this.user_text5Field;
            }
            set {
                this.user_text5Field = value;
            }
        }
        
        /// <remarks/>
        public string user_text6 {
            get {
                return this.user_text6Field;
            }
            set {
                this.user_text6Field = value;
            }
        }
        
        /// <remarks/>
        public bool is_group {
            get {
                return this.is_groupField;
            }
            set {
                this.is_groupField = value;
            }
        }
        
        /// <remarks/>
        public Role[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Role {
        
        private int role_idField;
        
        private string role_nameField;
        
        private int project_idField;
        
        /// <remarks/>
        public int role_id {
            get {
                return this.role_idField;
            }
            set {
                this.role_idField = value;
            }
        }
        
        /// <remarks/>
        public string role_name {
            get {
                return this.role_nameField;
            }
            set {
                this.role_nameField = value;
            }
        }
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class ProjectWithRole {
        
        private int project_idField;
        
        private string project_nameField;
        
        private string unix_nameField;
        
        private string homepage_urlField;
        
        private bool is_publicField;
        
        private int statusField;
        
        private string descriptionField;
        
        private string register_purposeField;
        
        private string register_license_otherField;
        
        private string create_dateField;
        
        private int template_project_idField;
        
        private bool is_templateField;
        
        private int parent_project_idField;
        
        private string project_text1Field;
        
        private string project_text2Field;
        
        private string project_text3Field;
        
        private string project_text4Field;
        
        private string project_text5Field;
        
        private string project_text6Field;
        
        private Role[] rolesField;
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string project_name {
            get {
                return this.project_nameField;
            }
            set {
                this.project_nameField = value;
            }
        }
        
        /// <remarks/>
        public string unix_name {
            get {
                return this.unix_nameField;
            }
            set {
                this.unix_nameField = value;
            }
        }
        
        /// <remarks/>
        public string homepage_url {
            get {
                return this.homepage_urlField;
            }
            set {
                this.homepage_urlField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string register_purpose {
            get {
                return this.register_purposeField;
            }
            set {
                this.register_purposeField = value;
            }
        }
        
        /// <remarks/>
        public string register_license_other {
            get {
                return this.register_license_otherField;
            }
            set {
                this.register_license_otherField = value;
            }
        }
        
        /// <remarks/>
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                this.create_dateField = value;
            }
        }
        
        /// <remarks/>
        public int template_project_id {
            get {
                return this.template_project_idField;
            }
            set {
                this.template_project_idField = value;
            }
        }
        
        /// <remarks/>
        public bool is_template {
            get {
                return this.is_templateField;
            }
            set {
                this.is_templateField = value;
            }
        }
        
        /// <remarks/>
        public int parent_project_id {
            get {
                return this.parent_project_idField;
            }
            set {
                this.parent_project_idField = value;
            }
        }
        
        /// <remarks/>
        public string project_text1 {
            get {
                return this.project_text1Field;
            }
            set {
                this.project_text1Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text2 {
            get {
                return this.project_text2Field;
            }
            set {
                this.project_text2Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text3 {
            get {
                return this.project_text3Field;
            }
            set {
                this.project_text3Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text4 {
            get {
                return this.project_text4Field;
            }
            set {
                this.project_text4Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text5 {
            get {
                return this.project_text5Field;
            }
            set {
                this.project_text5Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text6 {
            get {
                return this.project_text6Field;
            }
            set {
                this.project_text6Field = value;
            }
        }
        
        /// <remarks/>
        public Role[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class ProjectTemplate {
        
        private int template_project_idField;
        
        private string project_nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int template_project_id {
            get {
                return this.template_project_idField;
            }
            set {
                this.template_project_idField = value;
            }
        }
        
        /// <remarks/>
        public string project_name {
            get {
                return this.project_nameField;
            }
            set {
                this.project_nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Project {
        
        private int project_idField;
        
        private string project_nameField;
        
        private string unix_nameField;
        
        private string homepage_urlField;
        
        private bool is_publicField;
        
        private int statusField;
        
        private string descriptionField;
        
        private string register_purposeField;
        
        private string register_license_otherField;
        
        private string create_dateField;
        
        private int template_project_idField;
        
        private bool is_templateField;
        
        private int parent_project_idField;
        
        private string project_text1Field;
        
        private string project_text2Field;
        
        private string project_text3Field;
        
        private string project_text4Field;
        
        private string project_text5Field;
        
        private string project_text6Field;
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string project_name {
            get {
                return this.project_nameField;
            }
            set {
                this.project_nameField = value;
            }
        }
        
        /// <remarks/>
        public string unix_name {
            get {
                return this.unix_nameField;
            }
            set {
                this.unix_nameField = value;
            }
        }
        
        /// <remarks/>
        public string homepage_url {
            get {
                return this.homepage_urlField;
            }
            set {
                this.homepage_urlField = value;
            }
        }
        
        /// <remarks/>
        public bool is_public {
            get {
                return this.is_publicField;
            }
            set {
                this.is_publicField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string register_purpose {
            get {
                return this.register_purposeField;
            }
            set {
                this.register_purposeField = value;
            }
        }
        
        /// <remarks/>
        public string register_license_other {
            get {
                return this.register_license_otherField;
            }
            set {
                this.register_license_otherField = value;
            }
        }
        
        /// <remarks/>
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                this.create_dateField = value;
            }
        }
        
        /// <remarks/>
        public int template_project_id {
            get {
                return this.template_project_idField;
            }
            set {
                this.template_project_idField = value;
            }
        }
        
        /// <remarks/>
        public bool is_template {
            get {
                return this.is_templateField;
            }
            set {
                this.is_templateField = value;
            }
        }
        
        /// <remarks/>
        public int parent_project_id {
            get {
                return this.parent_project_idField;
            }
            set {
                this.parent_project_idField = value;
            }
        }
        
        /// <remarks/>
        public string project_text1 {
            get {
                return this.project_text1Field;
            }
            set {
                this.project_text1Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text2 {
            get {
                return this.project_text2Field;
            }
            set {
                this.project_text2Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text3 {
            get {
                return this.project_text3Field;
            }
            set {
                this.project_text3Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text4 {
            get {
                return this.project_text4Field;
            }
            set {
                this.project_text4Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text5 {
            get {
                return this.project_text5Field;
            }
            set {
                this.project_text5Field = value;
            }
        }
        
        /// <remarks/>
        public string project_text6 {
            get {
                return this.project_text6Field;
            }
            set {
                this.project_text6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class DiskUsage {
        
        private int project_idField;
        
        private string check_dateField;
        
        private int bytes_usedField;
        
        /// <remarks/>
        public int project_id {
            get {
                return this.project_idField;
            }
            set {
                this.project_idField = value;
            }
        }
        
        /// <remarks/>
        public string check_date {
            get {
                return this.check_dateField;
            }
            set {
                this.check_dateField = value;
            }
        }
        
        /// <remarks/>
        public int bytes_used {
            get {
                return this.bytes_usedField;
            }
            set {
                this.bytes_usedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class CountryCode {
        
        private string country_nameField;
        
        private string ccodeField;
        
        /// <remarks/>
        public string country_name {
            get {
                return this.country_nameField;
            }
            set {
                this.country_nameField = value;
            }
        }
        
        /// <remarks/>
        public string ccode {
            get {
                return this.ccodeField;
            }
            set {
                this.ccodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Language {
        
        private int language_idField;
        
        private string nameField;
        
        private string filenameField;
        
        private string language_codeField;
        
        /// <remarks/>
        public int language_id {
            get {
                return this.language_idField;
            }
            set {
                this.language_idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public string language_code {
            get {
                return this.language_codeField;
            }
            set {
                this.language_codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gforgegroup.com")]
    public partial class Theme {
        
        private int theme_idField;
        
        private string dirnameField;
        
        private string fullnameField;
        
        /// <remarks/>
        public int theme_id {
            get {
                return this.theme_idField;
            }
            set {
                this.theme_idField = value;
            }
        }
        
        /// <remarks/>
        public string dirname {
            get {
                return this.dirnameField;
            }
            set {
                this.dirnameField = value;
            }
        }
        
        /// <remarks/>
        public string fullname {
            get {
                return this.fullnameField;
            }
            set {
                this.fullnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAssociationsCompletedEventHandler(object sender, getAssociationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssociationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssociationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Association[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Association[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addAssociationCompletedEventHandler(object sender, addAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteAssociationCompletedEventHandler(object sender, deleteAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTimezonesCompletedEventHandler(object sender, getTimezonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimezonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimezonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getSOAPVersionCompletedEventHandler(object sender, getSOAPVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSOAPVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSOAPVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getServerTimeCompletedEventHandler(object sender, getServerTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getThemesCompletedEventHandler(object sender, getThemesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThemesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getThemesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Theme[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Theme[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getThemeArrayCompletedEventHandler(object sender, getThemeArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThemeArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getThemeArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Theme[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Theme[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getThemeCompletedEventHandler(object sender, getThemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getThemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Theme Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Theme)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getLanguagesCompletedEventHandler(object sender, getLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Language[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Language[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getLanguageArrayCompletedEventHandler(object sender, getLanguageArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLanguageArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLanguageArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Language[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Language[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getLanguageCompletedEventHandler(object sender, getLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Language Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Language)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCountryCodesCompletedEventHandler(object sender, getCountryCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountryCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountryCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCountryCodeArrayCompletedEventHandler(object sender, getCountryCodeArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountryCodeArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountryCodeArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCountryCodeCompletedEventHandler(object sender, getCountryCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountryCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountryCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDiskUsagesCompletedEventHandler(object sender, getDiskUsagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDiskUsagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDiskUsagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiskUsage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiskUsage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserArrayCompletedEventHandler(object sender, getUserArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserArrayByUnixNameCompletedEventHandler(object sender, getUserArrayByUnixNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserArrayByUnixNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserArrayByUnixNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserByUnixNameCompletedEventHandler(object sender, getUserByUnixNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserByUnixNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserByUnixNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addUserCompletedEventHandler(object sender, addUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserProjectsCompletedEventHandler(object sender, getUserProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addUserGroupCompletedEventHandler(object sender, addUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getGroupUsersCompletedEventHandler(object sender, getGroupUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addGroupUserCompletedEventHandler(object sender, addGroupUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addGroupUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addGroupUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteGroupUserCompletedEventHandler(object sender, deleteGroupUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGroupUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGroupUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void activateUserCompletedEventHandler(object sender, activateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectTemplatesCompletedEventHandler(object sender, getProjectTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectsCompletedEventHandler(object sender, getProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectArrayCompletedEventHandler(object sender, getProjectArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectArrayByUnixNameCompletedEventHandler(object sender, getProjectArrayByUnixNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectArrayByUnixNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectArrayByUnixNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectCompletedEventHandler(object sender, getProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectByUnixNameCompletedEventHandler(object sender, getProjectByUnixNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectByUnixNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectByUnixNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteProjectCompletedEventHandler(object sender, deleteProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteProjectByUnixNameCompletedEventHandler(object sender, deleteProjectByUnixNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProjectByUnixNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProjectByUnixNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateProjectCompletedEventHandler(object sender, updateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addProjectCompletedEventHandler(object sender, addProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void approveProjectCompletedEventHandler(object sender, approveProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class approveProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal approveProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectMembersCompletedEventHandler(object sender, getProjectMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addUserProjectCompletedEventHandler(object sender, addUserProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteUserProjectCompletedEventHandler(object sender, deleteUserProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserProjectRolesCompletedEventHandler(object sender, getUserProjectRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserProjectRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserProjectRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getUserProjectsWithRolesCompletedEventHandler(object sender, getUserProjectsWithRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserProjectsWithRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserProjectsWithRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectWithRole[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectWithRole[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectRolesCompletedEventHandler(object sender, getProjectRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateProjectStatusCompletedEventHandler(object sender, updateProjectStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProjectStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProjectStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectMembersWithRolesCompletedEventHandler(object sender, getProjectMembersWithRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectMembersWithRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectMembersWithRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MemberWithRole[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MemberWithRole[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAuditTrailsCompletedEventHandler(object sender, getAuditTrailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuditTrailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuditTrailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditTrail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditTrail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAuditTrailArrayCompletedEventHandler(object sender, getAuditTrailArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuditTrailArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuditTrailArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditTrail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditTrail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAuditTrailCompletedEventHandler(object sender, getAuditTrailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuditTrailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuditTrailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditTrail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditTrail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFilesystemsCompletedEventHandler(object sender, getFilesystemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilesystemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilesystemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Filesystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Filesystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFilesystemArrayCompletedEventHandler(object sender, getFilesystemArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilesystemArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilesystemArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Filesystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Filesystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFilesystemDataArrayCompletedEventHandler(object sender, getFilesystemDataArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilesystemDataArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilesystemDataArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilesystemData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilesystemData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFilesystemCompletedEventHandler(object sender, getFilesystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilesystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilesystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Filesystem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Filesystem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFilesystemDataCompletedEventHandler(object sender, getFilesystemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilesystemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilesystemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilesystemData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilesystemData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteFilesystemCompletedEventHandler(object sender, deleteFilesystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFilesystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFilesystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addFilesystemCompletedEventHandler(object sender, addFilesystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFilesystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFilesystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTagEntriesCompletedEventHandler(object sender, getTagEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTagEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTagEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTagEntriesCompletedEventHandler(object sender, deleteTagEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTagEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTagEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTagEntriesCompletedEventHandler(object sender, addTagEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTagEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTagEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsPackagesCompletedEventHandler(object sender, getFrsPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsPackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsPackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsPackageArrayCompletedEventHandler(object sender, getFrsPackageArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsPackageArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsPackageArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsPackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsPackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsPackageCompletedEventHandler(object sender, getFrsPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsPackage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsPackage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteFrsPackageCompletedEventHandler(object sender, deleteFrsPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFrsPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFrsPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateFrsPackageCompletedEventHandler(object sender, updateFrsPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateFrsPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateFrsPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addFrsPackageCompletedEventHandler(object sender, addFrsPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFrsPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFrsPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsReleasesCompletedEventHandler(object sender, getFrsReleasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsRelease[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsRelease[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsReleaseArrayCompletedEventHandler(object sender, getFrsReleaseArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsReleaseArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsReleaseArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsRelease[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsRelease[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsReleaseCompletedEventHandler(object sender, getFrsReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsRelease Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsRelease)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteFrsReleaseCompletedEventHandler(object sender, deleteFrsReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFrsReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFrsReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateFrsReleaseCompletedEventHandler(object sender, updateFrsReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateFrsReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateFrsReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addFrsReleaseCompletedEventHandler(object sender, addFrsReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFrsReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFrsReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsReleaseStatusesCompletedEventHandler(object sender, getFrsReleaseStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsReleaseStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsReleaseStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsReleaseStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsReleaseStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setFrsProjectSettingsCompletedEventHandler(object sender, setFrsProjectSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFrsProjectSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFrsProjectSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getFrsProjectSettingsCompletedEventHandler(object sender, getFrsProjectSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsProjectSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsProjectSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsProjectSetting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsProjectSetting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFilesCompletedEventHandler(object sender, getDocmanFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFileArrayCompletedEventHandler(object sender, getDocmanFileArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFileArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFileArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFileCompletedEventHandler(object sender, getDocmanFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteDocmanFileCompletedEventHandler(object sender, deleteDocmanFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocmanFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocmanFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateDocmanFileCompletedEventHandler(object sender, updateDocmanFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocmanFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocmanFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addDocmanFileCompletedEventHandler(object sender, addDocmanFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDocmanFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDocmanFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFileVersionsCompletedEventHandler(object sender, getDocmanFileVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFileVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFileVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFileVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFileVersion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFileVersionArrayCompletedEventHandler(object sender, getDocmanFileVersionArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFileVersionArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFileVersionArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFileVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFileVersion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFileVersionCompletedEventHandler(object sender, getDocmanFileVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFileVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFileVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFileVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFileVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteDocmanFileVersionCompletedEventHandler(object sender, deleteDocmanFileVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocmanFileVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocmanFileVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addDocmanFileVersionCompletedEventHandler(object sender, addDocmanFileVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDocmanFileVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDocmanFileVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFoldersCompletedEventHandler(object sender, getDocmanFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFolder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFolder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFolderArrayCompletedEventHandler(object sender, getDocmanFolderArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFolderArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFolderArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFolder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFolder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanFolderCompletedEventHandler(object sender, getDocmanFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanFolder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanFolder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteDocmanFolderCompletedEventHandler(object sender, deleteDocmanFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocmanFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocmanFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateDocmanFolderCompletedEventHandler(object sender, updateDocmanFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocmanFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocmanFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addDocmanFolderCompletedEventHandler(object sender, addDocmanFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDocmanFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDocmanFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setDocmanProjectSettingsCompletedEventHandler(object sender, setDocmanProjectSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDocmanProjectSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDocmanProjectSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDocmanProjectSettingsCompletedEventHandler(object sender, getDocmanProjectSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocmanProjectSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocmanProjectSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocmanProjectSetting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocmanProjectSetting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldsCompletedEventHandler(object sender, getTrackerExtraFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldArrayCompletedEventHandler(object sender, getTrackerExtraFieldArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldCompletedEventHandler(object sender, getTrackerExtraFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraField Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraField)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerExtraFieldCompletedEventHandler(object sender, deleteTrackerExtraFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerExtraFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerExtraFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerExtraFieldCompletedEventHandler(object sender, updateTrackerExtraFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerExtraFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerExtraFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerExtraFieldCompletedEventHandler(object sender, addTrackerExtraFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerExtraFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerExtraFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldElementsCompletedEventHandler(object sender, getTrackerExtraFieldElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraFieldElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldElementArrayCompletedEventHandler(object sender, getTrackerExtraFieldElementArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldElementArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldElementArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraFieldElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldElementCompletedEventHandler(object sender, getTrackerExtraFieldElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraFieldElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraFieldElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerExtraFieldElementCompletedEventHandler(object sender, deleteTrackerExtraFieldElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerExtraFieldElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerExtraFieldElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerExtraFieldElementCompletedEventHandler(object sender, updateTrackerExtraFieldElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerExtraFieldElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerExtraFieldElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerExtraFieldElementCompletedEventHandler(object sender, addTrackerExtraFieldElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerExtraFieldElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerExtraFieldElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldDatasCompletedEventHandler(object sender, getTrackerExtraFieldDatasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldDatasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldDatasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraFieldData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraFieldData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerExtraFieldDataCompletedEventHandler(object sender, getTrackerExtraFieldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerExtraFieldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerExtraFieldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerExtraFieldData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerExtraFieldData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerExtraFieldDataCompletedEventHandler(object sender, updateTrackerExtraFieldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerExtraFieldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerExtraFieldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerExtraFieldDataCompletedEventHandler(object sender, addTrackerExtraFieldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerExtraFieldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerExtraFieldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemByExtraFieldDataCompletedEventHandler(object sender, getTrackerItemByExtraFieldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemByExtraFieldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemByExtraFieldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemsNewerThanExtraFieldCompletedEventHandler(object sender, getTrackerItemsNewerThanExtraFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemsNewerThanExtraFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemsNewerThanExtraFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemAssigneesCompletedEventHandler(object sender, getTrackerItemAssigneesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemAssigneesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemAssigneesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemAssignee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemAssignee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerItemAssigneeCompletedEventHandler(object sender, deleteTrackerItemAssigneeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerItemAssigneeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerItemAssigneeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerItemAssigneeCompletedEventHandler(object sender, updateTrackerItemAssigneeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerItemAssigneeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerItemAssigneeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemAssigneeCompletedEventHandler(object sender, addTrackerItemAssigneeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemAssigneeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemAssigneeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemMessagesCompletedEventHandler(object sender, getTrackerItemMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemMessageArrayCompletedEventHandler(object sender, getTrackerItemMessageArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemMessageArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemMessageArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemMessageCompletedEventHandler(object sender, getTrackerItemMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerItemMessageCompletedEventHandler(object sender, deleteTrackerItemMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerItemMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerItemMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemMessageCompletedEventHandler(object sender, addTrackerItemMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemScmCommitsCompletedEventHandler(object sender, getTrackerItemScmCommitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemScmCommitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemScmCommitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemScmCommit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemScmCommit[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemTimesCompletedEventHandler(object sender, getTrackerItemTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemTimeArrayCompletedEventHandler(object sender, getTrackerItemTimeArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemTimeArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemTimeArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemTimeCompletedEventHandler(object sender, getTrackerItemTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerItemTimeCompletedEventHandler(object sender, deleteTrackerItemTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerItemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerItemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerItemTimeCompletedEventHandler(object sender, updateTrackerItemTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerItemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerItemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemTimeCompletedEventHandler(object sender, addTrackerItemTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerMyQueuesCompletedEventHandler(object sender, getTrackerMyQueuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerMyQueuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerMyQueuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerMyQueue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerMyQueue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerMyQueueCompletedEventHandler(object sender, addTrackerMyQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerMyQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerMyQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemDuplicatesCompletedEventHandler(object sender, getTrackerItemDuplicatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemDuplicatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemDuplicatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemDuplicate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemDuplicate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemDuplicateCompletedEventHandler(object sender, addTrackerItemDuplicateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemDuplicateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemDuplicateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerItemDuplicateCompletedEventHandler(object sender, deleteTrackerItemDuplicateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerItemDuplicateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerItemDuplicateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemRelationsCompletedEventHandler(object sender, getTrackerItemRelationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemRelationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemRelationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemRelation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemRelation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerItemRelationCompletedEventHandler(object sender, deleteTrackerItemRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerItemRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerItemRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemRelationCompletedEventHandler(object sender, addTrackerItemRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemsCompletedEventHandler(object sender, getTrackerItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemsFullCompletedEventHandler(object sender, getTrackerItemsFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemsFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemsFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemFull[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemFull[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemArrayCompletedEventHandler(object sender, getTrackerItemArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemCompletedEventHandler(object sender, getTrackerItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemFullCompletedEventHandler(object sender, getTrackerItemFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemFull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemFull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerItemCompletedEventHandler(object sender, deleteTrackerItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerItemFullCompletedEventHandler(object sender, updateTrackerItemFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerItemFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerItemFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemCompletedEventHandler(object sender, addTrackerItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerItemFullCompletedEventHandler(object sender, addTrackerItemFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerItemFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerItemFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemsShortCompletedEventHandler(object sender, getTrackerItemsShortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemsShortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemsShortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemShort[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemShort[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerQuerysCompletedEventHandler(object sender, getTrackerQuerysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerQuerysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerQuerysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerQuery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerQuery[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerQueryArrayCompletedEventHandler(object sender, getTrackerQueryArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerQueryArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerQueryArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerQuery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerQuery[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerQueryCompletedEventHandler(object sender, getTrackerQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerQuery Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerQuery)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemsByQueryIdCompletedEventHandler(object sender, getTrackerItemsByQueryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemsByQueryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemsByQueryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerItemsFullByQueryIdCompletedEventHandler(object sender, getTrackerItemsFullByQueryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerItemsFullByQueryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerItemsFullByQueryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerItemFull[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerItemFull[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerQueryCompletedEventHandler(object sender, deleteTrackerQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerQueryCompletedEventHandler(object sender, updateTrackerQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerQueryCompletedEventHandler(object sender, addTrackerQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerQueryFieldsCompletedEventHandler(object sender, getTrackerQueryFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerQueryFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerQueryFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerQueryField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerQueryField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerQueryFieldCompletedEventHandler(object sender, deleteTrackerQueryFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerQueryFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerQueryFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerQueryFieldCompletedEventHandler(object sender, addTrackerQueryFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerQueryFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerQueryFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackersCompletedEventHandler(object sender, getTrackersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tracker[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tracker[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerArrayCompletedEventHandler(object sender, getTrackerArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tracker[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tracker[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerCompletedEventHandler(object sender, getTrackerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tracker Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tracker)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerFullCompletedEventHandler(object sender, getTrackerFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerFull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerFull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerCompletedEventHandler(object sender, deleteTrackerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerCompletedEventHandler(object sender, updateTrackerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerCompletedEventHandler(object sender, addTrackerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerTechniciansCompletedEventHandler(object sender, getTrackerTechniciansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerTechniciansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerTechniciansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerTimeCodesCompletedEventHandler(object sender, getTrackerTimeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerTimeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerTimeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerTimeCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerTimeCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerTimeCodeArrayCompletedEventHandler(object sender, getTrackerTimeCodeArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerTimeCodeArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerTimeCodeArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerTimeCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerTimeCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getTrackerTimeCodeCompletedEventHandler(object sender, getTrackerTimeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerTimeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerTimeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerTimeCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerTimeCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteTrackerTimeCodeCompletedEventHandler(object sender, deleteTrackerTimeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrackerTimeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrackerTimeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateTrackerTimeCodeCompletedEventHandler(object sender, updateTrackerTimeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTrackerTimeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTrackerTimeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addTrackerTimeCodeCompletedEventHandler(object sender, addTrackerTimeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrackerTimeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrackerTimeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolAssigneesCompletedEventHandler(object sender, getCruisecontrolAssigneesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolAssigneesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolAssigneesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolAssignee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolAssignee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addCruisecontrolAssigneeCompletedEventHandler(object sender, addCruisecontrolAssigneeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCruisecontrolAssigneeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCruisecontrolAssigneeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCruisecontrolAssigneeCompletedEventHandler(object sender, deleteCruisecontrolAssigneeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCruisecontrolAssigneeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCruisecontrolAssigneeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolBuildChangeUsersCompletedEventHandler(object sender, getCruisecontrolBuildChangeUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolBuildChangeUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolBuildChangeUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolBuildChangeUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolBuildChangeUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addCruisecontrolBuildChangeUserCompletedEventHandler(object sender, addCruisecontrolBuildChangeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCruisecontrolBuildChangeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCruisecontrolBuildChangeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCruisecontrolBuildChangeUserCompletedEventHandler(object sender, deleteCruisecontrolBuildChangeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCruisecontrolBuildChangeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCruisecontrolBuildChangeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolBuildsCompletedEventHandler(object sender, getCruisecontrolBuildsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolBuildsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolBuildsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolBuild[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolBuild[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolBuildArrayCompletedEventHandler(object sender, getCruisecontrolBuildArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolBuildArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolBuildArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolBuild[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolBuild[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolBuildCompletedEventHandler(object sender, getCruisecontrolBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolBuild Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolBuild)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCruisecontrolBuildCompletedEventHandler(object sender, deleteCruisecontrolBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCruisecontrolBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCruisecontrolBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateCruisecontrolBuildCompletedEventHandler(object sender, updateCruisecontrolBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCruisecontrolBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCruisecontrolBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addCruisecontrolBuildCompletedEventHandler(object sender, addCruisecontrolBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCruisecontrolBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCruisecontrolBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolDefectsCompletedEventHandler(object sender, getCruisecontrolDefectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolDefectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolDefectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolDefect[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolDefect[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolDefectArrayCompletedEventHandler(object sender, getCruisecontrolDefectArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolDefectArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolDefectArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolDefect[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolDefect[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolDefectCompletedEventHandler(object sender, getCruisecontrolDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolDefect Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolDefect)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCruisecontrolDefectCompletedEventHandler(object sender, deleteCruisecontrolDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCruisecontrolDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCruisecontrolDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateCruisecontrolDefectCompletedEventHandler(object sender, updateCruisecontrolDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCruisecontrolDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCruisecontrolDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addCruisecontrolDefectCompletedEventHandler(object sender, addCruisecontrolDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCruisecontrolDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCruisecontrolDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolPublishersCompletedEventHandler(object sender, getCruisecontrolPublishersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolPublishersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolPublishersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CruisecontrolPublisher[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CruisecontrolPublisher[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addCruisecontrolPublisherCompletedEventHandler(object sender, addCruisecontrolPublisherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCruisecontrolPublisherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCruisecontrolPublisherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCruisecontrolPublisherCompletedEventHandler(object sender, deleteCruisecontrolPublisherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCruisecontrolPublisherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCruisecontrolPublisherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolsCompletedEventHandler(object sender, getCruisecontrolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cruisecontrol[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cruisecontrol[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolArrayCompletedEventHandler(object sender, getCruisecontrolArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cruisecontrol[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cruisecontrol[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCruisecontrolCompletedEventHandler(object sender, getCruisecontrolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCruisecontrolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCruisecontrolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cruisecontrol Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cruisecontrol)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCruisecontrolCompletedEventHandler(object sender, deleteCruisecontrolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCruisecontrolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCruisecontrolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateCruisecontrolCompletedEventHandler(object sender, updateCruisecontrolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCruisecontrolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCruisecontrolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addCruisecontrolCompletedEventHandler(object sender, addCruisecontrolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCruisecontrolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCruisecontrolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectScmArrayCompletedEventHandler(object sender, getProjectScmArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectScmArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectScmArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectScm[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectScm[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getProjectScmCompletedEventHandler(object sender, getProjectScmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectScmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectScmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectScm Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectScm)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateProjectScmCompletedEventHandler(object sender, updateProjectScmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProjectScmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProjectScmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addProjectScmCompletedEventHandler(object sender, addProjectScmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProjectScmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProjectScmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumsCompletedEventHandler(object sender, getForumsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Forum[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Forum[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumArrayCompletedEventHandler(object sender, getForumArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Forum[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Forum[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumCompletedEventHandler(object sender, getForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Forum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Forum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateForumCompletedEventHandler(object sender, updateForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addForumCompletedEventHandler(object sender, addForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteForumCompletedEventHandler(object sender, deleteForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumThreadsCompletedEventHandler(object sender, getForumThreadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumThreadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumThreadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumThread[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumThread[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumThreadArrayCompletedEventHandler(object sender, getForumThreadArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumThreadArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumThreadArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumThread[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumThread[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumThreadCompletedEventHandler(object sender, getForumThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumThread Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumThread)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateForumThreadCompletedEventHandler(object sender, updateForumThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateForumThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateForumThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addForumThreadCompletedEventHandler(object sender, addForumThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addForumThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addForumThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteForumThreadCompletedEventHandler(object sender, deleteForumThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteForumThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteForumThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumMessagesCompletedEventHandler(object sender, getForumMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumMessageArrayCompletedEventHandler(object sender, getForumMessageArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumMessageArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumMessageArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getForumMessageCompletedEventHandler(object sender, getForumMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateForumMessageCompletedEventHandler(object sender, updateForumMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateForumMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateForumMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addForumMessageCompletedEventHandler(object sender, addForumMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addForumMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addForumMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteForumMessageCompletedEventHandler(object sender, deleteForumMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteForumMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteForumMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}
